{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2024-04-14T01:09:41.018346+00:00",
  "repo": "ietf-wg-privacypass/base-drafts",
  "labels": [
    {
      "name": "duplicate",
      "description": "This issue or pull request already exists",
      "color": "cfd3d7"
    },
    {
      "name": "help wanted",
      "description": "Extra attention is needed",
      "color": "3a9daa"
    },
    {
      "name": "question",
      "description": "Further information is requested",
      "color": "d876e3"
    },
    {
      "name": "wontfix",
      "description": "This will not be worked on",
      "color": "ffffff"
    },
    {
      "name": "protocol",
      "description": "",
      "color": "006b75"
    },
    {
      "name": "architecture",
      "description": "",
      "color": "8ddd4f"
    },
    {
      "name": "charter",
      "description": "Issues related to the WG charter",
      "color": "ffc9e8"
    },
    {
      "name": "centralization",
      "description": "",
      "color": "1E0DFA"
    },
    {
      "name": "not-ready",
      "description": "",
      "color": "d93f0b"
    },
    {
      "name": "auth-scheme",
      "description": "",
      "color": "0e8a16"
    },
    {
      "name": "editorial",
      "description": "",
      "color": "EAC584"
    }
  ],
  "issues": [
    {
      "number": 2,
      "id": "MDU6SXNzdWU1NzQ2OTIyODg=",
      "title": "Effective mechanism for identifying malicious servers",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/2",
      "state": "CLOSED",
      "author": "alxdavids",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "help wanted",
        "architecture"
      ],
      "body": "Need to provide recommendations for section {{recs-srvr}} in the pp-architecture draft. It seems to me that it is easy for individual clients to identify and react to servers that seem to be acting maliciously. For example, the client can monitor and reject key material from servers where the configuration was last modified very recently and how often the rotations seem to be occurring. However, I'm not exactly sure what the reporting mechanism should be to alert other clients to this behavior.",
      "createdAt": "2020-03-03T14:06:06Z",
      "updatedAt": "2022-06-28T10:59:41Z",
      "closedAt": "2022-06-28T10:59:41Z",
      "comments": [
        {
          "author": "claucece",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Mmm.. this is quite interesting. \r\n\r\nSomething that can be imposed to the server is to have a window of time in which rotations can't happen. I was thinking on something like this:\r\n\r\n* When a server updates their configuration (every 1 to 12 weeks as recommended), it does not immediately use this new configuration; but rather continues using the old one for shorter time frame (less than the 1 to 12 weeks, referred now as `t`), and makes clients aware of a new configuration that is coming. During `t`, the server cannot generate a new configuration. When `t` passes, the server starts using the new configuration (which clients can be sort of aware already). \r\n\r\nThis will make hard for a server to update in quick intervals, and that new configurations are not immediately used.\r\n\r\nI'm not sure about how much this will work, and I'll have to think more about it ;)\r\n\r\nSomething, that I don't know if is mentioned in the drafts is defining what happens is a server is rendered unavailable, in some sort of DoS. Maybe nothing can be done in that case...",
          "createdAt": "2020-03-23T08:03:39Z",
          "updatedAt": "2020-03-23T08:03:39Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "(Deleted spam comment)",
          "createdAt": "2022-02-09T22:59:47Z",
          "updatedAt": "2022-02-09T22:59:47Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "This has sort of been overcome by events. The architecture draft now states that clients can apply consistency checks, referencing another draft for ways that can be addressed. Closing as a result.",
          "createdAt": "2022-06-28T10:59:41Z",
          "updatedAt": "2022-06-28T10:59:41Z"
        }
      ]
    },
    {
      "number": 3,
      "id": "MDU6SXNzdWU1NzQ2OTM5MzM=",
      "title": "Should modified parameter hold times of ALL modifications?",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/3",
      "state": "CLOSED",
      "author": "alxdavids",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "architecture"
      ],
      "body": "Currently, the `modified` parameter in each server key configuration only includes the latest modification. Perhaps this parameter should be an array that holds ALL of the times when modifications occurred? This would allow clients to check the frequency of key rotations for detecting malicious server behavior?",
      "createdAt": "2020-03-03T14:08:43Z",
      "updatedAt": "2020-03-06T14:59:38Z",
      "closedAt": "2020-03-06T14:59:38Z",
      "comments": [
        {
          "author": "alxdavids",
          "authorAssociation": "COLLABORATOR",
          "body": "I've made a change that makes the value of `modified` in the config registry a vector, and all of the times when changes occur are appended to this vector.",
          "createdAt": "2020-03-06T14:59:38Z",
          "updatedAt": "2020-03-06T14:59:38Z"
        }
      ]
    },
    {
      "number": 5,
      "id": "MDU6SXNzdWU1Nzc2NDY0OTA=",
      "title": "Normalize setup",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/5",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "alxdavids"
      ],
      "labels": [],
      "body": "You seem to be using [this setup](https://github.com/martinthomson/i-d-template).\r\n\r\nThe usual method for having multiple drafts in a repo is to just drop multiple files in the root directory.  The approach you have works until you try to do CI integration or access more advanced features, like the primitive support that exists for cross-document citations.\r\n\r\nSee [QUIC](https://github.com/quicwg/base-drafts) for a complete and operational setup.",
      "createdAt": "2020-03-09T04:10:54Z",
      "updatedAt": "2020-03-16T18:38:50Z",
      "closedAt": "2020-03-16T18:38:50Z",
      "comments": []
    },
    {
      "number": 8,
      "id": "MDU6SXNzdWU1ODg3NDgzNTY=",
      "title": "incorrect link in readme on contributing",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/8",
      "state": "CLOSED",
      "author": "npdoty",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "\"guidelines for contributions\" links to some other WG (and its mailing list, etc.).",
      "createdAt": "2020-03-26T21:44:44Z",
      "updatedAt": "2020-06-25T14:22:28Z",
      "closedAt": "2020-06-25T14:22:28Z",
      "comments": []
    },
    {
      "number": 9,
      "id": "MDU6SXNzdWU1OTk0ODIyMjc=",
      "title": "Add motivating use-cases section",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/9",
      "state": "CLOSED",
      "author": "alxdavids",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "alxdavids"
      ],
      "labels": [
        "protocol"
      ],
      "body": "The Privacy Pass protocol was [originally designed](https://www.petsymposium.org/2018/files/papers/issue3/popets-2018-0026.pdf) as a response to providing an anonymous authorization users of anonymity-preserving services such as Tor. We should specify this motivating use-case (along with the applications that have arisen since) as a new section to the protocol document.\r\n\r\nThis will ensure that the standardisation of the protocol continues to be informed, and to be driven by, the key problems that we are trying to solve.\r\n\r\nFirst raised here: https://mailarchive.ietf.org/arch/msg/privacy-pass/7IXHIdXy7bEg3OMlScihmNKFRx4/",
      "createdAt": "2020-04-14T11:00:57Z",
      "updatedAt": "2020-07-09T10:26:00Z",
      "closedAt": "2020-07-09T10:26:00Z",
      "comments": [
        {
          "author": "alxdavids",
          "authorAssociation": "COLLABORATOR",
          "body": "Added in #33 ",
          "createdAt": "2020-07-09T10:26:00Z",
          "updatedAt": "2020-07-09T10:26:00Z"
        }
      ]
    },
    {
      "number": 10,
      "id": "MDU6SXNzdWU1OTk0ODYyNTc=",
      "title": "Establish assumed anonymity guarantees ",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/10",
      "state": "CLOSED",
      "author": "alxdavids",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "alxdavids"
      ],
      "labels": [
        "protocol",
        "architecture"
      ],
      "body": "Throughout the drafts we currently use terms such as `privacy-preserving` & `anonymity` without establishing what properties we are assuming when using these terms. As mentioned on the mailing list, we should align around consistent terminology for the guarantees that we are offering (`anonymous authorization`) and then define exactly what this means in our context. \r\n\r\nIn particular, `anonymity`/`anonymous` refers to the fact that client redemption tokens cannot be linked to any other tokens issued by a given Issuer.\r\n\r\nFirst raised here: https://mailarchive.ietf.org/arch/msg/privacy-pass/7IXHIdXy7bEg3OMlScihmNKFRx4/",
      "createdAt": "2020-04-14T11:07:42Z",
      "updatedAt": "2020-07-09T10:25:41Z",
      "closedAt": "2020-07-09T10:25:41Z",
      "comments": [
        {
          "author": "alxdavids",
          "authorAssociation": "COLLABORATOR",
          "body": "Updated anonymity guarantees as part of #33. The idea is that any instantiation of the protocol has to justify that it meets these guarantees to some appropriate extent. Either in the core pp-protocol doc, or in an extension.",
          "createdAt": "2020-07-09T10:25:40Z",
          "updatedAt": "2020-07-09T10:25:40Z"
        }
      ]
    },
    {
      "number": 11,
      "id": "MDU6SXNzdWU1OTk0OTA0NTk=",
      "title": "Add discussion on supporting additional metadata in issued tokens",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/11",
      "state": "CLOSED",
      "author": "alxdavids",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "protocol",
        "architecture"
      ],
      "body": "A number of applications expect the Servers to be able to add a small amount of metadata to the Privacy Pass protocol. We should add a discussion on how metadata should be added to tokens, and then describe the subsequent impact that this would have on the client's expected privacy budget. \r\n\r\nGenerally speaking, adding a bit of metadata to tokens is likely to have a very similar impact to introducing an extra Issuer, and so this is something that will have to be covered in the general parametrization guidelines in the architecture document. Specific mechanisms for adding metadata to tokens are yet to be proposed, but may appear as alternative instantiations in the protocol document, or be specified separately as individual extensions.",
      "createdAt": "2020-04-14T11:14:04Z",
      "updatedAt": "2020-07-07T17:29:58Z",
      "closedAt": "2020-07-07T17:29:58Z",
      "comments": []
    },
    {
      "number": 13,
      "id": "MDU6SXNzdWU2MTI2ODg0NzY=",
      "title": "IssuanceMessage should identify the target ServerUpdate",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/13",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "protocol"
      ],
      "body": "... so that servers know clients are using the right key and haven't been downgraded, for whatever reason. In ECHO, we indicate this with a hash of the ECHOConfig structure, which would probably do the trick here, too. For example:\r\n\r\n~~~\r\nstruct {\r\n    uint8 update_digest[32];\r\n     ClientIssuanceElement issue_element<1..n>\r\n} IssuanceMessage;\r\n~~~\r\n\r\nwhere `update_digest = SHA256(server_update)`, or something.\r\n",
      "createdAt": "2020-05-05T15:23:16Z",
      "updatedAt": "2020-07-09T10:26:37Z",
      "closedAt": "2020-07-09T10:26:37Z",
      "comments": [
        {
          "author": "alxdavids",
          "authorAssociation": "COLLABORATOR",
          "body": "The protocol doc now assumes that the ciphersuite is known apriori when retrieving the Server public key data.",
          "createdAt": "2020-07-09T10:26:36Z",
          "updatedAt": "2020-07-09T10:26:36Z"
        }
      ]
    },
    {
      "number": 14,
      "id": "MDU6SXNzdWU2MTI2ODg4MjI=",
      "title": "Rename IssuanceMessage to IssuanceRequest",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/14",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "protocol"
      ],
      "body": "This will match IssuanceResponse!",
      "createdAt": "2020-05-05T15:23:44Z",
      "updatedAt": "2020-10-16T14:25:27Z",
      "closedAt": "2020-10-16T14:25:22Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "This was fixed.",
          "createdAt": "2020-10-16T14:25:22Z",
          "updatedAt": "2020-10-16T14:25:27Z"
        }
      ]
    },
    {
      "number": 15,
      "id": "MDU6SXNzdWU2MTI2OTM5NDY=",
      "title": "Add \"configuration\" support",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/15",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "protocol"
      ],
      "body": "The main protocol document assumes that VOPRF is the main instantiation of PrivacyPass. It also has support for ciphersuites that augment this particular instantiation. It's not clear how we'd \"extend\" this protocol to support other features, such as public verifiability or the k-bits of metadata. These seem to be separate \"modes\" or \"configurations\" of PrivacyPass. (I don't think it makes sense to try and cast the metadata bit variant as a different ciphersuite for the main instantiation.) \r\n\r\nI propose we add some text describing different configurations. A configuration is an instantiation of the PrivacyPass API with certain properties. A configuration may (should?) also be extensible where applicable, e.g., in the ServerUpdate message or IssuanceRequest/Response messages. Interoperability across configurations would be unsupported, as they have would like have fundamentally different properties.\r\n\r\nSome initial configurations that come to mind are:\r\n- PrivacyPass with no metadata bits (VOPRF construction)\r\n- PrivacyPass with k metadata bits (Google's design)\r\n- PrivacyPass with public verifiability (blind signatures?)\r\n\r\ncc @alxdavids ",
      "createdAt": "2020-05-05T15:30:34Z",
      "updatedAt": "2020-07-09T10:27:54Z",
      "closedAt": "2020-07-09T10:27:53Z",
      "comments": [
        {
          "author": "alxdavids",
          "authorAssociation": "COLLABORATOR",
          "body": "Added some more information about supporting additional metadata in #32. As discussed elsewhere, I think the way to go here is for extensions to just specify new ciphersuites with associated privacy/security guarantees. ",
          "createdAt": "2020-07-09T10:27:53Z",
          "updatedAt": "2020-07-09T10:27:53Z"
        }
      ]
    },
    {
      "number": 16,
      "id": "MDU6SXNzdWU2MTI3MTQ2NjM=",
      "title": "Should ServerUpdate messages be versioned?",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/16",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "protocol"
      ],
      "body": "They don't currently have a version. That seems like something which would be good to add. Extension support seems useful, too, so we don't need to rev the version each time we need a small change.",
      "createdAt": "2020-05-05T16:00:44Z",
      "updatedAt": "2020-07-09T10:24:33Z",
      "closedAt": "2020-07-09T10:24:33Z",
      "comments": [
        {
          "author": "alxdavids",
          "authorAssociation": "COLLABORATOR",
          "body": "ServerUpdate does not exist anymore. New extensions should just add a new ciphersuite to the current enum. A server that uses an extension ciphersuite just specifies the ciphersuite with their public key data.",
          "createdAt": "2020-07-09T10:24:32Z",
          "updatedAt": "2020-07-09T10:24:32Z"
        }
      ]
    },
    {
      "number": 17,
      "id": "MDU6SXNzdWU2MTI3OTk1NTA=",
      "title": "Rename SecretKey to PrivateKey?",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/17",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "protocol"
      ],
      "body": "SecretKey, to me, implies a symmetric key. Can we make this PrivateKey? That's the terminology used (mostly) in RFC7748, at least.",
      "createdAt": "2020-05-05T18:16:59Z",
      "updatedAt": "2020-07-09T10:23:40Z",
      "closedAt": "2020-07-09T10:23:40Z",
      "comments": [
        {
          "author": "alxdavids",
          "authorAssociation": "COLLABORATOR",
          "body": "Done in #31 ",
          "createdAt": "2020-07-09T10:23:40Z",
          "updatedAt": "2020-07-09T10:23:40Z"
        }
      ]
    },
    {
      "number": 18,
      "id": "MDU6SXNzdWU2MTI3OTk5NzU=",
      "title": "Simplify ServerSetup",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/18",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "protocol"
      ],
      "body": "This function outputs a `ServerConfig` and `ServerUpdate`. It might simplify things if this just output a config, from which the update could be created. ",
      "createdAt": "2020-05-05T18:17:44Z",
      "updatedAt": "2020-07-09T10:28:48Z",
      "closedAt": "2020-07-09T10:28:48Z",
      "comments": [
        {
          "author": "alxdavids",
          "authorAssociation": "COLLABORATOR",
          "body": "Essentially this just corresponds to sampling a new keypair for a chosen ciphersuite now.",
          "createdAt": "2020-07-09T10:28:48Z",
          "updatedAt": "2020-07-09T10:28:48Z"
        }
      ]
    },
    {
      "number": 20,
      "id": "MDU6SXNzdWU2MTQ4MTMxNTY=",
      "title": "Guidance on issuer selection",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/20",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "architecture"
      ],
      "body": "(This might be done already, but just in case...)\r\n\r\nWe should probably provide guidance on how clients should pick issuers. For example, if a client is presented with a choice of two issuers, what does it do? Pick the same one and use it \"all the time,\" pick one at random, or something else? ",
      "createdAt": "2020-05-08T15:27:06Z",
      "updatedAt": "2021-02-19T19:48:10Z",
      "closedAt": "2021-02-19T19:48:09Z",
      "comments": [
        {
          "author": "alxdavids",
          "authorAssociation": "COLLABORATOR",
          "body": "I've added some advice on what Issuer features a Client should bear in mind when deciding which to choose. Do you think we still need advice on what to do if presented two at once? I imagine that the Client's should have hard-coded preferences.",
          "createdAt": "2020-07-09T10:21:03Z",
          "updatedAt": "2020-07-09T10:21:03Z"
        },
        {
          "author": "alxdavids",
          "authorAssociation": "COLLABORATOR",
          "body": "@chris-wood Any opinions on best way forward here, happy to tackle this as it doesn't seem like a huge problem.",
          "createdAt": "2021-02-19T14:57:11Z",
          "updatedAt": "2021-02-19T14:57:11Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "This might be something we punt on, as it's sort of akin to key discovery. I'll close this as such, given that you already have some text in the draft for it now.",
          "createdAt": "2021-02-19T19:48:09Z",
          "updatedAt": "2021-02-19T19:48:09Z"
        }
      ]
    },
    {
      "number": 21,
      "id": "MDU6SXNzdWU2MTQ4MTU0OTQ=",
      "title": "Define version/configuration registry",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/21",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "protocol",
        "architecture"
      ],
      "body": "It might be easiest to fully specify a Privacy Pass configuration, e.g., \"Privacy Pass based on curve448_hkdf_sha512_ell2_ro,\" with a single identifier. That same identifier could go in the `ServerUpdate` structure as a way of fully defining the properties of the structure. ",
      "createdAt": "2020-05-08T15:31:01Z",
      "updatedAt": "2020-07-09T10:23:04Z",
      "closedAt": "2020-07-09T10:23:04Z",
      "comments": [
        {
          "author": "alxdavids",
          "authorAssociation": "COLLABORATOR",
          "body": "Replaced Privacy Pass configuration with just a public key and associated ciphersuite. Changes to remove hard-coded key registry means that we don't have to be so prescriptive here anymore.",
          "createdAt": "2020-07-09T10:23:04Z",
          "updatedAt": "2020-07-09T10:23:04Z"
        }
      ]
    },
    {
      "number": 22,
      "id": "MDU6SXNzdWU2MTQ4NDQ4Mjg=",
      "title": "Add milestones to Charter",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/22",
      "state": "CLOSED",
      "author": "jsalowey",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "charter"
      ],
      "body": "Something like:\r\n\r\n- Specification of protocol & surrounding architecture  - February 2021\r\n- Specification of application-layer requirements (including HTTP integration) - March 20201\r\n- Specification of HTTP browser API (in coordination with W3C) - April 20201",
      "createdAt": "2020-05-08T16:24:49Z",
      "updatedAt": "2020-05-14T16:51:44Z",
      "closedAt": "2020-05-14T16:51:44Z",
      "comments": []
    },
    {
      "number": 23,
      "id": "MDU6SXNzdWU2MTQ4NDY3MTY=",
      "title": "Add formal analysis to charter text",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/23",
      "state": "CLOSED",
      "author": "jsalowey",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "charter"
      ],
      "body": "Formal analysis is important for new security protocols.   The charter should include this, maybe add something like this at the end of paragraph 4:\r\n\r\n\"Formal analysis of the protocol will make sure the security and privacy properties of the protocol\r\nare well-understood and well-documented.\"",
      "createdAt": "2020-05-08T16:28:23Z",
      "updatedAt": "2020-05-15T15:38:31Z",
      "closedAt": "2020-05-15T15:38:31Z",
      "comments": [
        {
          "author": "alxdavids",
          "authorAssociation": "COLLABORATOR",
          "body": "This was done.",
          "createdAt": "2020-05-15T15:38:31Z",
          "updatedAt": "2020-05-15T15:38:31Z"
        }
      ]
    },
    {
      "number": 24,
      "id": "MDU6SXNzdWU2MTkwMDczMTM=",
      "title": "Rewrite privacy analysis based on properties of keys",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/24",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "architecture"
      ],
      "body": "The keys should not be rotated too frequently, for example. We can then refer to the existence of some mechanism that allows us to check this property, such as a log or registry. (We can then move the registry information out of the architecture document and into a separate one entirely.)",
      "createdAt": "2020-05-15T14:28:43Z",
      "updatedAt": "2020-07-09T10:21:30Z",
      "closedAt": "2020-07-09T10:21:29Z",
      "comments": [
        {
          "author": "alxdavids",
          "authorAssociation": "COLLABORATOR",
          "body": "This was done in #35 ",
          "createdAt": "2020-07-09T10:21:29Z",
          "updatedAt": "2020-07-09T10:21:29Z"
        }
      ]
    },
    {
      "number": 30,
      "id": "MDU6SXNzdWU2NDU2MDYxNzI=",
      "title": "Update usage of VOPRF API",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/30",
      "state": "CLOSED",
      "author": "alxdavids",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "protocol"
      ],
      "body": "API has been updated at https://github.com/cfrg/draft-irtf-cfrg-voprf/ quite substantially.",
      "createdAt": "2020-06-25T14:23:29Z",
      "updatedAt": "2020-07-07T17:28:04Z",
      "closedAt": "2020-07-07T17:28:04Z",
      "comments": []
    },
    {
      "number": 34,
      "id": "MDU6SXNzdWU2NDczODIzOTU=",
      "title": "Move some form of protocol interfaces to HTTP API doc",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/34",
      "state": "CLOSED",
      "author": "alxdavids",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "architecture"
      ],
      "body": "We currently have interfaces in the architecture document that lay out how messages should be sent and received. I think the architecture document should be solely focused on the building of the ecosystem in a way that maintains the utility of the privacy and security guarantees made by the protocol. The interfaces are mainly used by the HTTP API doc, and so I think this will be a better home for them.",
      "createdAt": "2020-06-29T13:35:25Z",
      "updatedAt": "2020-07-09T10:22:06Z",
      "closedAt": "2020-07-09T10:22:06Z",
      "comments": [
        {
          "author": "alxdavids",
          "authorAssociation": "COLLABORATOR",
          "body": "I've removed the interfaces from the architecture doc (#35) and used the protocol API directly in the HTTP doc (#37)",
          "createdAt": "2020-07-09T10:22:06Z",
          "updatedAt": "2020-07-09T10:22:06Z"
        }
      ]
    },
    {
      "number": 39,
      "id": "MDU6SXNzdWU2NTQ4MTI3NjQ=",
      "title": "Determine threshold for metadata bits (bytes?)",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/39",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "architecture"
      ],
      "body": "Different applications may want different numbers of metadata bits. This number should probably be bounded, otherwise Privacy Pass... is not so private. ",
      "createdAt": "2020-07-10T14:14:59Z",
      "updatedAt": "2021-02-18T17:51:04Z",
      "closedAt": "2021-02-18T17:51:04Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "I think this is done with the current parameterization text. So, closing.",
          "createdAt": "2021-02-18T17:51:03Z",
          "updatedAt": "2021-02-18T17:51:03Z"
        }
      ]
    },
    {
      "number": 40,
      "id": "MDU6SXNzdWU2NTQ4MTQ1NTI=",
      "title": "Define extension for public verifiability",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/40",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [
        "protocol",
        "not-ready"
      ],
      "body": "Per the charter.",
      "createdAt": "2020-07-10T14:17:42Z",
      "updatedAt": "2022-02-04T21:47:14Z",
      "closedAt": "2022-02-04T21:47:14Z",
      "comments": [
        {
          "author": "alxdavids",
          "authorAssociation": "COLLABORATOR",
          "body": "Potential instantiation highlighted by @wbl on the mailing list: https://mailarchive.ietf.org/arch/msg/privacy-pass/BDOOhSLwB3uUJcfBiss6nUF5sUA/. Do we want to consider any other schemes?",
          "createdAt": "2020-08-11T11:37:21Z",
          "updatedAt": "2020-08-11T11:37:21Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Resolved in #87.",
          "createdAt": "2022-02-04T21:47:14Z",
          "updatedAt": "2022-02-04T21:47:14Z"
        }
      ]
    },
    {
      "number": 42,
      "id": "MDU6SXNzdWU2NTQ5NjgyOTY=",
      "title": "Define extension for private metadata bit variant",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/42",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "protocol",
        "not-ready"
      ],
      "body": "We say it's possible, but let's be a bit more concrete.",
      "createdAt": "2020-07-10T18:41:47Z",
      "updatedAt": "2022-06-27T19:12:50Z",
      "closedAt": "2022-06-27T19:12:49Z",
      "comments": [
        {
          "author": "alxdavids",
          "authorAssociation": "COLLABORATOR",
          "body": "I think this will depend on having a draft specification of the underlying cryptographic functionality.",
          "createdAt": "2020-08-11T09:49:36Z",
          "updatedAt": "2020-08-11T09:49:36Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Just so this is on the record somewhere: https://eprint.iacr.org/2020/072  (which is one possible version of the crypto for this).",
          "createdAt": "2021-09-14T01:18:41Z",
          "updatedAt": "2021-09-14T01:18:41Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Now that the protocol and architecture are configured to allow extensibility by new token types, I'm going to close this issue for now. When the time comes that we feel we want to introduce an issuance protocol with private metadata, one can cut an individual draft that defines it without any changes to the architecture, protocol, or auth-scheme docs. ",
          "createdAt": "2022-06-27T19:12:49Z",
          "updatedAt": "2022-06-27T19:12:49Z"
        }
      ]
    },
    {
      "number": 44,
      "id": "MDU6SXNzdWU2OTY2Njk5NDM=",
      "title": "Specify redemption mode in public config",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/44",
      "state": "CLOSED",
      "author": "alxdavids",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "architecture",
        "not-ready"
      ],
      "body": "Servers should specify accepted redemption modes that they allow as a list associated with their public configuration. This would be a subset of the list `[\"single\", \"proxy\", \"async\", \"public\"]` corresponding to the redemptions modes in https://tools.ietf.org/html/draft-davidson-pp-architecture-01#section-5.\r\n\r\nIn all modes except \"single\" we should also allow optional specification of _allowed_ verifiers that can ask for tokens on the server's behalf. If one of these verifiers asks for a client token associated with the server, then the client will first check this list to ensure that the verifier exists before sending the token. This ensures that clients don't reveal which tokens they hold to untrusted verifiers.\r\n\r\ncc @chris-wood @dvorak42 ",
      "createdAt": "2020-09-09T09:54:40Z",
      "updatedAt": "2022-01-31T20:25:10Z",
      "closedAt": "2022-01-31T20:25:09Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Interesting. To what extent are these modes determined by the underlying cryptographic protocol? (The public redemption mode, for example, is certainly dependent on the underlying protocol.) ",
          "createdAt": "2021-02-18T18:49:58Z",
          "updatedAt": "2021-02-18T18:49:58Z"
        },
        {
          "author": "alxdavids",
          "authorAssociation": "COLLABORATOR",
          "body": "So the first 3 modes are essentially all symmetric running modes, but they should be agnostic to the specific choice of protocol. In deed `public` requires public-key analogues of Privacy Pass, but it shouldn't depend on the actual instantiation (in terms of cryptographic ciphersuite). Does this answer your question?",
          "createdAt": "2021-02-19T14:50:26Z",
          "updatedAt": "2021-02-19T14:50:26Z"
        },
        {
          "author": "alxdavids",
          "authorAssociation": "COLLABORATOR",
          "body": "Requires moe discussion around what information is allowed in the config. This change would imply allowing identifiers for verifiers in the config, which could be URLs etc, but this may narrow use-cases. We should think about this more.",
          "createdAt": "2021-02-19T16:32:08Z",
          "updatedAt": "2021-02-19T16:32:08Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "It *seems* like a configuration should contain the minimal cryptographic information necessary to run the protocol securely. But this is indeed quite interesting because *who* clients run the protocol with may impact security. We could maybe allow for (sequences of) opaque identifiers to be provided in the config? Not sure. ",
          "createdAt": "2021-02-19T16:54:24Z",
          "updatedAt": "2021-02-19T16:54:24Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Overcome by events. Closing.",
          "createdAt": "2022-01-31T20:25:09Z",
          "updatedAt": "2022-01-31T20:25:09Z"
        }
      ]
    },
    {
      "number": 45,
      "id": "MDU6SXNzdWU2OTY2NzI0MjA=",
      "title": "Improve documentation on centralization",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/45",
      "state": "CLOSED",
      "author": "alxdavids",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "centralization"
      ],
      "body": "There should be documentation that addresses the risks of the centralization in the current Privacy Pass architecture with potential solutions. This was raised in the previous WG meeting: https://codimd.ietf.org/notes-ietf-108-privacypass.\r\n\r\nThis documentation should either be incorporated into the architecture document as a section when discussing the shape of the ecosystem, and/or security considerations. There is also the option of declaring a separate document for addressing this.",
      "createdAt": "2020-09-09T09:58:04Z",
      "updatedAt": "2022-07-01T18:45:31Z",
      "closedAt": "2022-07-01T18:45:31Z",
      "comments": [
        {
          "author": "alxdavids",
          "authorAssociation": "COLLABORATOR",
          "body": "A draft has been put forward for this by Mark McFadden: https://tools.ietf.org/html/draft-mcfadden-pp-centralization-problem-00, and will be discussed at IETF 110. Will leave this open for now, until this draft (or some form of it) is accepted.",
          "createdAt": "2021-02-19T14:54:30Z",
          "updatedAt": "2021-02-19T14:54:30Z"
        }
      ]
    },
    {
      "number": 46,
      "id": "MDU6SXNzdWU2OTY2OTkzNTc=",
      "title": "Remove exposure of token in proxied-verifier",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/46",
      "state": "CLOSED",
      "author": "alxdavids",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "protocol",
        "architecture",
        "not-ready"
      ],
      "body": "Currently, in the proxied-verifier server running mode, the entire redemption token is sent to the server. However, we may be able to avoid this by only sending the initial `data` inside the RedemptionRequest, and keeping the `tag` and `info` at the proxy. This is because `data` is operated on under the server key, while the rest of the information is just added to a hash function evaluation. This means that the token issuer only sees the token (and can then implement double-spending protection based on this), but nothing else about the request to the verifier.\r\n\r\nThe change will probably drop the requirement for the `VerifyFinalize` API in the VOPRF doc, which is also advantageous. Originally discussed with @chris-wood, @siyengar, and Zutian Luo.",
      "createdAt": "2020-09-09T10:36:58Z",
      "updatedAt": "2022-01-31T20:24:56Z",
      "closedAt": "2022-01-31T20:24:55Z",
      "comments": [
        {
          "author": "alxdavids",
          "authorAssociation": "COLLABORATOR",
          "body": "@chris-wood, I will take a look at this today. It would be nice to have this in ahead of the PrivateStats ciphersuites.. ",
          "createdAt": "2021-02-19T14:52:16Z",
          "updatedAt": "2021-02-19T14:52:16Z"
        },
        {
          "author": "alxdavids",
          "authorAssociation": "COLLABORATOR",
          "body": "I don't think that we're quite ready to move forward with this, but we can consider it for a future draft release.",
          "createdAt": "2021-02-21T09:12:34Z",
          "updatedAt": "2021-02-21T09:12:34Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Overcome by events. Closing.",
          "createdAt": "2022-01-31T20:24:55Z",
          "updatedAt": "2022-01-31T20:24:55Z"
        }
      ]
    },
    {
      "number": 47,
      "id": "MDU6SXNzdWU3MjMyNzQyODk=",
      "title": "Describe negative consequences of centralization",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/47",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "architecture"
      ],
      "body": "We don't have a good way to address this (now), so we should minimally acknowledge the risks and consequences.",
      "createdAt": "2020-10-16T14:26:54Z",
      "updatedAt": "2021-02-18T18:48:09Z",
      "closedAt": "2021-02-18T18:48:09Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Dupe of #45. Closing.",
          "createdAt": "2021-02-18T18:48:09Z",
          "updatedAt": "2021-02-18T18:48:09Z"
        }
      ]
    },
    {
      "number": 48,
      "id": "MDU6SXNzdWU3MjMyNzY5MTg=",
      "title": "Describe privacy implications of underlying transport protocol(s)",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/48",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "architecture"
      ],
      "body": "Token issuance and redemption flows from the same IP address, for example, would be linkable, but this isn't a break in the privacy pass protocol. We should discuss these orthogonal privacy considerations.",
      "createdAt": "2020-10-16T14:30:16Z",
      "updatedAt": "2021-02-19T14:51:14Z",
      "closedAt": "2021-02-19T14:51:14Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "I think this is already addressed [in the draft](https://github.com/ietf-wg-privacypass/base-drafts/blob/master/draft-ietf-privacypass-architecture.md#client-identifying-information-client-ip). @alxdavids, if you agree, can you please close this?",
          "createdAt": "2021-02-18T18:47:24Z",
          "updatedAt": "2021-02-18T18:47:32Z"
        },
        {
          "author": "alxdavids",
          "authorAssociation": "COLLABORATOR",
          "body": "Yep, good point, closing.",
          "createdAt": "2021-02-19T14:51:14Z",
          "updatedAt": "2021-02-19T14:51:14Z"
        }
      ]
    },
    {
      "number": 49,
      "id": "MDU6SXNzdWU3NTA5MTI0NzU=",
      "title": "Token expiration",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/49",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "architecture"
      ],
      "body": "There's currently no text around token expiration. Minimally, we could say that tokens expire when issuer (and verifier) keys rotate. Do we also want to bake in mechanisms for expiration to be cryptographically bound to issued tokens? For example, one might imagine using PMB-like constructions to encode an expiration \"epoch\" into the metadata bits. The single metadata bit variant would allow two epochs that way. \r\n\r\n@dvorak42, @alxdavids: what do you think?",
      "createdAt": "2020-11-25T15:26:43Z",
      "updatedAt": "2021-02-19T14:47:18Z",
      "closedAt": "2021-02-19T14:47:18Z",
      "comments": [
        {
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "body": "I'm not sure what baking the expiry into the tokens gives that can't be managed by rotating the issuer/verifier keys (or using public metadata (which is effectively the key used to sign))? That way issuers that care about more fine grained token expiration use the key rotation for that and issuers that only care about coarse token expiration use it for other metadata, allowing the protocol to treat both in the same way?",
          "createdAt": "2020-11-30T16:30:53Z",
          "updatedAt": "2020-11-30T16:30:53Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Yeah, I think the only two options are (a) rotate keys or (b) include the expiry information as public metadata (and need not be tied to the key used to sign). I'm not advocating for one or the other. \r\n\r\n> That way issuers that care about more fine grained token expiration use the key rotation for that and issuers that only care about coarse token expiration use it for other metadata, allowing the protocol to treat both in the same way?\r\n\r\nSure, that's reasonable. We should probably have text on this point. (That's partly why I filed this issue.)",
          "createdAt": "2020-11-30T16:34:34Z",
          "updatedAt": "2020-11-30T16:34:34Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "We should also make sure to note that the validity window does narrow the anonymity set.",
          "createdAt": "2020-12-11T22:50:12Z",
          "updatedAt": "2020-12-11T22:50:12Z"
        }
      ]
    },
    {
      "number": 50,
      "id": "MDU6SXNzdWU3NTQ5MjYwODU=",
      "title": "Accommodating two round protocols",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/50",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "alxdavids"
      ],
      "labels": [
        "protocol",
        "architecture"
      ],
      "body": "Some protocols, like [blind Schnorr signature schemes](https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.3.6950&rep=rep1&type=pdf), require more than 1 round trip to complete. Currently, the protocol assumes a protocol that runs in one round trip, with some offline public key distribution step. In particular, issuance request messages are mapped almost directly to the underlying OPRF blind/request message. \r\n\r\nWe should consider what needs to change, if anything, to accommodate these differently shaped protocols. I suggest we loosen the 1-1 restriction (?) from the Privacy Pass API to the underlying cryptographic protocol APIs. It just so happens that Privacy Pass maps nicely to the OPRF construction, but that need not be the case. For example, and hand waving over details, in the blind Schnorr case, an implementation of the issuance request flow could involve first fetching the nonce commitment from the server, and then sending a blinded value for evaluation. \r\n\r\n@dvorak42, what do you think?",
      "createdAt": "2020-12-02T04:21:45Z",
      "updatedAt": "2021-03-05T13:16:11Z",
      "closedAt": "2021-03-05T13:16:11Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "@alxdavids what do you want to do here? Should we refactor the protocol to run in two rounds? Perhaps something like the following:\r\n\r\n- CommitRequest\r\n- CommitResponse\r\n- IssueRequest\r\n- IssueResponse\r\n\r\nDuring the commitment flow (first round trip), the server can provide any sort of nonce or whatever is needed for the underlying protocol. ",
          "createdAt": "2021-02-18T18:54:27Z",
          "updatedAt": "2021-02-18T18:54:27Z"
        },
        {
          "author": "alxdavids",
          "authorAssociation": "COLLABORATOR",
          "body": "I think that sounds fine. Presumably in this architecture, the CommitRequest from the Client will mostly be an empty message (at least for 3-round protocols)?",
          "createdAt": "2021-02-19T14:45:56Z",
          "updatedAt": "2021-02-19T14:45:56Z"
        },
        {
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "body": "For 1 round protocols, would the key commitment/configuration could be used to provide a 'default' result to the CommitResponse, either hardcoded as part of the version (or some parameter in the configuration)?",
          "createdAt": "2021-02-19T15:01:00Z",
          "updatedAt": "2021-02-19T15:01:00Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "> For 1 round protocols, would the key commitment/configuration could be used to provide a 'default' result to the CommitResponse, either hardcoded as part of the version (or some parameter in the configuration)?\r\n\r\nNot sure! We'd have to play with it and see what works.",
          "createdAt": "2021-02-19T16:02:42Z",
          "updatedAt": "2021-02-19T16:02:42Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "@alxdavids will draft a PR based on the commit request/response flow, where the response includes some implementation-specific handle to state needed for the subsequent issuance flow. For one round protocols, the handle will be a fixed (empty?) string passed to the issuance flow.",
          "createdAt": "2021-02-19T16:18:44Z",
          "updatedAt": "2021-02-19T16:18:44Z"
        },
        {
          "author": "alxdavids",
          "authorAssociation": "COLLABORATOR",
          "body": "I think this has been fixed by #62, @chris-wood to confirm? ",
          "createdAt": "2021-03-05T09:34:28Z",
          "updatedAt": "2021-03-05T09:34:28Z"
        }
      ]
    },
    {
      "number": 51,
      "id": "MDU6SXNzdWU3NjMwMTI2NjU=",
      "title": "Expand metadata discussion",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/51",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "protocol",
        "architecture"
      ],
      "body": "There are several dimensions to metadata, including:\r\n\r\n- public vs private\r\n- verifiable vs non-verifiable\r\n- bounded or arbitrary-length\r\n\r\nIt's worth expanding on these dimensions. For example, the underlying cryptographic primitive may influence or limit one or more of these dimensions in a variety of ways. Also, whether metadata is public or private, or verifiable or not, is important for privacy reasons. (If metadata can't be verified, is it a tracking vector? Can private metadata track clients?)\r\n\r\nIn general, expounding upon these issues would likely be quite valuable for the draft.",
      "createdAt": "2020-12-11T22:49:16Z",
      "updatedAt": "2021-02-18T17:56:04Z",
      "closedAt": "2021-02-18T17:56:04Z",
      "comments": []
    },
    {
      "number": 52,
      "id": "MDU6SXNzdWU3NzU2ODg2NzE=",
      "title": "Safari Extension",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/52",
      "state": "CLOSED",
      "author": "balupton",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-12-29T04:17:39Z",
      "updatedAt": "2021-01-04T12:34:42Z",
      "closedAt": "2021-01-04T12:34:42Z",
      "comments": [
        {
          "author": "alxdavids",
          "authorAssociation": "COLLABORATOR",
          "body": "I don't think there is any work associated with specific browsers that is going to be considered in this working group, so I'm going to close this.",
          "createdAt": "2021-01-04T12:34:42Z",
          "updatedAt": "2021-01-04T12:34:42Z"
        }
      ]
    },
    {
      "number": 53,
      "id": "MDU6SXNzdWU3NzY2OTMyNjE=",
      "title": "A related work: privacy-preserving asynchronous Single Sign-On (EL PASSO)",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/53",
      "state": "CLOSED",
      "author": "Zhiyi-Zhang",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "Hi there,\r\n\r\nWe have been working on privacy-preserving Single Sign-On and we found our work, called EL PASSO, is very closely related to Privacy Pass.\r\nEL PASSO implements anonymous credentials, enables selective attribute disclosure, and allows users to prove properties about their identity without revealing it in the clear.\r\nWe also have accountability designed in: when a user misbehaves on a relying party, the relying party can report the user to authorities to reveal the identity of that user.\r\nThere are other interesting features in EL PASSO like inter-RP unlinkability and intro-RP linkability that can provide desired security properties.\r\n\r\nA preprint version can be found on arXiv: https://arxiv.org/abs/2002.10289 and a final version will appear in PETS 2021.\r\nWe hope this work can provide some useful input to Privacy Pass and we are also looking forward to future collaborations with Privacy Pass.",
      "createdAt": "2020-12-31T00:38:25Z",
      "updatedAt": "2021-01-05T16:50:08Z",
      "closedAt": "2021-01-05T16:50:08Z",
      "comments": [
        {
          "author": "bemasc",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@Zhiyi-Zhang Thanks for reaching out to Privacy Pass! Could you please [join the mailing list](https://www.ietf.org/mailman/listinfo/privacy-pass) and send this message there?  We use Github primarily for editing the text of draft documents, not for general discussions of new material.",
          "createdAt": "2021-01-05T16:50:08Z",
          "updatedAt": "2021-01-05T16:50:08Z"
        }
      ]
    },
    {
      "number": 63,
      "id": "MDU6SXNzdWU4MTI4NzUyNjk=",
      "title": "Accommodate client and server metadata ",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/63",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "protocol"
      ],
      "body": "The APIs currently do not allow clients or servers to supply metadata into the issuance flow. Absent a slot for metadata, how would one implement the PMB or the PrivateStats variants? One way would be to add client public metadata to the Generate API, and server public and private metadata to the Issue API, and communicate these in the requests and responses as needed. The instantiations/ciphersuites could then impose limits on these inputs as needed. For example, the PMB variant might limit the server private metadata to a single byte of value 0x00 or 0x01, and the public metadata would be empty. \r\n\r\n@dvorak42, would that be workable?\r\n",
      "createdAt": "2021-02-21T15:04:15Z",
      "updatedAt": "2022-02-09T22:59:17Z",
      "closedAt": "2022-02-09T22:59:16Z",
      "comments": [
        {
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "body": "I'd guess it would be cleanest in the Issue API, especially for the private metadata variant, but seems like a reasonable way. The PrivateStats variant may need a bit more to support larger amounts of public metadata.",
          "createdAt": "2021-03-09T15:58:09Z",
          "updatedAt": "2021-03-09T15:58:09Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Cool. I'll prep a PR!",
          "createdAt": "2021-03-09T21:47:44Z",
          "updatedAt": "2021-03-09T21:47:44Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "I think we can close this now that some issuance protocols admit public metadata.",
          "createdAt": "2022-02-09T22:59:16Z",
          "updatedAt": "2022-02-09T22:59:16Z"
        }
      ]
    },
    {
      "number": 65,
      "id": "MDU6SXNzdWU4MjYxNTE5ODE=",
      "title": "Update Privacy Calculations in Architecture Document",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/65",
      "state": "CLOSED",
      "author": "dvorak42",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [
        "architecture"
      ],
      "body": "The privacy calculations should be updated to take into account metadata more explicitly, and take into account the cost of the number of redemptions, rather than the global issuer count.\r\n\r\nIf used in a multiple disjoint architecture ecosystem, then the math should also be taken in terms of a specific 'context' rather than treating the whole PrivacyPass ecosystem as a single global system (allowing for more nuanced requirements/limitations on issuer counts).",
      "createdAt": "2021-03-09T15:59:47Z",
      "updatedAt": "2022-07-01T18:46:09Z",
      "closedAt": "2022-07-01T18:46:09Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "On reflection, we may be better off deleting the text entirely and making sure the justification for the parameterization is adequately covered in the security and privacy considerations elsewhere in the document. ",
          "createdAt": "2022-06-27T19:10:43Z",
          "updatedAt": "2022-06-27T19:10:43Z"
        }
      ]
    },
    {
      "number": 66,
      "id": "MDU6SXNzdWU4MzAzMTcxMjU=",
      "title": "Add redemption contexts",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/66",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "dvorak42"
      ],
      "labels": [],
      "body": "As discussed during IETF 110, the architecture document should provide guidance on how redemption contexts can be used and how they impact privacy. This is a bit of the calculus we don't yet have.\r\n\r\ncc @dvorak42, @alxdavids ",
      "createdAt": "2021-03-12T17:28:51Z",
      "updatedAt": "2021-07-09T15:09:59Z",
      "closedAt": "2021-07-09T15:09:59Z",
      "comments": [
        {
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "body": "Yeah, this likely needs to be embedded both into the Architecture draft for the generic concept of a context, and then an actual instantiation of redemption contexts in the HTTP API doc.",
          "createdAt": "2021-03-12T17:35:43Z",
          "updatedAt": "2021-03-12T17:35:43Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Yep \ud83d\udc4d should we split out the HTTP work into a separate issue?",
          "createdAt": "2021-03-12T18:01:58Z",
          "updatedAt": "2021-03-12T18:01:58Z"
        }
      ]
    },
    {
      "number": 67,
      "id": "MDU6SXNzdWU4NDkzMTk3NzE=",
      "title": "Refactoring the redemption flow",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/67",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [],
      "body": "Currently, RedemptionRequest messages have the following structure:\r\n\r\n```\r\nstruct {\r\n  opaque data<1..2^16-1>; // input to the token issuance flow\r\n  opaque tag<1..2^16-1>;  // output of the token issuance flow\r\n  opaque info<1..2^16-1>; // application information bound to the token\r\n} RedemptionRequest;\r\n```\r\n\r\nThis has a couple of interesting properties. First, anyone with access to `data` can replay it in the issuance flow and compute `tag`. We might be able to address that by making the redemption flow a two round protocol, similar to what we've done for the issuance flow, or by allowing clients to encrypt `data` under the redeemer's public key. Or something else entirely.\r\n\r\nSecond, `tag` effectively authenticates `info`. Is there any reason why we couldn't merge these two fields and encrypt the latter with an AEAD? And if we were to do that, perhaps we could simplify the redemption interface and have it produce a secret that applications use as needed? Specifically, the `Redeem` function might return a secret rather than a `RedemptionRequest`. Turning the redemption API into an Export-like interface might help accommodate different application use cases.\r\n\r\ncc @armfazh, @siyengar, @dvorak42",
      "createdAt": "2021-04-02T16:21:56Z",
      "updatedAt": "2021-12-17T13:20:26Z",
      "closedAt": "2021-12-17T13:20:26Z",
      "comments": [
        {
          "author": "siyengar",
          "authorAssociation": "NONE",
          "body": "I was actually thinking that since associating tag with info doesn't seem to solve a real problem, we could simplify this by just sending the token and unblinded voprf output without needing an info field to be involved in the first place.",
          "createdAt": "2021-04-02T20:59:08Z",
          "updatedAt": "2021-04-02T20:59:21Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "> I was actually thinking that since associating tag with info doesn't seem to solve a real problem\r\n\r\nThis is the part I don't quite understand. The `tag` _is_ the VOPRF output. It's proof that the client previously went through the issuance flow with the server given input `data`. (The current draft's usage of the VOPRF API is out of date.) ",
          "createdAt": "2021-04-02T21:02:36Z",
          "updatedAt": "2021-04-02T21:02:36Z"
        },
        {
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "body": "Rather, the VOPRF spec has the output as a binding of the token itself with the unblinded token. I think to get the behavior you want here, the PrivacyPass spec should indicate that the input into the Redeem API can just be the empty string when not used, or just remove the info parameter complretely from Redeem and pass the empty string into the VOPRF Finalize API.",
          "createdAt": "2021-04-02T21:08:25Z",
          "updatedAt": "2021-04-02T21:08:25Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "> I think to get the behavior you want here, the PrivacyPass spec should indicate that the input into the Redeem API can just be the empty string when not used, or just remove the info parameter complretely from Redeem and pass the empty string into the VOPRF Finalize API.\r\n\r\nThis seems to be the crux of the issue here: `info` is no longer present in the VOPRF Finalize API :-)\r\n\r\nSo we can probably drop it from Redeem, and have the token output be returned (as proposed above). This is separate from whether or not we need to account for replay attacks on the token `input` with two rounds or encryption, I think.",
          "createdAt": "2021-04-02T21:10:06Z",
          "updatedAt": "2021-04-02T21:10:06Z"
        },
        {
          "author": "siyengar",
          "authorAssociation": "NONE",
          "body": "Ya sorry the last statement was a bit confusing.\r\n\r\nYa I think you're right, getting rid of info should solve the problem. And then call it VOPRF_output rather than a tag.\r\n\r\nIt seems like these 2 apis are out of sync \r\n\r\nhttps://cfrg.github.io/draft-irtf-cfrg-voprf/draft-irtf-cfrg-voprf.html#name-finalize\r\nFinalize(input, blind, evaluatedElement)\r\n\r\nhttps://ietf-wg-privacypass.github.io/base-drafts/draft-ietf-privacypass-protocol.html#name-redeem-2\r\nFinalize(token.data, token.issued, info)\r\n\r\n\r\n\r\n",
          "createdAt": "2021-04-05T20:18:59Z",
          "updatedAt": "2021-04-05T20:18:59Z"
        }
      ]
    },
    {
      "number": 68,
      "id": "MDU6SXNzdWU4OTQ0MTg4MDM=",
      "title": "RFC8446 vector syntax is used incorrectly",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/68",
      "state": "CLOSED",
      "author": "tgr",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "The [Data structures section](https://github.com/ietf-wg-privacypass/base-drafts/blob/master/draft-ietf-privacypass-protocol.md#data-structures-pp-structs) of the protocol draft says *\"data structures ... are written in the TLS presentation language (RFC8446)\"*. Per [RFC8446 3.4](https://datatracker.ietf.org/doc/html/rfc8446#section-3.4),  vectors are defined as `<item type> <vector type>[n]` where n is the length of the vector in **bytes**. (*\"In either case, the length declares the number of bytes, not the number of elements, in the vector.\"*) In the draft, though, the length is specified by number of items, not number of bytes.",
      "createdAt": "2021-05-18T14:01:33Z",
      "updatedAt": "2021-07-09T15:09:50Z",
      "closedAt": "2021-07-09T15:09:50Z",
      "comments": []
    },
    {
      "number": 69,
      "id": "MDU6SXNzdWU5MDM3NDk1ODA=",
      "title": "Redemption is not working at all",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/69",
      "state": "CLOSED",
      "author": "TsukiZero",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "Neither for hCaptcha nor for Cloudflare",
      "createdAt": "2021-05-27T13:26:28Z",
      "updatedAt": "2021-05-31T14:30:47Z",
      "closedAt": "2021-05-31T14:30:47Z",
      "comments": [
        {
          "author": "alxdavids",
          "authorAssociation": "COLLABORATOR",
          "body": "This project isn't linked to https://github.com/privacypass/challenge-bypass-extension, please post an issue there.",
          "createdAt": "2021-05-31T14:30:47Z",
          "updatedAt": "2021-05-31T14:30:47Z"
        }
      ]
    },
    {
      "number": 77,
      "id": "MDU6SXNzdWU5NDA3OTcwNjI=",
      "title": "Pin protocol messages to underlying cryptographic scheme",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/77",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [],
      "body": "Protocols like VOPRF and blind RSA/BLS have different semantics and wire images. As an example, batching seems to be a per-crypto-protocol property. VOPRF supports it, whereas BLS/RSA do not.\r\n\r\nTrying to map these to a shared wire format seems a bit awkward. I recommend we parameterize all PP protocol messages based on the underlying cryptographic construction. So, for example:\r\n\r\n```\r\nenum {\r\n\tVOPRF,\r\n\tBlindRSA,\r\n} Protocol;\r\n\r\nstruct {\r\n\tProtocol proto;\r\n\tuint16 length; // allows skipping over unknown protocols\r\n\tselect (proto) {\r\n\t\tcase VOPRF:\r\n\t\t\topaque blind_elements<1..2^16-1>;\r\n  \t\tcase BlindRSA:\r\n  \t\t\topaque blinded_msg[kLen];\r\n\t}\r\n} IssuanceRequest;\r\n\r\nstruct {\r\n\tProtocol proto;\r\n\tuint16 length; // allows skipping over unknown protocols\r\n\tselect (proto) {\r\n\t\tcase VOPRF:\r\n\t\t\tIssuedToken tokens[m];\r\n  \t\t\topaque proof<1..2^16-1>;\r\n  \t\tcase BlindRSA:\r\n  \t\t\topaque blind_sig[kLen];\r\n\t}\r\n} IssuanceResponse;\r\n```\r\n\r\n(The same should probably apply to redemption messages as well.)\r\n\r\nWe can then refactor the document to only specify how these protocol messages are constructed and parsed, rather than specify how implementation-specific details should work.",
      "createdAt": "2021-07-09T14:05:22Z",
      "updatedAt": "2021-12-17T13:20:52Z",
      "closedAt": "2021-12-17T13:20:52Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing as overcome by events.",
          "createdAt": "2021-12-17T13:20:52Z",
          "updatedAt": "2021-12-17T13:20:52Z"
        }
      ]
    },
    {
      "number": 80,
      "id": "MDU6SXNzdWU5NTQyMzEwMTY=",
      "title": "Redemption -> Verify?",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/80",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "We currently have two sub-protocols: Issuance and Redemption. Redemption effectively gives the Privacy Pass token to someone else to verify using whatever is the underlying cryptographic protocol. Should we redefine Redemption as such? In particular, imagine we had a sub-protocol called `Verify`, which may or may not be interactive depending on the underlying cryptographic protocol. Redemption could then simply be:\r\n\r\n- Reveal token to the relying party\r\n- Relying party runs Verify\r\n\r\nWe might even consider punting the reveal step to the protocol wrapping Privacy Pass. The fact that tokens change hands before verification _seems_ external to the protocol. ",
      "createdAt": "2021-07-27T20:13:02Z",
      "updatedAt": "2021-12-17T13:20:40Z",
      "closedAt": "2021-12-17T13:20:39Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing as overcome by events.",
          "createdAt": "2021-12-17T13:20:39Z",
          "updatedAt": "2021-12-17T13:20:39Z"
        }
      ]
    },
    {
      "number": 89,
      "id": "I_kwDODeTEy85BCbEM",
      "title": "0x170DBdd337bA421fED5498279a61db29B66aB37d",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/89",
      "state": "CLOSED",
      "author": "phyo734",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "0x170DBdd337bA421fED5498279a61db29B66aB37d\r\n\r\n_Originally posted by @phyo734 in https://github.com/ietf-wg-privacypass/base-drafts/issues/2#issuecomment-1003064394_",
      "createdAt": "2021-12-30T14:58:25Z",
      "updatedAt": "2021-12-30T18:31:51Z",
      "closedAt": "2021-12-30T18:31:51Z",
      "comments": []
    },
    {
      "number": 90,
      "id": "I_kwDODeTEy85CwDs-",
      "title": "Expand upon correlation attacks and mitigations",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/90",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [
        "architecture"
      ],
      "body": "In the architecture document, we should have more discussion of correlation attacks and ways to mitigate. For example, interactive vs non-interactive tokens can making timing correlation attacks more or less relevant. For mitigations, the deployment model of issuer/origin (and attester) can make a difference.",
      "createdAt": "2022-01-31T20:22:24Z",
      "updatedAt": "2022-03-05T16:49:12Z",
      "closedAt": "2022-03-05T16:49:12Z",
      "comments": []
    },
    {
      "number": 93,
      "id": "I_kwDODeTEy85DCLrG",
      "title": "Add issuance test vectors",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/93",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [
        "protocol"
      ],
      "body": "These test vectors should cover the whole flow of the protocol, starting with the `TokenChallenge` input and producing a `Token` output.",
      "createdAt": "2022-02-04T21:46:44Z",
      "updatedAt": "2022-03-07T15:27:08Z",
      "closedAt": "2022-03-07T15:27:08Z",
      "comments": []
    },
    {
      "number": 95,
      "id": "I_kwDODeTEy85DC-wf",
      "title": "youtube",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/95",
      "state": "CLOSED",
      "author": "jheng21",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "m.me/AgentJenny143",
      "createdAt": "2022-02-05T06:56:48Z",
      "updatedAt": "2022-02-05T16:54:17Z",
      "closedAt": "2022-02-05T16:54:17Z",
      "comments": []
    },
    {
      "number": 96,
      "id": "I_kwDODeTEy85DI5H9",
      "title": "HTTP examples",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/96",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [
        "protocol"
      ],
      "body": "See [Mark's original issue](https://github.com/tfpauly/privacy-proxy/issues/160#issue-1125596987).",
      "createdAt": "2022-02-07T19:26:59Z",
      "updatedAt": "2022-03-02T17:11:12Z",
      "closedAt": "2022-03-02T17:11:12Z",
      "comments": []
    },
    {
      "number": 98,
      "id": "I_kwDODeTEy85Dd-X7",
      "title": "https://support.google.com/youtube/thread/149769645?hl=en",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/98",
      "state": "CLOSED",
      "author": "jheng21",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "https://discord.gg/SVNV8Rv2",
      "createdAt": "2022-02-11T07:09:05Z",
      "updatedAt": "2022-02-11T12:17:49Z",
      "closedAt": "2022-02-11T12:17:49Z",
      "comments": []
    },
    {
      "number": 102,
      "id": "I_kwDODeTEy85FjQc4",
      "title": "Challenge and cookie cache",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/102",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "auth-scheme"
      ],
      "body": "From: https://github.com/tfpauly/privacy-proxy/issues/105\r\n\r\n@chris-wood said:\r\n> Servers can offer multiple challenges in a WWW-Authenticate header to let the client fetch a pile of tokens for future spending. For tracking reasons, the lifetime of these should be bound to any cookie state associated with the origin. In particular, if the client wipes its cookies for the origin, then it should also clear any challenge state. It's possible for the server to encode client-specific information in the TokenChallenge.redemption_nonce, so we need to ensure this doesn't turn into a different type of tracking vector.",
      "createdAt": "2022-03-11T21:03:43Z",
      "updatedAt": "2022-03-15T20:15:16Z",
      "closedAt": "2022-03-15T20:15:16Z",
      "comments": []
    },
    {
      "number": 103,
      "id": "I_kwDODeTEy85FjYzH",
      "title": "Rename redemption_nonce to redemption_context",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/103",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "tfpauly"
      ],
      "labels": [
        "auth-scheme"
      ],
      "body": "We should consider renaming `redemption_nonce` to `redemption_context`. This value doesn't need to be a nonce, it's just some origin-selected context that it is binding to.\r\n\r\nWe can also rename the `context` in the Token struct to `challenge_digest` to make it clear what role it has.",
      "createdAt": "2022-03-11T21:43:38Z",
      "updatedAt": "2022-03-14T18:08:37Z",
      "closedAt": "2022-03-14T18:08:37Z",
      "comments": []
    },
    {
      "number": 104,
      "id": "I_kwDODeTEy85FjZAX",
      "title": "Per-origin and cross-origin implications on double spend state",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/104",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [
        "architecture",
        "auth-scheme"
      ],
      "body": "Origins currently choose whether their challenges are per-origin or cross-origin. For cross-origin, double-spend prevention is only as good as the coordination between origins and the Issuer. Per-origin allows double-spend prevention to be isolated to a single origin; also prevents the cache of tokens being take up by some other origin.",
      "createdAt": "2022-03-11T21:44:52Z",
      "updatedAt": "2022-07-01T18:45:52Z",
      "closedAt": "2022-07-01T18:45:52Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Write this as \"any origins that share a redemption context must also share double spend state for that context.\"",
          "createdAt": "2022-06-13T19:12:54Z",
          "updatedAt": "2022-06-13T19:12:54Z"
        }
      ]
    },
    {
      "number": 108,
      "id": "I_kwDODeTEy85GTRJb",
      "title": "Consider including multiple origin names in TokenChallenge",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/108",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "tfpauly"
      ],
      "labels": [
        "auth-scheme"
      ],
      "body": "From Ted Hardie in Vienna.",
      "createdAt": "2022-03-24T12:35:11Z",
      "updatedAt": "2022-03-30T21:33:59Z",
      "closedAt": "2022-03-30T21:33:59Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "We should also clarify more explicitly how the client uses the origin name field for validating the context it is in.",
          "createdAt": "2022-03-28T19:13:23Z",
          "updatedAt": "2022-03-28T19:13:23Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "Leaning towards allowing the `origin_name` being able to be a list of hostnames, with comma separation.",
          "createdAt": "2022-03-28T19:17:13Z",
          "updatedAt": "2022-03-28T19:17:13Z"
        },
        {
          "author": "smhendrickson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "+1 to csv. We think this keeps the client impl's simple while allowing for the added flexibility of origin sets.",
          "createdAt": "2022-03-28T19:17:52Z",
          "updatedAt": "2022-03-28T19:17:52Z"
        },
        {
          "author": "richsalz",
          "authorAssociation": "NONE",
          "body": "Might also have to say something about ignoring whitespace `a,b` vs `a, b` and then maybe just whitespace is the separator?\r\n",
          "createdAt": "2022-03-28T19:23:50Z",
          "updatedAt": "2022-03-28T19:23:50Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "While I can understand the appeal, I'm not yet convinced we should do this until we have a use case and have thought through the possible privacy impacts.",
          "createdAt": "2022-03-28T19:24:56Z",
          "updatedAt": "2022-03-28T19:24:56Z"
        }
      ]
    },
    {
      "number": 113,
      "id": "I_kwDODeTEy85HEA9B",
      "title": "Look at greasing Client / Origin interactions",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/113",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "tfpauly"
      ],
      "labels": [
        "auth-scheme"
      ],
      "body": "Origins can issue challenges for greased token types, etc, to ensure client can handle new types in the future.",
      "createdAt": "2022-04-04T19:44:20Z",
      "updatedAt": "2022-06-21T21:26:41Z",
      "closedAt": "2022-06-21T21:26:41Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "One type of greasing might be adding random authentication credentials to the `Authorization` header, e.g., `Authorization: PrivacyToken foo=bar token=blah bar=baz`.",
          "createdAt": "2022-04-11T19:20:06Z",
          "updatedAt": "2022-04-11T19:20:06Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "We should recommend servers to send greased token types + parameters, as well as clients to send greased credentials.",
          "createdAt": "2022-06-13T19:11:31Z",
          "updatedAt": "2022-06-13T19:11:31Z"
        }
      ]
    },
    {
      "number": 117,
      "id": "I_kwDODeTEy85HiYWM",
      "title": "Don't require padding for base64url?",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/117",
      "state": "CLOSED",
      "author": "punkeel",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "I would like to challenge the following snippet in the RFC, especially the use of the word **MUST**.\r\n> \"challenge\", which contains a base64url-encoded {{!RFC4648}} TokenChallenge value. **Since the length of the challenge is not fixed, the base64url data MUST include padding.**\r\n\r\nBase 64 decoding does not require the padding to get the *exact* encoded value, bit-for-bit.\r\n\r\nFrom what I understand, issues arise when it's impossible to know the length of the encoded base64 payload, due to lack of delimiters. eg, if we encode `hello` and `world`, then concat them (without padding), this gives us:\r\n`aGVsbG8=` + `d29ybGQ=` == `aGVsbG8d29ybGQ` ==> `hello.\u00db\u00dc..`\r\n\r\nWhen the base64 length is fully known (thanks to delimiters like space or line breaks), this is a non-issue.\r\n\r\n\r\nMay I recommend that clients instead **MUST support** base64url encoding with and without padding?",
      "createdAt": "2022-04-11T16:05:57Z",
      "updatedAt": "2022-06-13T19:08:47Z",
      "closedAt": "2022-06-13T19:08:47Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks for filing @punkeel! There's a couple reasons why we went with padding. First, padding seems to be the default encoding for most [many](https://docs.rs/base64/latest/base64/index.html) [base64](https://pkg.go.dev/encoding/base64) [implementations](https://source.chromium.org/chromium/chromium/src/+/main:base/base64url.h). Second, as you point out, no padding is an issue without a known length, so this would require us to specify that length in order to help clients parse things correctly. That pushes complexity into the protocol. Putting these together, allowing unpadded base64 would just force all clients to implement a thing that's not really needed while also making the protocol more complex, so it didn't seem worth the flexibility. ",
          "createdAt": "2022-04-18T22:10:49Z",
          "updatedAt": "2022-04-18T22:10:49Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "There's also a desire amongst the authors to keep the supported cases be stricter and more limited to avoid interop problems.\r\n\r\nThe question I have is who benefits by allowing the specification to be loose here in allowing both forms in both directions?",
          "createdAt": "2022-04-18T22:14:41Z",
          "updatedAt": "2022-04-18T22:14:41Z"
        },
        {
          "author": "punkeel",
          "authorAssociation": "NONE",
          "body": "The demo sitekey provided by Fastly ([here](https://www.fastly.com/blog/private-access-tokens-stepping-into-the-privacy-respecting-captcha-less)) doesn't include padding symbols \u2013 so origins/clients should already support both padding ON and OFF\r\n\r\n```\r\nMIICUjA9BgkqhkiG9w0BAQowMKANMAsGCWCGSAFlAwQCAqEaMBgGCSqGSIb3DQEBCDALBglghkgBZQMEAgKiAwIBMAOCAg8AMIICCgKCAgEAubzND7lvK-u5aIFHSt_NHIzsUFuHCiwVm88kvUvbvJbjj4be_IdNwpfdfXz-vq6NeEwlKEDLtD9oMVop_kEf5HEBkiipBrcn10h17XvYPuc6lA7Z4Y8IjvSjLVydXmcabmslwreMysD1ZINjzadjlJxiIKWCeS_3OJ4dxMTirt8HMUl8cRQafTjSOBJIZNtoNiT5rr5_5SYfEQW8v25RZcitkL0Lrg1mkSutRR00EE3zMelQBGR0sf8jDgBRiPQ1-sSgaIicIciZ2ysiPdkQZBIDpIFnvqed4yKY9gZCn-ASztoe1JhJvzWUwO7Nyz1Mb6pxAV0aQNfb0rDMTPNtyF4z7kgtFcsr5SXiJUa13bm0G2QvEdhl177poghh2RDaT5tcEmiRRvdQWBTeVgFyjrX3-29TZCT4z8VyvDxPPIUIi2rN8-9lN6mmsF0KhlyKe4jUuDwK7dc6Q0gZyjKiE3n-ygErrlbOYU16MGQiJQRV6Z8j38OSD4Lf5-SzsgkAa6Zbv95Zf8TZRS-fuagiXGZcmfdO9zXkuNlRlGguEUpx520SANRciPIBZxFBDXga6kcT9Hfha0n97Mhq57kFRe2Cox7qpq79x9TjUvHOZkWMSv2KmZpoF0wbI2NvlZngbW6Z1hC-X4C3evilX7O498r45Ct7PNjq11Qjso82DwMCAwEAAQ\r\n```\r\n\r\nLength is 798, and `798 % 4 = 2`. It should end with `==`.\r\n\r\n(Sorry for not coming back to this earlier, no strong opinions \u2013 it's almost a personal preference at this point)",
          "createdAt": "2022-06-09T16:47:35Z",
          "updatedAt": "2022-06-09T16:48:22Z"
        },
        {
          "author": "jfoote",
          "authorAssociation": "NONE",
          "body": "The lack of padding was an oversight and has been fixed FWIW. \r\n\r\n```\r\nMIICUjA9BgkqhkiG9w0BAQowMKANMAsGCWCGSAFlAwQCAqEaMBgGCSqGSIb3DQEBCDALBglghkgBZQMEAgKiAwIBMAOCAg8AMIICCgKCAgEAubzND7lvK-u5aIFHSt_NHIzsUFuHCiwVm88kvUvbvJbjj4be_IdNwpfdfXz-vq6NeEwlKEDLtD9oMVop_kEf5HEBkiipBrcn10h17XvYPuc6lA7Z4Y8IjvSjLVydXmcabmslwreMysD1ZINjzadjlJxiIKWCeS_3OJ4dxMTirt8HMUl8cRQafTjSOBJIZNtoNiT5rr5_5SYfEQW8v25RZcitkL0Lrg1mkSutRR00EE3zMelQBGR0sf8jDgBRiPQ1-sSgaIicIciZ2ysiPdkQZBIDpIFnvqed4yKY9gZCn-ASztoe1JhJvzWUwO7Nyz1Mb6pxAV0aQNfb0rDMTPNtyF4z7kgtFcsr5SXiJUa13bm0G2QvEdhl177poghh2RDaT5tcEmiRRvdQWBTeVgFyjrX3-29TZCT4z8VyvDxPPIUIi2rN8-9lN6mmsF0KhlyKe4jUuDwK7dc6Q0gZyjKiE3n-ygErrlbOYU16MGQiJQRV6Z8j38OSD4Lf5-SzsgkAa6Zbv95Zf8TZRS-fuagiXGZcmfdO9zXkuNlRlGguEUpx520SANRciPIBZxFBDXga6kcT9Hfha0n97Mhq57kFRe2Cox7qpq79x9TjUvHOZkWMSv2KmZpoF0wbI2NvlZngbW6Z1hC-X4C3evilX7O498r45Ct7PNjq11Qjso82DwMCAwEAAQ==\r\n```",
          "createdAt": "2022-06-09T18:52:41Z",
          "updatedAt": "2022-06-09T18:52:41Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "Based on this, I think we'll stick with requiring padding. Thanks!",
          "createdAt": "2022-06-13T19:08:47Z",
          "updatedAt": "2022-06-13T19:08:47Z"
        }
      ]
    },
    {
      "number": 118,
      "id": "I_kwDODeTEy85HjP_Z",
      "title": "Explain consequences of using publicly verifiable token",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/118",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [
        "protocol"
      ],
      "body": "The publicly verifiable basic token issuance protocol doesn't include an origin name that the issuer can see, so it does allow origins to be able to use that issuer (as long as the know the key) without explicit coordination or permission from the issuer. This isn't necessarily a problem, but we should likely mention it.",
      "createdAt": "2022-04-11T19:16:46Z",
      "updatedAt": "2022-06-27T21:16:45Z",
      "closedAt": "2022-06-27T21:16:45Z",
      "comments": []
    },
    {
      "number": 119,
      "id": "I_kwDODeTEy85IDmIs",
      "title": "Forgery definition",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/119",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [
        "architecture"
      ],
      "body": "We current state this as the requirement:\r\n\r\n> One-more forgery security. The issuance protocol MUST NOT allow malicious Clients or Attesters (acting as Clients) to forge tokens without interacting with the Issuer directly.\r\n\r\nThis could be misread in that we do allow forgeries when interacting with the Issuer directly. Clearly that's not the intent, so let's fix this.",
      "createdAt": "2022-04-19T22:01:29Z",
      "updatedAt": "2022-06-27T21:16:16Z",
      "closedAt": "2022-06-27T21:16:16Z",
      "comments": []
    },
    {
      "number": 120,
      "id": "I_kwDODeTEy85INv6T",
      "title": "Blind RSA identifier ",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/120",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The SPKI format is currently unspecified, and as there are multiple ways to encode an RSA public key (and hash algorithm), this makes interop somewhat difficult. Moreover, the SPKI can encode any number of RSA public key sizes, in contrast to elliptic curves wherein the \"suite\" typically defines the key size. In the name of simplicity, I'd propose that we have the identifier fully specify everything one needs to use the algorithm, including key size, hash algorithm, and encoding format.",
      "createdAt": "2022-04-21T21:19:33Z",
      "updatedAt": "2022-04-26T02:55:11Z",
      "closedAt": "2022-04-26T02:55:11Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "Clarified that this would mean that each token type fully specifies the algorithms and sizes it uses. I support this.",
          "createdAt": "2022-04-21T21:42:55Z",
          "updatedAt": "2022-04-21T21:42:55Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Right, specifically, I think each type would specify:\r\n\r\n1. Hash algorithm\r\n2. Public key (and signature) size\r\n3. Public key encoding\r\n\r\nThere's a large number of permutations here, e.g.,\r\n\r\n- SHA-256, 4096-bit key, RSASSA-PSS OID SPKI\r\n- SHA-256, 2048-bit key, RSASSA-PSS OID SPKI\r\n- ...\r\n\r\n",
          "createdAt": "2022-04-22T15:03:06Z",
          "updatedAt": "2022-04-22T15:05:07Z"
        }
      ]
    },
    {
      "number": 121,
      "id": "I_kwDODeTEy85IOS84",
      "title": "Clearly explain least significant byte in key_id",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/121",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "protocol"
      ],
      "body": "We should be explicit about what this means:\r\n\r\n`\"token_key_id\" is the least significant byte of the key_id.`\r\n\r\nThis means that the byte is the last/rightmost byte of the hash, in order. Misinterpretation of this caused some confusion in interop.",
      "createdAt": "2022-04-22T01:22:15Z",
      "updatedAt": "2022-04-26T02:47:20Z",
      "closedAt": "2022-04-26T02:47:20Z",
      "comments": []
    },
    {
      "number": 124,
      "id": "I_kwDODeTEy85LjASQ",
      "title": "Question on issuer public key retrieval ",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/124",
      "state": "CLOSED",
      "author": "mirjak",
      "authorAssociation": "NONE",
      "assignees": [
        "chris-wood"
      ],
      "labels": [
        "architecture"
      ],
      "body": "draft-ietf-privacypass-architecture says in section 3.2:\r\n\r\n> The mechanism by which clients obtain the Issuer public key is not specified.\r\n\r\nIs that correct? Isn't the 'token-key' in draft-ietf-privacypass-auth-scheme providing the pub key? Or do I misunderstand something here?",
      "createdAt": "2022-06-10T12:18:45Z",
      "updatedAt": "2022-07-01T18:45:40Z",
      "closedAt": "2022-07-01T18:45:40Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Oops, yep, good catch! We'll fix this.",
          "createdAt": "2022-06-13T19:06:59Z",
          "updatedAt": "2022-06-13T19:06:59Z"
        }
      ]
    },
    {
      "number": 134,
      "id": "I_kwDODeTEy85NLPuD",
      "title": "Add text describing composition of multiple token types ",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/134",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "See [this issue](https://github.com/tfpauly/privacy-proxy/issues/145).",
      "createdAt": "2022-07-05T21:33:47Z",
      "updatedAt": "2022-07-05T21:54:55Z",
      "closedAt": "2022-07-05T21:54:55Z",
      "comments": []
    },
    {
      "number": 135,
      "id": "I_kwDODeTEy85NLQAv",
      "title": "Add text describing origin issuer selection",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/135",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "See [this issue](https://github.com/tfpauly/privacy-proxy/issues/146).",
      "createdAt": "2022-07-05T21:34:24Z",
      "updatedAt": "2022-07-05T21:54:10Z",
      "closedAt": "2022-07-05T21:54:10Z",
      "comments": []
    },
    {
      "number": 141,
      "id": "I_kwDODeTEy85Nzbch",
      "title": "Feedback on compromised attestations",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/141",
      "state": "CLOSED",
      "author": "philippp",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "architecture"
      ],
      "body": "Over a long enough timeline, attestations will be broken - through willful post-boot compromise, malware, or other means. Services that depend on attestations (consumers of access tokens) will observe clients that appear to pass attestation, but engage in behavior that indicates that the device is compromised (e.g. trigger thousands of interactions per second).\r\n\r\nAs it stands, the service consuming access tokens is not able to provide feedback that these attestations appear to be false negatives, and should be re-examined by the attester. Even if this feedback were to be provided out of band, it will be challenging for the attester to identify which devices are compromised and diagnose the nature of the compromise.\r\n\r\nI do not anticipate that this will become a pressing issue until the initial attestations are compromised, but it may be helpful to plan ahead for this scenario.",
      "createdAt": "2022-07-14T22:00:16Z",
      "updatedAt": "2022-08-05T17:55:01Z",
      "closedAt": "2022-08-05T17:55:01Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks, @philippp! This seems like something we ought to discuss in the architecture document. ",
          "createdAt": "2022-07-14T22:15:04Z",
          "updatedAt": "2022-07-14T22:15:04Z"
        }
      ]
    },
    {
      "number": 143,
      "id": "I_kwDODeTEy85OZUZW",
      "title": "IANA registry details for token types",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/143",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "tfpauly"
      ],
      "labels": [
        "auth-scheme"
      ],
      "body": "From IANA:\r\n\r\n> First, where should this new registry be located? Should it be added to an existing registry page? If it needs a new page, does it also need a new category at http://www.iana.org/protocols (and if so, should the page and the category have the same name)?\r\n> \r\n> Second, what is the registration procedure for this new registry? If you need more information about common procedures, see Section 4 of RFC 8126:\r\n> \r\n> https://datatracker.ietf.org/doc/html/rfc8126#section-4\r\n",
      "createdAt": "2022-07-22T17:34:49Z",
      "updatedAt": "2022-08-01T14:37:11Z",
      "closedAt": "2022-08-01T14:37:11Z",
      "comments": []
    },
    {
      "number": 146,
      "id": "I_kwDODeTEy85O1PVK",
      "title": "Preventing reliance on privacy pass",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/146",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "architecture"
      ],
      "body": "From IETF 114 discussion:\r\n\r\nFor the general captcha use cases, we don't want websites to rely on privacy pass always working, to preventing locking out other clients.\r\n\r\nWe should likely have discussion in the architecture document to suggest approaches to make sure servers can't rely on this for generic clients (like browsers). Randomly not responding with tokens, other client-side heuristics.",
      "createdAt": "2022-07-29T18:52:33Z",
      "updatedAt": "2022-08-05T18:43:49Z",
      "closedAt": "2022-08-05T18:43:49Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "I would put this in the auth-scheme document, where we already discuss user experience things. I'll propose some text that we can wordsmith.",
          "createdAt": "2022-08-01T14:29:51Z",
          "updatedAt": "2022-08-01T14:29:51Z"
        }
      ]
    },
    {
      "number": 149,
      "id": "I_kwDODeTEy85PabH8",
      "title": "Add deployment-specific consistency considerations",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/149",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [],
      "body": "How lack of consistency (and therefore key tagging attacks) affect clients is deployment specific. We should elaborate on these considerations when discussing the different deployment models.",
      "createdAt": "2022-08-08T19:53:49Z",
      "updatedAt": "2022-09-19T13:21:01Z",
      "closedAt": "2022-09-19T13:21:01Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "@janaiyengar closing. Please re-open if you can get around to this.",
          "createdAt": "2022-09-19T13:20:47Z",
          "updatedAt": "2022-09-19T13:20:47Z"
        }
      ]
    },
    {
      "number": 151,
      "id": "I_kwDODeTEy85QfpfX",
      "title": "token_key_id is both truncated and not truncated",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/151",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Let's use different names to make this distinction clear.",
      "createdAt": "2022-08-25T07:48:35Z",
      "updatedAt": "2022-09-16T11:58:40Z",
      "closedAt": "2022-09-16T11:58:40Z",
      "comments": []
    },
    {
      "number": 152,
      "id": "I_kwDODeTEy85Qfppa",
      "title": "Add token_key_id truncation rationale ",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/152",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-08-25T07:49:11Z",
      "updatedAt": "2022-09-16T11:58:52Z",
      "closedAt": "2022-09-16T11:58:52Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed by #184.",
          "createdAt": "2022-09-16T11:58:52Z",
          "updatedAt": "2022-09-16T11:58:52Z"
        }
      ]
    },
    {
      "number": 153,
      "id": "I_kwDODeTEy85RGhin",
      "title": "Architecture: One protocol or two?",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/153",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "architecture",
        "editorial"
      ],
      "body": "The intro says this:\r\n\r\n> Privacy Pass is a protocol for authorization based on anonymous-credential authentication mechanisms. \r\n\r\nIt also says this:\r\n\r\n> At a high level, Privacy Pass is composed of two protocols: issuance and redemption.\r\n\r\nIt may be clearer to not call Privacy Pass both \"a protocol\" and \"two protocols\". Either we call issuance and redemption \"sub-protocols\", or we call the main thing \"a mechanism\", \"an architecture\", or \"a set of protocols\". I kinda lean towards the last option.",
      "createdAt": "2022-09-02T22:43:14Z",
      "updatedAt": "2022-09-14T19:13:44Z",
      "closedAt": "2022-09-14T19:13:44Z",
      "comments": [
        {
          "author": "ekinnear",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Had the same thought while reading the introduction, in the abstract it is referred to as an `architectural framework`, so perhaps just:\r\n> Privacy Pass is a framework for authorization based on anonymous-credential authentication mechanisms.\r\n\r\nor just a \"set of protocols\" would work nicely too.",
          "createdAt": "2022-09-06T20:29:27Z",
          "updatedAt": "2022-09-06T20:29:27Z"
        }
      ]
    },
    {
      "number": 154,
      "id": "I_kwDODeTEy85RGiCD",
      "title": "Architecture: Origin definition",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/154",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "architecture"
      ],
      "body": "Origin is defined currently as:\r\n\r\n> Origin: An entity that challenges Clients for tokens.\r\n\r\nI wonder if it may be better to say that the Origin is fundamentally the entity that redeems tokens presented by Clients (and can challenge them too).",
      "createdAt": "2022-09-02T22:47:19Z",
      "updatedAt": "2022-09-14T19:13:44Z",
      "closedAt": "2022-09-14T19:13:44Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "Similarly, in the \"Redemption Protocol\" section, we may want to mention that a client could just present a token auth without a challenge if it knows it will need it ahead of time.",
          "createdAt": "2022-09-02T22:50:40Z",
          "updatedAt": "2022-09-02T22:50:40Z"
        }
      ]
    },
    {
      "number": 155,
      "id": "I_kwDODeTEy85RGjBU",
      "title": "Cross-origin MUST NOT",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/155",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "architecture"
      ],
      "body": "> If tokens protected with resources are unique to a single Origin, then said Origin MUST NOT admit cross-origin tokens for authorization.\r\n\r\nI'm not sure I follow what this is saying. Does it intend to say \"resources protected with tokens\"? It also seems like a hard thing to enforce normatively without being more clear.",
      "createdAt": "2022-09-02T22:55:37Z",
      "updatedAt": "2022-09-14T19:13:43Z",
      "closedAt": "2022-09-14T19:13:43Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Removing this sentence altogether seems best. We already say that origins bear risk in accepting cross-origin tokens issued by interactions with other origins. ",
          "createdAt": "2022-09-14T13:48:22Z",
          "updatedAt": "2022-09-14T13:48:22Z"
        }
      ]
    },
    {
      "number": 156,
      "id": "I_kwDODeTEy85RGlEr",
      "title": "Architecture: Forward reference for split model, etc.",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/156",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "architecture"
      ],
      "body": "Section 3.2.1 has this:\r\n\r\n> In Split Attester and Issuer deployments, Issuers can choose to remove compromised Attesters from their trusted set until the compromise is patched, without needing to modify Origin allow-lists.\r\n\r\nIt may be good to have a reference to Section 4 about what the split deployment model is. Potentially useful in more parts of 3.2 as well.",
      "createdAt": "2022-09-02T23:17:43Z",
      "updatedAt": "2022-09-14T19:13:43Z",
      "closedAt": "2022-09-14T19:13:43Z",
      "comments": []
    },
    {
      "number": 157,
      "id": "I_kwDODeTEy85RGlY9",
      "title": "Architecture: Security considerations",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/157",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "architecture"
      ],
      "body": "The security considerations section starts:\r\n\r\n> We present a number of security considerations that prevent malicious Clients from abusing the protocol.\r\n\r\nBut only one item, Token Exhaustion, is listed.\r\n\r\nShould there be more items listed here? Or should the section be collapsed to not have a subsection?",
      "createdAt": "2022-09-02T23:20:50Z",
      "updatedAt": "2022-09-14T09:42:49Z",
      "closedAt": "2022-09-14T09:42:49Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Resolved in #177 by collapsing.",
          "createdAt": "2022-09-14T09:42:49Z",
          "updatedAt": "2022-09-14T09:42:49Z"
        }
      ]
    },
    {
      "number": 158,
      "id": "I_kwDODeTEy85RSsl6",
      "title": "Architecture: Who does what and definition of \"Client\" in the introduction",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/158",
      "state": "CLOSED",
      "author": "ekinnear",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "In the introduction, client is capitalized for the first time here: \r\n> The issuance protocol runs between a Client and two network functions in the Privacy Pass architecture: Attestation and Issuance. \r\n\r\ndespite having been used in the proceeding paragraphs to help illustrate the overall goals of Privacy Pass. I'm assuming that's intentional as it transitions from colloquial use of \"client\" to the formally defined \"Client\", perhaps that should be made clear, something like: \r\n> The issuance protocol runs between an endpoint acting in the role of a Client and two network functions in the Privacy Pass architecture: Attestation and Issuance. \r\n\r\nor\r\n> The issuance protocol runs between an endpoint referred to as a Client and two network functions in the Privacy Pass architecture: Attestation and Issuance. \r\n\r\nPerhaps more importantly, how is it that `issuance` runs between an endpoint (Client) and a \"network function\" described as one of Attestation and Issuance? I kind of expected issuance to run between a `Client` and `Some other entity` (Issuer?) for the _purposes_ of issuance, not attestation.\r\n\r\nLater on, this proves true via Issuer/Attester, so perhaps worth updating the introduction to match.\r\n\r\nThis may just be fallout of having a structure like so: \r\n```\r\nIssuance -> Attestation, Issuance\r\nRedemption -> Redemption (only?)\r\n```\r\nLikely solvable via some light editorial tweaks in the introduction, but also wanted to note that it might be worth just presenting it as a single flat layer: `Issuance`, `Attestation`, and `Redemption`, where the Issuer and Attester might be the same entity and the Origin is involved for Redemption. Could simplify things, and that seems to match how the rest of the document handles it.\r\n",
      "createdAt": "2022-09-06T21:51:06Z",
      "updatedAt": "2022-09-14T19:13:43Z",
      "closedAt": "2022-09-14T19:13:43Z",
      "comments": []
    },
    {
      "number": 159,
      "id": "I_kwDODeTEy85RSsmo",
      "title": "Architecture: Consistency in order and diagrams for redemption protocol vs. issuance protocol",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/159",
      "state": "CLOSED",
      "author": "ekinnear",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "A minor nit, but it was a little odd leaving the abstract/introduction which was very focused on Issue/Attest _then_ Redemption to have 3.1 be the Redemption protocol in reverse order. Is it possible to just move text around in the Introduction so that it's all consistent? \r\n\r\nThis could also potentially be a nice moment to reconcile the diagram in the introduction: \r\n```\r\n    Origin          Client        Attester          Issuer\r\n  /--------------------------------------------------------------------\r\n  |                 /-----------------------------------------\\\r\n  |   Challenge ----> Attest --->                             |\r\n  |                 | TokenRequest --------------->           |\r\n  |   Redemption    |                              (validate) | Issuance\r\n  |      Flow       |                              (evaluate) |   Flow\r\n  |                 |     <-------------------  TokenResponse |\r\n  |   <--- Response |                                         |\r\n  |                 \\-----------------------------------------/\r\n  \\--------------------------------------------------------------------\r\n```\r\nwith the one in 3.2:\r\n```\r\n  Origin          Client        Attester          Issuer\r\n\r\n                  +--------------------------------------\\\r\n    Challenge ----> TokenRequest --->                    |\r\n                  |             (attest)                 |\r\n                  |                TokenRequest --->     |\r\n                  |                            (evaluate)|\r\n                  |                   <--- TokenResponse |\r\n      Token  <----+ TokenResponse <---                   |\r\n                  |--------------------------------------/\r\n```\r\n\r\nNotably, `Attest` is under Client in one but under Attester in the other and the token response -> token flow is subtly different, although it would appear that's not intentionally conveying a difference in meaning.",
      "createdAt": "2022-09-06T21:51:09Z",
      "updatedAt": "2022-09-14T19:13:43Z",
      "closedAt": "2022-09-14T19:13:43Z",
      "comments": []
    },
    {
      "number": 160,
      "id": "I_kwDODeTEy85RSsnR",
      "title": "Architecture nit: RFC 2119 keywords in section 3",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/160",
      "state": "CLOSED",
      "author": "ekinnear",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Nit: Section 3 contains quite a few places where 2119 keywords are used uncapitalized, which can be fine, but there are enough of them that it might be worth doing a quick pass to make sure that's all intentional. \r\n\r\nFor example: \r\n\r\n> The fundamental requirement for key management and discovery is that Issuers must be unable to target specific clients with unique keys without detection.\r\n\r\nwhich was proceeded by: \r\n\r\n> To facilitate issuance, the Issuer MUST hold an Issuance key pair at any given time. The Issuer public key MUST be made available to all Clients in such a way that key rotations and other updates are publicly visible. \r\n\r\nAll three of these requirements seem rather equally important, and while normative text doesn't need to use capitalized 2119 keywords, I'm assuming there wasn't intentionally any significance to the difference in their use between those paragraphs.",
      "createdAt": "2022-09-06T21:51:12Z",
      "updatedAt": "2022-09-14T19:13:42Z",
      "closedAt": "2022-09-14T19:13:42Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "I don't think they're really enforceable, so moving away from 2119 language seems best here.",
          "createdAt": "2022-09-14T13:53:18Z",
          "updatedAt": "2022-09-14T13:53:18Z"
        }
      ]
    },
    {
      "number": 161,
      "id": "I_kwDODeTEy85RSsnw",
      "title": "Architecture: Extension/issuer protocol requirements for privacy impact analysis",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/161",
      "state": "CLOSED",
      "author": "ekinnear",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Section 3.2 states: \r\n> Each Issuance protocol MUST include a detailed analysis of the privacy impacts\r\nof the protocol, why these impacts are justified, and guidelines on how to\r\ndeploy the protocol to minimize any privacy impacts.\r\n\r\nHowever, Section 3.2.4 states: \r\n> Each issuance protocol SHOULD include a detailed analysis of the\r\nprivacy impacts of the extension, why these impacts are justified, and\r\nguidelines on how to deploy the protocol to minimize any privacy impacts.\r\n\r\n_(After editorial nits are resolved in each section)_\r\n\r\nThis likely should be consistent everywhere, or even just left to the explicit extensibility section (3.2.4) and referenced from 3.2.",
      "createdAt": "2022-09-06T21:51:15Z",
      "updatedAt": "2022-09-14T19:13:42Z",
      "closedAt": "2022-09-14T19:13:42Z",
      "comments": []
    },
    {
      "number": 162,
      "id": "I_kwDODeTEy85RSsoU",
      "title": "Architecture: Key rotation recommendations don't depend on number and frequency of client interactions?",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/162",
      "state": "CLOSED",
      "author": "ekinnear",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Section 5.2 states:\r\n> With a large number of Clients, a minimum of one week gives a large enough\r\nwindow for Clients to participate in the issuance protocol and thus enjoy the\r\nanonymity guarantees of being part of a larger group. A maximum of\r\n12 weeks limits the damage caused by a key compromise. If an Issuer\r\nrealizes that a key compromise has occurred then the Issuer should\r\ngenerate a new key and make it available to Clients. If possible, it should\r\ninvoke any revocation procedures that may apply for the old key.\r\n\r\nIs this 1-12 week recommendation really universally applicable, or should an implementor/deployer take into account the number and frequency of client interactions? It seems like the real goal is the _size_ of the anonymity set, not the number of days (modulo risk of key compromise). For example, if there's a system that only has 10 clients a week, would it make sense to use a longer value?",
      "createdAt": "2022-09-06T21:51:18Z",
      "updatedAt": "2022-09-14T19:13:42Z",
      "closedAt": "2022-09-14T19:13:42Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Great catch. We should just remove this recommendation and describe the tradeoff more clearly (which is somewhat done).",
          "createdAt": "2022-09-14T13:58:06Z",
          "updatedAt": "2022-09-14T13:58:06Z"
        }
      ]
    },
    {
      "number": 163,
      "id": "I_kwDODeTEy85RSspL",
      "title": "Architecture: Security considerations nit",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/163",
      "state": "CLOSED",
      "author": "ekinnear",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Section 6 states: \r\n> We present a number of security considerations that prevent malicious Clients from abusing the protocol.\r\n\r\nBut there's just one subsection. :smiley:\r\n\r\nMore importantly, it's not clear that the Clients are the malicious ones in the examples provided for token exhaustion.\r\n\r\n",
      "createdAt": "2022-09-06T21:51:23Z",
      "updatedAt": "2022-09-14T09:42:19Z",
      "closedAt": "2022-09-14T09:42:19Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Resolved in #177 by removing the section header.",
          "createdAt": "2022-09-14T09:42:19Z",
          "updatedAt": "2022-09-14T09:42:19Z"
        }
      ]
    },
    {
      "number": 165,
      "id": "I_kwDODeTEy85Ryqwx",
      "title": "Arch: s.3.1: Meaning of \"cross-origin\"",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/165",
      "state": "CLOSED",
      "author": "cjpatton",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "> For example, Origins that accept cross-origin across shared redemption contexts tokens SHOULD track which tokens have been redeemed already in those redemption contexts, since these tokens can be issued and then spent multiple times in response to any such challenge.\r\n\r\nI'm not sure what \"cross-origin\" means in this context. (I am not an HTTP expert,) \"Cross-origin token\" is used in the next paragraph. Is that what's meant here?\r\n\r\nEDIT: After reading more of the draft, it sounds like \"cross-origin token\" is indeed what's meant. However I'm not sure if this is ever clearly defined. Is a cross-origin token one that can be redeemed by multiple origins?\r\n\r\n",
      "createdAt": "2022-09-14T02:28:47Z",
      "updatedAt": "2022-09-14T19:13:42Z",
      "closedAt": "2022-09-14T19:13:42Z",
      "comments": []
    },
    {
      "number": 166,
      "id": "I_kwDODeTEy85Ryrjz",
      "title": "Arch: s.3.2: Concurrent security",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/166",
      "state": "CLOSED",
      "author": "cjpatton",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "> 3. Concurrent security. The issuance protocol MUST be safe to run concurrently with arbitrarily many Clients.\r\n\r\nIf I understand correctly, there may be a many-to-one relationship between Attesters and Issuers. Is that right? If so, it might be worth refining. (I would also say there might be many Issuers, as there might be a many-to-one relationship between Clients and Issuers as well.)\r\n\r\n> 3. Concurrent security. The issuance protocol MUST be safe to run concurrently with arbitrarily many Clients, Attesters and Issuers.",
      "createdAt": "2022-09-14T02:34:00Z",
      "updatedAt": "2022-09-14T19:13:42Z",
      "closedAt": "2022-09-14T19:13:42Z",
      "comments": []
    },
    {
      "number": 167,
      "id": "I_kwDODeTEy85RythA",
      "title": "Arch: s.3.2.1: SHOULD versus should",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/167",
      "state": "CLOSED",
      "author": "cjpatton",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "The keyword SHOULD is used in this document to suggest considerations for PP deployments. These kinds of considerations are also mentioned in this section, but w/o SHOULD. For example:\r\n\r\n> Attesters should not admit attestation types that result in small anonymity sets.\r\n\r\nThis should could be SHOULD, I think. (Sorry for the nightmare of a sentence that was.) Similarly here:\r\n\r\n> In general, Attesters should accept a limited form of attestation formats.\r\n\r\nIf this is important (perhaps not?) it might be worth going through the rest of the document to check for consistency.",
      "createdAt": "2022-09-14T02:46:58Z",
      "updatedAt": "2022-09-14T19:13:41Z",
      "closedAt": "2022-09-14T19:13:41Z",
      "comments": []
    },
    {
      "number": 168,
      "id": "I_kwDODeTEy85RyvrN",
      "title": "Arch: Nit: Inconsistent capitalization",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/168",
      "state": "CLOSED",
      "author": "cjpatton",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "Sometimes \"Issuance protocol\" is written, other times it reads \"issuance protocol\". (Similarly for \"cross-Origin\".) Which is preferred? Is consistency a concern?",
      "createdAt": "2022-09-14T03:01:04Z",
      "updatedAt": "2022-09-14T19:13:41Z",
      "closedAt": "2022-09-14T19:13:41Z",
      "comments": []
    },
    {
      "number": 169,
      "id": "I_kwDODeTEy85Ry72Z",
      "title": "Arch: s.5.3: Meaning of \"distribution of Issuer trust\"",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/169",
      "state": "CLOSED",
      "author": "cjpatton",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "I'm not sure how to interpret the following:\r\n\r\n> If the distribution of Issuer trust is anything close to a uniform distribution, then this is likely to uniquely identify any Client amongst all other Internet users. Assuming a uniform distribution is clearly the worst-case scenario, and unlikely to be accurate, but it provides a stark warning against allowing too many Issuers at any one time.\r\n\r\nWhat is meant the \"distribution of Issuer trust\" here?\r\n\r\nRelatedly, can you explain the math here:\r\n\r\n> We propose that allowing no more than 4 Issuers at any one time is highly preferable (leading to a maximum of 64 possible user segregations).\r\n\r\nMy understanding is that the set of users can be partitioned into 2^4 = 16 different sets (not 64). More than likely I'm missing something obvious. Either way, this seems like a reasonably conservative recommendation. (It's hard for me to imagine more than a handful of Issuers being active in a deployment.)",
      "createdAt": "2022-09-14T04:18:58Z",
      "updatedAt": "2022-09-14T19:13:41Z",
      "closedAt": "2022-09-14T19:13:41Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Yeah, this was really unclear, mostly because it was left over from a prior version of the document. I tried to consolidate and clarify the text in this section (and its subsections) to improve the situation. Please have a look at #178 for the proposed change!",
          "createdAt": "2022-09-14T14:19:15Z",
          "updatedAt": "2022-09-14T14:19:15Z"
        }
      ]
    },
    {
      "number": 170,
      "id": "I_kwDODeTEy85Ry9mS",
      "title": "Arch: s.5.3.1: Who is the verifier",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/170",
      "state": "CLOSED",
      "author": "cjpatton",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "> As long as each redemption partition maintains a strong privacy boundary with each other, the verifier will only be able to learn a number of bits of information up to the limits within that \"redemption partitions\".\r\n\r\nIt's not clear from context (to me, at least) who the verifier is here. I suppose the Origin? If so, I'd suggest replacing \"verifier\" with \"Origin\".\r\n\r\nSimilar question for s.6.1.",
      "createdAt": "2022-09-14T04:29:48Z",
      "updatedAt": "2022-09-14T19:13:41Z",
      "closedAt": "2022-09-14T19:13:41Z",
      "comments": []
    },
    {
      "number": 171,
      "id": "I_kwDODeTEy85RzBNN",
      "title": "Arch: s.6.1: Threat model for Token exhaustion",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/171",
      "state": "CLOSED",
      "author": "cjpatton",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "The start of s.6 states:\r\n\r\n> We present [...] security considerations that prevent malicious Clients from abusing the protocol.\r\n\r\nThen the Token exhaustion refers to a \"malicious verifier\" who can force a client into spending tokens:\r\n\r\n> When a Client holds tokens for an Issuer, it is possible for any verifier to invoke that client to redeem tokens for that Issuer. This can lead to an attack where a malicious verifier can force a Client to spend all of their tokens from a given Issuer. \r\n\r\nI'm not sure who the \"verifier\" is. (See #170. As far as I can tell, s.5.3 and s.6.1 are the only places that the term \"verifier\" is used.) In any case, I would suggest reconciling the \"malicious Client\" with the \"malicious verifier\" who forces the Client into spending tokens. As is, the threat model is a bit unclear, at least to me.",
      "createdAt": "2022-09-14T04:51:12Z",
      "updatedAt": "2022-09-14T19:13:40Z",
      "closedAt": "2022-09-14T19:13:40Z",
      "comments": []
    },
    {
      "number": 173,
      "id": "I_kwDODeTEy85RzYw-",
      "title": "What is an 'architectural framework'?",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/173",
      "state": "CLOSED",
      "author": "mnot",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "I think this document could be titled\r\n\r\n> Privacy Pass Architecture\r\n\r\nor \r\n\r\n> Privacy Pass Framework\r\n\r\n... but I'm not sure that \"Privacy Pass Architectural Framework\" is called for...",
      "createdAt": "2022-09-14T06:33:36Z",
      "updatedAt": "2022-09-14T19:13:40Z",
      "closedAt": "2022-09-14T19:13:40Z",
      "comments": []
    },
    {
      "number": 174,
      "id": "I_kwDODeTEy85RzaDz",
      "title": "Arch: Relationship to HTTP",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/174",
      "state": "CLOSED",
      "author": "mnot",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "I _think_ this protocol is not specific to HTTP. If that's the case, the use of 'cross-origin' before the defintion of 'Origin' (as well as the difference in case) might confuse some readers, especially those familiar with the Web. ",
      "createdAt": "2022-09-14T06:37:22Z",
      "updatedAt": "2022-09-14T19:13:40Z",
      "closedAt": "2022-09-14T19:13:40Z",
      "comments": []
    },
    {
      "number": 175,
      "id": "I_kwDODeTEy85Rza0m",
      "title": "Arch: Abstract is very... abstract.",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/175",
      "state": "CLOSED",
      "author": "mnot",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "The abstract doesn't really reveal what the document is doing. I found this statement near the end of the introduction more useful:\r\n\r\n> This document describes requirements for both issuance and redemption\r\n   protocols.  This document also describes ecosystem considerations\r\n   that impact the stated privacy and security guarantees of the\r\n   protocol.",
      "createdAt": "2022-09-14T06:40:35Z",
      "updatedAt": "2022-09-14T19:13:40Z",
      "closedAt": "2022-09-14T19:13:40Z",
      "comments": []
    },
    {
      "number": 179,
      "id": "I_kwDODeTEy85R5A9d",
      "title": "Arch S3.2: Unconditional input secrecy",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/179",
      "state": "CLOSED",
      "author": "nikitaborisov",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Is _unconditional_ input secrecy meant to mean similar to unconditionally hiding? If so, this probably deserves more explanation and  justification in the architecture document as a requirement; otherwise, a different term should probably be used. ",
      "createdAt": "2022-09-15T04:26:50Z",
      "updatedAt": "2022-09-16T11:57:05Z",
      "closedAt": "2022-09-16T11:57:05Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "To my knowledge unconditional input secrecy is the standard term here. What do you think should be added to resolve this issue?",
          "createdAt": "2022-09-15T10:04:27Z",
          "updatedAt": "2022-09-15T10:04:27Z"
        },
        {
          "author": "nikitaborisov",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I guess my main question is why is _unconditional_ secrecy a requirement here? ",
          "createdAt": "2022-09-15T15:08:40Z",
          "updatedAt": "2022-09-15T15:08:40Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Because we don't want the server to learn anything about the client's private input regardless of its computational power. Take blind RSA as an example, which has this property. While a PQ adversary could break RSA, it could not learn the client's private input from a protocol trace. ",
          "createdAt": "2022-09-15T15:42:15Z",
          "updatedAt": "2022-09-15T15:49:50Z"
        },
        {
          "author": "nikitaborisov",
          "authorAssociation": "CONTRIBUTOR",
          "body": "1. I think this should be spelled out explicitly; i.e., say explicitly that the client's private input should remain private even if some of the cryptographic hardness assumptions underlying the protocol become falsified. \r\n2. I wonder if this would be a good place to use a SHOULD vs a MUST. I can see how unconditional secrecy is a desirable property, but, e.g., TLS doesn't have it for obvious reasons.",
          "createdAt": "2022-09-15T16:12:04Z",
          "updatedAt": "2022-09-15T16:12:04Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "I sent a PR for (1). I don't think we should relax (2). Future versions of the architecture can update this requirement to relax as desired. ",
          "createdAt": "2022-09-15T16:19:49Z",
          "updatedAt": "2022-09-15T16:19:49Z"
        }
      ]
    },
    {
      "number": 180,
      "id": "I_kwDODeTEy85R5BOe",
      "title": "Arch: S3.2.2.2 only one privacy key",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/180",
      "state": "CLOSED",
      "author": "nikitaborisov",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "S3.2.2.2 states \"Issuers MUST only use one private key for  issuing tokens at any given time.\" The next section (3.2.3), however, suggests that multiple keys could be used to encode metadata, and indeed, I believe the latest draft of rate-limited tokens uses different issuance keys. These seem to be in conflict.",
      "createdAt": "2022-09-15T04:28:36Z",
      "updatedAt": "2022-09-16T11:56:46Z",
      "closedAt": "2022-09-16T11:56:46Z",
      "comments": []
    },
    {
      "number": 185,
      "id": "I_kwDODeTEy85R9O8U",
      "title": "Arch: s3.2 Input secrecy does not imply unlinkability",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/185",
      "state": "CLOSED",
      "author": "nikitaborisov",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "E.g., consider a protocol where the Issuer signs a commitment to the token challenge. This fails as an unlinkable anonymous credentials because the signature is not randomized, but is has input secrecy because of the commitment. ",
      "createdAt": "2022-09-15T19:50:15Z",
      "updatedAt": "2022-09-20T12:51:11Z",
      "closedAt": "2022-09-20T12:51:11Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "In this hypothetical example, is the commitment not revealed during redemption? If so, I think we could address this by saying that input secrecy is necessary but insufficient for unlinkability. Thoughts?",
          "createdAt": "2022-09-16T12:01:35Z",
          "updatedAt": "2022-09-16T12:01:35Z"
        }
      ]
    },
    {
      "number": 186,
      "id": "I_kwDODeTEy85R9SQp",
      "title": "Arch: more thoughts on unlinkability",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/186",
      "state": "CLOSED",
      "author": "nikitaborisov",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "The draft points out the desire for the issuance and redemption flows to be unlinkable. This is an important property, but not quite enough. For example, you could have a protocol where the origin _and_ user identity are both known to the issuer. The flows could be unlinkable in the sense that any tokens issued for a particular (user,origin) combination could have been used in a redemption flow. But this seems a fairly pathological instantiation of PrivacyPass (especially if you consider the online version where tokens are spent as soon as they are issued). \r\n\r\nShould there be a stronger requirement in the architecture document, e.g., that neither the attester nor the issuer can link a user to an origin?",
      "createdAt": "2022-09-15T20:02:12Z",
      "updatedAt": "2022-12-15T19:15:18Z",
      "closedAt": "2022-12-15T19:15:18Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "A core requirement is that the \"attestation context\" is not linkable to the \"redemption context\", as stated at the top of section 4:\r\n\r\n> A Client uses Privacy Pass to separate attestation context and redemption context.\r\n\r\nShould this be promoted higher up in the document?",
          "createdAt": "2022-09-16T12:05:21Z",
          "updatedAt": "2022-09-16T12:05:21Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing due to lack of activity.",
          "createdAt": "2022-12-15T19:15:18Z",
          "updatedAt": "2022-12-15T19:15:18Z"
        }
      ]
    },
    {
      "number": 187,
      "id": "I_kwDODeTEy85R9TbT",
      "title": "Arch: s3.1 transitive trust in attester\u2014clarification",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/187",
      "state": "CLOSED",
      "author": "nikitaborisov",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "I found this sentence hard to interpret:\r\n\r\n> The selected Issuer transitively determines what types of attestation the Origin is willing to accept.\r\n\r\nboth because of the use \"transitive\" and because, AIUI, the Origin does not directly accept attestations at all. I tried to be a bit more explicit in this phrasing:\r\n\r\n> Each Issuer, in turn, determine which Attesters it is willing to accept in the issuance protocol. This means that if an Origin origin.example accepts tokens issued by Issuer issuer.example, and that Issuer in turn accepts attestations from Attesters attester1.example and attester2.example, then a client may use either of the Attesters for accessing origin.example. However, origin.example does not explicitly specify and indeed need not know the identities of the Attesters",
      "createdAt": "2022-09-15T20:06:10Z",
      "updatedAt": "2022-09-20T12:51:03Z",
      "closedAt": "2022-09-20T12:51:03Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Good clarification! Please check out the linked PR where I applied a variant of your suggested text.",
          "createdAt": "2022-09-16T12:09:55Z",
          "updatedAt": "2022-09-16T12:09:55Z"
        }
      ]
    },
    {
      "number": 188,
      "id": "I_kwDODeTEy85R9Veu",
      "title": "Arch: s3.2 client private input",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/188",
      "state": "CLOSED",
      "author": "nikitaborisov",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "1. The input secrecy requirement suggests that client private input would include the nonce, challenge, but doesn't give any ideas what else might be part of the private input:\r\n  > Client's private input, including the challenge and nonce\r\n2. Why is it important to have a client nonce? Is this something that needs to be spelled out in the architecture document or left to the particular issuance protocol specifications?",
      "createdAt": "2022-09-15T20:13:45Z",
      "updatedAt": "2022-09-20T12:50:55Z",
      "closedAt": "2022-09-20T12:50:55Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "1. The issuance protocol only takes as input the TokenChallenge and client-generated nonce, both of which are considered private. It doesn't take anything else as input. We should just say that directly.\r\n2. A client nonce is a required part of the Token structure.",
          "createdAt": "2022-09-16T12:11:24Z",
          "updatedAt": "2022-09-16T12:11:24Z"
        }
      ]
    },
    {
      "number": 189,
      "id": "I_kwDODeTEy85R-j1l",
      "title": "Arch: joint Attester and Origin",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/189",
      "state": "CLOSED",
      "author": "nikitaborisov",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This seems to me like a useful deployment option in cases where the Origin performs its own account management but wants to have it be unlinkable from account use. Consider, e.g., a newspaper that is subscription only, where the newspaper wants to make sure that only subscribers access articles, but it does not want to be able to track which subscribers read which articles. \r\n\r\nThis is different significantly the joint Origin, Issuer, and Attester since you _can_ use authentication methods that utilize the client's identity. I'm not sure if this is a lot different from the case where all three of Attester, Origin, Issuer are distinct from a security perspective, except that obviously a joint Attester and Origin cannot be assumed to not collude with each other. ",
      "createdAt": "2022-09-16T03:29:43Z",
      "updatedAt": "2022-12-05T20:20:51Z",
      "closedAt": "2022-12-05T20:20:51Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "In this example, why would the joint Attester and Origin outsource token issuance to a third party? This seems like a use case for the shared Attester, Issuer, and Origin model to me. Thoughts?",
          "createdAt": "2022-09-16T12:20:17Z",
          "updatedAt": "2022-09-16T12:20:17Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing based on the above. We can re-open and add this model if more people think it'd be useful.",
          "createdAt": "2022-12-05T20:20:51Z",
          "updatedAt": "2022-12-05T20:20:51Z"
        }
      ]
    },
    {
      "number": 190,
      "id": "I_kwDODeTEy85R-kTx",
      "title": "Arch: non-collusion assumption & threat model",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/190",
      "state": "CLOSED",
      "author": "nikitaborisov",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "The architecture assumes that any two parties do not collude with each other. I think this is too strong an assumption. In particular, if the Origin does not collude with anyone else, what is the point of unlinkability of the issuance and redemption flows? \r\n\r\nLooking at the use cases, it seems that where the Attester and Issuer are distinct there is a needed non-collusion assumption between them to achieve desirable privacy, but I think the origin colluding with one of the Issuer or Attester should be fine and would be worth considering in scope.\r\n\r\nAlso, in addition to the non-collusion assumption, are there any other assumptions made on the parties, such as honest-but-curious, or do we consider them to be potentially fully malicious? It would be nice to spell this out.  ",
      "createdAt": "2022-09-16T03:32:51Z",
      "updatedAt": "2022-09-20T12:50:48Z",
      "closedAt": "2022-09-20T12:50:48Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "If the Origin colluded with the Issuer it would learn the client's identity (presumably), which would be bad. Ultimately, the desired property is that any sort of collusion that would allow the redemption context to be linked to the attestation context is prohibited. I'll try to clarify.",
          "createdAt": "2022-09-16T12:23:17Z",
          "updatedAt": "2022-09-16T12:23:17Z"
        }
      ]
    },
    {
      "number": 191,
      "id": "I_kwDODeTEy85R-lme",
      "title": "Arch: timing correlation",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/191",
      "state": "CLOSED",
      "author": "nikitaborisov",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "The privacy considerations section should probably include a discussion on timing correlation. The timing issues are non-trivial here; in particular, in the scenarios where the token is issued online in response to a token challenge (which is suggested in all of the diagrams, and which is required if the origin requires session-bound tokens). In that case, the anonymity set of issuance flows that could match a redemption flow is limited to those that started after the challenge was sent and ended before the token was redeemed. Even if process takes a second (which seems slow to me), you need a fairly popular issuer service to get a non-trivial anonymity set, and any (obviously desirable) improvements in the latency of this process put further pressure on the anonymity set.\r\n\r\nI think there should be a caution against deploying PrivacyPass in a setting where the issuance rate can be low, at least in combination with session-bound context. ",
      "createdAt": "2022-09-16T03:41:09Z",
      "updatedAt": "2022-09-20T12:50:39Z",
      "closedAt": "2022-09-20T12:50:39Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "This is a good suggestion! I proposed text that adds this under the privacy considerations section.",
          "createdAt": "2022-09-16T12:37:41Z",
          "updatedAt": "2022-09-16T12:37:41Z"
        }
      ]
    },
    {
      "number": 197,
      "id": "I_kwDODeTEy85TJXe7",
      "title": "Reserve private use token types",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/197",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "tfpauly"
      ],
      "labels": [
        "auth-scheme"
      ],
      "body": "To allow experimentation and private types, define a portion of the token type registry to be reserved for private use.",
      "createdAt": "2022-10-03T15:55:36Z",
      "updatedAt": "2022-10-03T16:17:28Z",
      "closedAt": "2022-10-03T16:17:28Z",
      "comments": []
    },
    {
      "number": 199,
      "id": "I_kwDODeTEy85Twzlq",
      "title": "Slightly more specific content types?",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/199",
      "state": "CLOSED",
      "author": "quartzjer",
      "authorAssociation": "NONE",
      "assignees": [
        "chris-wood"
      ],
      "labels": [],
      "body": "I see in the current draft that they register `message/token-request` and `message/token-response`.\r\n\r\nSince \"token\" is a very broad term, I'm wondering if something slightly more specific to Privacy Pass such as `message/privacy-token-request` and `message/privacy-token-response` might be reasonable?",
      "createdAt": "2022-10-11T22:30:11Z",
      "updatedAt": "2022-10-31T19:40:27Z",
      "closedAt": "2022-10-31T19:40:27Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "If we make it more specific, it should be \"private\" instead of \"privacy\", to be \"private-token\" and align with the auth scheme.\r\n\r\nThere's a fair amount of deployment on these types today, so this would be a relatively large change, or servers would need to tolerate both versions.",
          "createdAt": "2022-10-11T22:59:35Z",
          "updatedAt": "2022-10-11T22:59:35Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "I'm in favor of making this change and having issuers support both for a little while. ",
          "createdAt": "2022-10-12T09:57:07Z",
          "updatedAt": "2022-10-12T09:57:07Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "Cool, that would work. @chris-wood want to make the proposed update?",
          "createdAt": "2022-10-12T14:15:42Z",
          "updatedAt": "2022-10-12T14:15:42Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Will do!",
          "createdAt": "2022-10-12T17:53:07Z",
          "updatedAt": "2022-10-12T17:53:07Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "@tfpauly PR's up!",
          "createdAt": "2022-10-19T14:53:19Z",
          "updatedAt": "2022-10-19T14:53:19Z"
        }
      ]
    },
    {
      "number": 203,
      "id": "I_kwDODeTEy85T9aNM",
      "title": "Privacy pass editorial comments ",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/203",
      "state": "CLOSED",
      "author": "jsalowey",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "- [x] 1. The Reference PPEXT is not cited in the document. seems it could be sited in the into PR #200 \r\n- [x] 2. I think it would be good to explicitly say that the HTTP authentication protocol is  targeted at redemption and the issuer protocol is targeted at issuance.  PR #201\r\n- [ ] 3. Last paragraph in section 3.2.1 mentions Origin Allow Lists.   These allow lists are not specifically mentioned earlier in the document.  Can you clarify this.  \r\n- [ ] 4. In section 4.3 and 4.4 is the attester involved in the TokeRequest and TokenResponse messages?  Is the attester proxying the communication? It would be good to clarify this in the text. \r\n- [ ] 5. Section 6 has an incomplete reference. \r\n- [x] 6. It seems that the Reference to RFC 8446 is not needed. PR #202\r\n- [ ] 7. The link - https://research.fb.com/wp-content/uploads/2021/01/PrivateStats-De-Identified-Authenticated-Logging-at-Scale_final.pdf does not work perhaps this is the updated one? - https://research.fb.com/privatestats",
      "createdAt": "2022-10-14T01:06:35Z",
      "updatedAt": "2022-10-17T16:58:32Z",
      "closedAt": "2022-10-17T16:58:32Z",
      "comments": []
    },
    {
      "number": 206,
      "id": "I_kwDODeTEy85VCI3G",
      "title": "Add 0-RTT replay considerations",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/206",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "auth-scheme"
      ],
      "body": "The security considerations of the auth scheme should mention 0-RTT specifically in its discussion of token replay. ",
      "createdAt": "2022-10-28T03:52:06Z",
      "updatedAt": "2022-10-28T20:46:24Z",
      "closedAt": "2022-10-28T20:46:24Z",
      "comments": []
    },
    {
      "number": 209,
      "id": "I_kwDODeTEy85VFF_M",
      "title": "Padded base64 needs to quoted as an auth parameter",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/209",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "auth-scheme"
      ],
      "body": "Julian pointed out the following:\r\n\r\n\r\n> auth parameters are token or quoted-string. If you use base64-url\r\n> encoding with \"=\" for padding, the token variant would not work, thus\r\n> the abbreviated examples are extremely misleading (might be good to\r\n> insert complete message examples...).",
      "createdAt": "2022-10-28T15:06:24Z",
      "updatedAt": "2022-11-03T16:25:27Z",
      "closedAt": "2022-11-03T16:25:27Z",
      "comments": []
    },
    {
      "number": 211,
      "id": "I_kwDODeTEy85XCtKY",
      "title": "Auth scheme: Clunky intro",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/211",
      "state": "CLOSED",
      "author": "LPardue",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "auth-scheme",
        "editorial"
      ],
      "body": "From editor copy today:\r\n\r\n> Privacy Pass tokens are unlinkable authenticators that can be used to anonymously authorize a client (see [[ARCHITECTURE](https://ietf-wg-privacypass.github.io/base-drafts/draft-ietf-privacypass-auth-scheme.html#ARCHITECTURE)]). A client possessing such a token is able to prove that it was able to get a token issued by a token issuer -- based on some check from a token issuer, such as authentication or solving a CAPTCHA -- without allowing the relying party redeeming the client's token (the origin) to link it with issuance flow.\r\n\r\nI found this intro to be a bit clunky. I didn't read the ARCHITECTURE reference yet but don't think that should be a prerequisite to comprehension of the first para. How about something like\r\n\r\n> Privacy Pass tokens are unlinkable authenticators that can be used to anonymously authorize a client (see [[ARCHITECTURE](https://ietf-wg-privacypass.github.io/base-drafts/draft-ietf-privacypass-auth-scheme.html#ARCHITECTURE)]). Token issuance by a token issuer can be based on checks such as authentication or solving a CAPTCHA. A client possessing such a token can prove that it was able to get the token issued, without allowing the relying party that redeems the client's token (the origin) to link it with the issuance flow.",
      "createdAt": "2022-11-22T18:04:45Z",
      "updatedAt": "2022-11-23T00:37:27Z",
      "closedAt": "2022-11-23T00:37:27Z",
      "comments": []
    },
    {
      "number": 212,
      "id": "I_kwDODeTEy85XCuSo",
      "title": "Auth scheme: use a more specific reference to HTTP Authentication",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/212",
      "state": "CLOSED",
      "author": "LPardue",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "auth-scheme",
        "editorial"
      ],
      "body": "Previously, the document linked to RFC 7235, whose whole purpose was to discuss HTTP Authentication. Now you kjust link to RFC 9110, which all of HTTP semantics. Suggest that you link to Section 11 of RFC 9110 to make the reader's life easier.",
      "createdAt": "2022-11-22T18:08:09Z",
      "updatedAt": "2022-11-22T23:33:27Z",
      "closedAt": "2022-11-22T23:33:27Z",
      "comments": []
    },
    {
      "number": 213,
      "id": "I_kwDODeTEy85XCwUg",
      "title": "Auth scheme: s/header/header field",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/213",
      "state": "CLOSED",
      "author": "LPardue",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "auth-scheme",
        "editorial"
      ],
      "body": "There's a few cases of `header` rather than `header field`, which is puts you on HTTP's naughty list",
      "createdAt": "2022-11-22T18:13:55Z",
      "updatedAt": "2022-11-22T23:31:49Z",
      "closedAt": "2022-11-22T23:31:49Z",
      "comments": []
    },
    {
      "number": 214,
      "id": "I_kwDODeTEy85XC2Bl",
      "title": "Auth scheme: unclear sender requirements for origin_info contents",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/214",
      "state": "CLOSED",
      "author": "LPardue",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "auth-scheme"
      ],
      "body": "Spec says:\r\n\r\n> Select the origin information to include in the TokenChallenge. This can be empty to allow fully cross-origin tokens, a single origin name that matches the origin itself, or a list of origin names containing the origin.\r\n\r\nand \r\n\r\n> \"origin_info\" is an optional string containing one or more origin names, which allows a token to be scoped to a specific set of origins. The string is prefixed with a 2-octet integer indicating the length, in network byte order. If empty, any non-origin-specific token can be redeemed. If the string contains multiple origin names, they are delimited with commas \",\" without any whitespace.\r\n\r\nand also\r\n\r\n> If the TokenChallenge contains a non-empty origin_info field, the client MUST validate that the name of the origin that issued the authentication challenge is included in the list of origin names.\r\n\r\nThe sender requirements are implicit. I'm guessing that the sender also MUST include it's own origin name in the non-empty case. Should the spec just state that?\r\n",
      "createdAt": "2022-11-22T18:29:13Z",
      "updatedAt": "2022-11-22T23:36:26Z",
      "closedAt": "2022-11-22T23:36:26Z",
      "comments": []
    },
    {
      "number": 215,
      "id": "I_kwDODeTEy85XC31m",
      "title": "Auth scheme: what happens when client validation fails?",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/215",
      "state": "CLOSED",
      "author": "LPardue",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "auth-scheme"
      ],
      "body": "For example,\r\n\r\n> If the TokenChallenge contains a non-empty origin_info field, the client MUST validate that the name of the origin that issued the authentication challenge is included in the list of origin names.\r\n\r\nWhat happens if validation fails here, is the challenge simply ignored or should the client do something more drastic?",
      "createdAt": "2022-11-22T18:33:22Z",
      "updatedAt": "2022-11-22T23:36:14Z",
      "closedAt": "2022-11-22T23:36:14Z",
      "comments": []
    },
    {
      "number": 216,
      "id": "I_kwDODeTEy85XC7Lk",
      "title": "Auth scheme: Token redemption typo bug",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/216",
      "state": "CLOSED",
      "author": "LPardue",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "auth-scheme"
      ],
      "body": "Suspect the prose is not aligned with the `Token` structure, it says\r\n\r\n> The authenticator value in the Token structure is computed over the token_type, nonce, context, and token_key_id fields.\r\n\r\nbut there is no `context` field in `Token`.",
      "createdAt": "2022-11-22T18:41:00Z",
      "updatedAt": "2022-11-22T22:30:36Z",
      "closedAt": "2022-11-22T22:30:36Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "Yup, that should say `challenge_digest`. The name changed.",
          "createdAt": "2022-11-22T22:25:01Z",
          "updatedAt": "2022-11-22T22:25:01Z"
        }
      ]
    },
    {
      "number": 217,
      "id": "I_kwDODeTEy85XC_Mi",
      "title": "Auth scheme: GREASEing",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/217",
      "state": "CLOSED",
      "author": "LPardue",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "auth-scheme"
      ],
      "body": "The spec recommends some greasing in Section 3\r\n\r\n> To mitigate the risk of deployments becoming dependent on tokens, clients and servers SHOULD grease their behavior unless explicitly configured not to. In particular, clients SHOULD ignore token challenges with some non-zero probability. Likewise, origins SHOULD randomly choose to not challenge clients for tokens with some non-zero probability. Moreover, origins SHOULD include random token types in token challenges with some non-zero probability.\r\n\r\nIn section 5.2, several token types are reserved as greased values. \r\n\r\nIs the expectation really that origins pick \"random\" token types, or with non-zero global probability across clients, randomly pick from the set of reserved token types?\r\n\r\n",
      "createdAt": "2022-11-22T18:55:39Z",
      "updatedAt": "2022-11-22T22:31:21Z",
      "closedAt": "2022-11-22T22:31:21Z",
      "comments": [
        {
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "body": "This should probably read from the list of reserved GREASE values, rather than random token types (the latter can cause interop issues).",
          "createdAt": "2022-11-22T19:01:07Z",
          "updatedAt": "2022-11-22T19:01:07Z"
        },
        {
          "author": "LPardue",
          "authorAssociation": "NONE",
          "body": "Yeah, that sounds good, ",
          "createdAt": "2022-11-22T19:24:09Z",
          "updatedAt": "2022-11-22T19:24:09Z"
        }
      ]
    },
    {
      "number": 225,
      "id": "I_kwDODeTEy85XdogI",
      "title": "Proto: why are you shouting?",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/225",
      "state": "CLOSED",
      "author": "LPardue",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "protocol"
      ],
      "body": "> This document DOES NOT cover the architectural framework required for running and maintaining the Privacy Pass protocol in the Internet setting. In addition, it DOES NOT cover the choices that are necessary for ensuring that client privacy leaks do not occur. Both of these considerations are covered in [[I-D.ietf-privacypass-architecture](https://www.ietf.org/archive/id/draft-ietf-privacypass-protocol-06.html#I-D.ietf-privacypass-architecture)].\r\n\r\nIs there a more polite way to phrase this disclaimer?",
      "createdAt": "2022-11-29T03:19:03Z",
      "updatedAt": "2022-12-05T17:07:45Z",
      "closedAt": "2022-12-05T17:07:45Z",
      "comments": [
        {
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "body": "This follows RFC 2119 (https://www.rfc-editor.org/rfc/rfc2119) and RFC 8174 linked from terminology where these are reserved phrases with specific meaning in IETF specifications and documents.\r\n\r\nThough technically these should probably be \"SHOULD NOT\" and \"SHALL NOT\" to be in line with the RFC terms.",
          "createdAt": "2022-11-29T03:29:30Z",
          "updatedAt": "2022-11-29T03:29:30Z"
        },
        {
          "author": "LPardue",
          "authorAssociation": "NONE",
          "body": "What requirements are being defined in the quoted text though? Is it simply a statement of fact like \"this document doesn't cover architectural stuff\" or is it \"implementations of the issuance protocol SHOULD account for considerations related to operations and privacy described in the architecture document\"?\r\n",
          "createdAt": "2022-11-29T03:48:44Z",
          "updatedAt": "2022-11-29T03:48:44Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "@LPardue this is just a statement of fact -- we don't need to shout it =)",
          "createdAt": "2022-12-01T13:17:09Z",
          "updatedAt": "2022-12-01T13:17:09Z"
        }
      ]
    },
    {
      "number": 226,
      "id": "I_kwDODeTEy85XdpSi",
      "title": "Proto: is the Internet important?",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/226",
      "state": "CLOSED",
      "author": "LPardue",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "protocol"
      ],
      "body": "There are two cases where the term `Internet` seems to be used with importance.\r\n\r\n> This document DOES NOT cover the architectural framework required for running and maintaining the Privacy Pass protocol in the Internet setting.\r\n\r\n> Client: An entity that provides authorization tokens to services across the Internet, in return for authorization.\r\n\r\nI suspect that the Internet isn't actually that important in the context / scope of this protocol document, especially since the architecture document doesn't mention it.",
      "createdAt": "2022-11-29T03:24:11Z",
      "updatedAt": "2022-12-05T17:07:46Z",
      "closedAt": "2022-12-05T17:07:46Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Yep, good catch. It's not. ",
          "createdAt": "2022-12-02T15:34:05Z",
          "updatedAt": "2022-12-02T15:34:05Z"
        }
      ]
    },
    {
      "number": 227,
      "id": "I_kwDODeTEy85XdqM1",
      "title": "Proto: why make assumptions in terminology?",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/227",
      "state": "CLOSED",
      "author": "LPardue",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "protocol"
      ],
      "body": "> We assume that all protocol messages are encoded into raw byte format before being sent across the wire.\r\n\r\nThis is probably just a nitpick but I don't understand what you're assuming here. If the messages **are** encoded as raw byte format, isn't that really what the document is all about? Maybe what you want to be saying is more like whats in the [auth scheme doc terminology section](https://www.ietf.org/archive/id/draft-ietf-privacypass-auth-scheme-06.html#section-1.1-2)?\r\n\r\n> Unless otherwise specified, this document encodes protocol messages in TLS notation from [[TLS13](https://www.ietf.org/archive/id/draft-ietf-privacypass-auth-scheme-06.html#TLS13)], Section 3.",
      "createdAt": "2022-11-29T03:30:25Z",
      "updatedAt": "2022-12-05T17:07:55Z",
      "closedAt": "2022-12-05T17:07:55Z",
      "comments": []
    },
    {
      "number": 228,
      "id": "I_kwDODeTEy85XdqaB",
      "title": "Proto: Issuer term",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/228",
      "state": "CLOSED",
      "author": "LPardue",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "protocol"
      ],
      "body": "> Issuer: A service produces Privacy Pass tokens to clients.\r\n\r\nIs this missing a `that`? i.e. \r\n\r\nIssuer: A service that produces Privacy Pass tokens to clients.",
      "createdAt": "2022-11-29T03:31:53Z",
      "updatedAt": "2022-12-02T15:37:12Z",
      "closedAt": "2022-12-02T15:37:12Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Yep \ud83d\udc4d Fixed directly on main.",
          "createdAt": "2022-12-02T15:37:09Z",
          "updatedAt": "2022-12-02T15:37:09Z"
        }
      ]
    },
    {
      "number": 229,
      "id": "I_kwDODeTEy85XdsD-",
      "title": "Proto: what URI or URL specs are you depending on, and what is the scope of allowed URI contents",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/229",
      "state": "CLOSED",
      "author": "LPardue",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "protocol"
      ],
      "body": "Issuers MUST provide a configuration `Issuer Request URI` , so what spec should they be referring to in order to ensure that this URI is well formed? I started wondering about how percent-encoding might apply, and that got me on to thinking whether you really want to support something like\r\n\r\n`\"issuer-request-uri\": \"https://john.doe@www.example.com:123/forum/questions/?tag=networking&order=newest#top\",",
      "createdAt": "2022-11-29T03:43:54Z",
      "updatedAt": "2022-12-05T17:13:57Z",
      "closedAt": "2022-12-05T17:13:57Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Unless I'm missing something, I don't think there should be any constraints on how the URI is constructed. We should say something about how it's encoded, though. That's a good point.",
          "createdAt": "2022-12-02T15:38:45Z",
          "updatedAt": "2022-12-02T15:38:45Z"
        }
      ]
    },
    {
      "number": 230,
      "id": "I_kwDODeTEy85XduAi",
      "title": "Proto: JSON is a missing normative dependency",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/230",
      "state": "CLOSED",
      "author": "LPardue",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "protocol"
      ],
      "body": "The configuration section lists several requirements that depend on JSON, but a JSON specification is not given.  I'm guessing you probably want https://www.rfc-editor.org/rfc/rfc8259.html.",
      "createdAt": "2022-11-29T03:58:37Z",
      "updatedAt": "2022-12-05T17:13:57Z",
      "closedAt": "2022-12-05T17:13:57Z",
      "comments": []
    },
    {
      "number": 231,
      "id": "I_kwDODeTEy85XdvJv",
      "title": "Proto: Token Type",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/231",
      "state": "CLOSED",
      "author": "LPardue",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "protocol"
      ],
      "body": "table 2 says:\r\n\r\n> \r\n\r\ntoken-type | Integer value of the Token Type, as defined in Section 8.1, as a JSON number\r\n-- | --\r\n\r\nand Section 8.1 says:\r\n\r\n> This document updates the \"Token Type\" Registry with the following values.\r\n\r\nWhat is the Token Type registry and what are the constraints on values in the registry? It's implied that values should be integers but JSON numbers are quite flexible, so would it be valid for me to register e.g. a negative integer. If the \"Token Type\" registry already exists, I'm not able to find it and a link would be useful. If it doesn't exist and this document wishes to create it, then more work is needed to establish that registry and it's procedures.",
      "createdAt": "2022-11-29T04:04:34Z",
      "updatedAt": "2022-12-05T17:17:47Z",
      "closedAt": "2022-12-05T17:17:47Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "We're missing a link to the HTTP auth document, where the registry is defined. Good catch!",
          "createdAt": "2022-12-02T15:46:41Z",
          "updatedAt": "2022-12-02T15:46:41Z"
        }
      ]
    },
    {
      "number": 232,
      "id": "I_kwDODeTEy85Xdvt3",
      "title": "Proto: well-known",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/232",
      "state": "CLOSED",
      "author": "LPardue",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "protocol"
      ],
      "body": "> Issuer directory resources have the media type \"application/json\" and are located at the well-known location /.well-known/token-issuer-directory.\r\n\r\nyou're probably missing a registration for your well-known in the IANA considerations, the registry is https://www.iana.org/assignments/well-known-uris/well-known-uris.xhtml",
      "createdAt": "2022-11-29T04:07:02Z",
      "updatedAt": "2022-12-05T17:09:36Z",
      "closedAt": "2022-12-05T17:09:36Z",
      "comments": []
    },
    {
      "number": 233,
      "id": "I_kwDODeTEy85Xdw0V",
      "title": "Proto: two refernece to Privacy Pass HTTP authentication scheme",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/233",
      "state": "CLOSED",
      "author": "LPardue",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "protocol"
      ],
      "body": "There's `[AUTHSCHEME]` and `[HTTP-Authentication]`. I'm guessing these should be collapsed to just one.",
      "createdAt": "2022-11-29T04:11:33Z",
      "updatedAt": "2022-12-05T17:17:48Z",
      "closedAt": "2022-12-05T17:17:48Z",
      "comments": []
    },
    {
      "number": 234,
      "id": "I_kwDODeTEy85XdyTA",
      "title": "Proto: Section 5.1 The TokenRequest.blinded_request is of the correct size",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/234",
      "state": "CLOSED",
      "author": "LPardue",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "protocol"
      ],
      "body": "> The TokenRequest.blinded_request is of the correct size\r\n\r\nI think this should be the `TokenRequest.blinded_msg` field, as defined earlier in section 5.1",
      "createdAt": "2022-11-29T04:18:58Z",
      "updatedAt": "2022-12-02T15:59:51Z",
      "closedAt": "2022-12-02T15:59:50Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Yep \ud83d\udc4d Fixed directly on main.",
          "createdAt": "2022-12-02T15:59:50Z",
          "updatedAt": "2022-12-02T15:59:50Z"
        }
      ]
    },
    {
      "number": 235,
      "id": "I_kwDODeTEy85XdzBq",
      "title": "Proto: Section 5.2 evaluate_msg",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/235",
      "state": "CLOSED",
      "author": "LPardue",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "protocol"
      ],
      "body": "From the struct:\r\n\r\n> uint8_t evaluate_msg[Nk];\r\n\r\nbut the prose says \r\n\r\n> \"evaluate_msg\" is the Ne-octet evaluated messaged, computed as\r\n\r\nIs the Ne / Nk mismatch a typo or expected?",
      "createdAt": "2022-11-29T04:22:53Z",
      "updatedAt": "2022-12-02T16:00:34Z",
      "closedAt": "2022-12-02T16:00:34Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "This should be `Ne` -- fixed directly on main.",
          "createdAt": "2022-12-02T16:00:34Z",
          "updatedAt": "2022-12-02T16:00:34Z"
        }
      ]
    },
    {
      "number": 236,
      "id": "I_kwDODeTEy85Xd0QQ",
      "title": "Proto: use of HTTP is uncited",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/236",
      "state": "CLOSED",
      "author": "LPardue",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "protocol"
      ],
      "body": "The Issuance protocol depends on HTTP, so I'd expect this to be cited. Then we get into the HTTP terminology alignment game. For example, where the document says something like \r\n\r\n> The Client then generates an HTTP POST request to send to the Issuer, with the TokenRequest as the body.\r\n\r\n`body` should be substituted for `content` as per https://www.rfc-editor.org/rfc/rfc9110.html#name-messages",
      "createdAt": "2022-11-29T04:29:02Z",
      "updatedAt": "2022-12-05T17:13:13Z",
      "closedAt": "2022-12-05T17:13:13Z",
      "comments": []
    },
    {
      "number": 237,
      "id": "I_kwDODeTEy85Xd0h_",
      "title": "Proto: 5.3 TokenResponse.evaluate_response",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/237",
      "state": "CLOSED",
      "author": "LPardue",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "protocol"
      ],
      "body": "> Upon receipt, the Client handles the response and, if successful, deserializes the body values TokenResponse.evaluate_response\r\n\r\nbut I think this should be `evaluate_msg` from the structure",
      "createdAt": "2022-11-29T04:30:36Z",
      "updatedAt": "2022-12-02T16:01:22Z",
      "closedAt": "2022-12-02T16:01:22Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Another one! Fixed on main.",
          "createdAt": "2022-12-02T16:01:22Z",
          "updatedAt": "2022-12-02T16:01:22Z"
        }
      ]
    },
    {
      "number": 238,
      "id": "I_kwDODeTEy85XjnN1",
      "title": "Auth: nit about capabilities",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/238",
      "state": "CLOSED",
      "author": "mnot",
      "authorAssociation": "NONE",
      "assignees": [
        "tfpauly"
      ],
      "labels": [
        "auth-scheme"
      ],
      "body": "Nit:\r\n\r\n> In addition to working with different token issuance protocols, this scheme supports optionally associating tokens with origin-chosen contexts and specific origin names.\r\n\r\nI suspect this would be more accurate if it said:\r\n\r\n> In addition to working with different token issuance protocols, this scheme optionally supports use of tokens that are assocaited with origin-chosen contexts and specific origin names.\r\n",
      "createdAt": "2022-11-30T02:23:24Z",
      "updatedAt": "2022-11-30T18:27:23Z",
      "closedAt": "2022-11-30T18:27:23Z",
      "comments": []
    },
    {
      "number": 239,
      "id": "I_kwDODeTEy85Xjnl1",
      "title": "Auth: documenting binary structures",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/239",
      "state": "CLOSED",
      "author": "mnot",
      "authorAssociation": "NONE",
      "assignees": [
        "chris-wood"
      ],
      "labels": [
        "auth-scheme",
        "editorial"
      ],
      "body": "Binary content is defined using C struct figures; I suspect using the format defined in QUIC would be more palatable for HTTP implementers.",
      "createdAt": "2022-11-30T02:25:58Z",
      "updatedAt": "2022-12-02T16:18:46Z",
      "closedAt": "2022-12-02T16:18:45Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "It's currently using TLS notation style to match the token protocol structs, etc. @chris-wood may want to chime in, but I think there was a preference for this style.",
          "createdAt": "2022-11-30T18:18:53Z",
          "updatedAt": "2022-11-30T18:18:53Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "I find the QUIC notation unintuitive, so my preference is to keep the C-style structs. But this is obviously personal taste. ",
          "createdAt": "2022-11-30T18:23:02Z",
          "updatedAt": "2022-11-30T18:23:02Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "From Slack, here's what `TokenChallenge` might look like:\r\n\r\n```\r\n// TLS-style\r\nstruct {\r\n    uint16_t token_type;\r\n    opaque issuer_name<1..2^16-1>;\r\n    opaque redemption_context<0..32>;\r\n    opaque origin_info<0..2^16-1>;\r\n} TokenChallenge;\r\n\r\n// QUIC-style\r\nToken Challenge {\r\n  Token Type (16),\r\n  Issuer Name Length (16) = 1..65535,\r\n  Issuer Name (8..65535*8),\r\n  Redemption Context Length (8) = 0..32,\r\n  Redemption Context (..32),\r\n  Origin Info Length (16) = 0..65535,\r\n  Origin Info (..65535*8),\r\n}\r\n```\r\n\r\nAnd here's what TokenRequest might look like:\r\n\r\n```\r\n// TLS-style\r\nstruct {\r\n   uint16_t token_type = 0x0001;\r\n   uint8_t token_key_id;\r\n   uint8_t blinded_msg[Ne];\r\n} TokenRequest;\r\n\r\n// QUIC-style\r\nTokenRequest {\r\n  token_type (16) = 0x0001,\r\n  token_key_id (8),\r\n  blinded_msg (Ne*8),\r\n}\r\n```\r\n\r\nI think I'm too biased towards TLS here. It would be helpful if others weighed in.",
          "createdAt": "2022-11-30T23:53:33Z",
          "updatedAt": "2022-11-30T23:53:46Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "I have a personal preference for the TLS style for these kinds of structures. ",
          "createdAt": "2022-12-01T03:12:35Z",
          "updatedAt": "2022-12-01T03:12:35Z"
        },
        {
          "author": "mnot",
          "authorAssociation": "NONE",
          "body": "Fair enough. Can you include a reference for the notational convention?",
          "createdAt": "2022-12-01T04:36:55Z",
          "updatedAt": "2022-12-01T04:36:55Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "The document does already say:\r\n\r\n> Unless otherwise specified, this document encodes protocol messages in TLS notation from [[TLS13](https://ietf-wg-privacypass.github.io/base-drafts/draft-ietf-privacypass-auth-scheme.html#TLS13)], Section 3.[\u00b6](https://ietf-wg-privacypass.github.io/base-drafts/draft-ietf-privacypass-auth-scheme.html#section-1.1-2)",
          "createdAt": "2022-12-01T16:44:06Z",
          "updatedAt": "2022-12-01T16:44:06Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Let's keep this as-is. Closing.",
          "createdAt": "2022-12-02T16:18:45Z",
          "updatedAt": "2022-12-02T16:18:45Z"
        }
      ]
    },
    {
      "number": 240,
      "id": "I_kwDODeTEy85Xjn90",
      "title": "Auth: illustration in the introduction",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/240",
      "state": "CLOSED",
      "author": "mnot",
      "authorAssociation": "NONE",
      "assignees": [
        "chris-wood"
      ],
      "labels": [
        "auth-scheme",
        "editorial"
      ],
      "body": "What is this illustration trying to convey? I found it confusing.",
      "createdAt": "2022-11-30T02:28:38Z",
      "updatedAt": "2022-12-05T17:05:06Z",
      "closedAt": "2022-12-05T17:05:06Z",
      "comments": []
    },
    {
      "number": 241,
      "id": "I_kwDODeTEy85XjpZE",
      "title": "Auth: Parameters",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/241",
      "state": "CLOSED",
      "author": "mnot",
      "authorAssociation": "NONE",
      "assignees": [
        "tfpauly"
      ],
      "labels": [
        "auth-scheme"
      ],
      "body": "The document refers to authentication scheme attributes throughout; the term from HTTP is 'parameters'.\r\n\r\nAlso, both the challenge and credentials definitions should say what to do with unrecognised parameters.",
      "createdAt": "2022-11-30T02:38:26Z",
      "updatedAt": "2022-11-30T22:58:22Z",
      "closedAt": "2022-11-30T22:58:22Z",
      "comments": []
    },
    {
      "number": 242,
      "id": "I_kwDODeTEy85XjqD_",
      "title": "Auth: interaction model",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/242",
      "state": "CLOSED",
      "author": "mnot",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "auth-scheme"
      ],
      "body": "it's not crystal-clear what the interaction model for this auth scheme is.\r\n\r\nIn many auth schemes, the credential is repeated on each request, to keep the protocol stateless, and to prove the client's identity. \r\n\r\nHowever, that doesn't seem to be desireable here -- not only would it make all of those responses uncacheable, it would (AIUI) 'spend' a lot of private tokens. OTOH, the 'realm' parameter is explicitly supported (albiet without much detail), which implies the opposite. \r\n\r\nI _think_ the preferred interaction model is that a token is only spent upon an explicit challenge from the server, but it was difficult to discern this from the documentation.\r\n\r\nEither way, it'd be good to clarify this.",
      "createdAt": "2022-11-30T02:43:10Z",
      "updatedAt": "2022-12-02T18:56:48Z",
      "closedAt": "2022-12-02T18:56:47Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "Correct, the client shouldn't spend a token multiple times, and shouldn't keep including the credential on future requests.\r\n\r\nWe could drop the realm text, but I think allowing it as a MAY does leave open use cases that might want to segment up different use cases of tokens.",
          "createdAt": "2022-11-30T18:40:02Z",
          "updatedAt": "2022-11-30T18:40:02Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Yeah, unless there's a reason to omitting it, I think keeping the MAY for the realm is fine. I tried to get a sense for how clients are intended to use other auth schemes from RFC 9110, but it wasn't clear to me. @tfpauly, do you know of other auth scheme specifications that make the interaction model more clear?",
          "createdAt": "2022-11-30T18:44:10Z",
          "updatedAt": "2022-11-30T18:44:10Z"
        }
      ]
    },
    {
      "number": 243,
      "id": "I_kwDODeTEy85Xjrzg",
      "title": "Auth: HTTP session",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/243",
      "state": "CLOSED",
      "author": "mnot",
      "authorAssociation": "NONE",
      "assignees": [
        "tfpauly"
      ],
      "labels": [
        "auth-scheme"
      ],
      "body": "> A TokenChallenge MAY be bound to a specific HTTP session with client\r\n\r\nHTTP is a stateless protocol; there is no concept of a 'session'. ",
      "createdAt": "2022-11-30T02:55:38Z",
      "updatedAt": "2022-11-30T22:58:50Z",
      "closedAt": "2022-11-30T22:58:50Z",
      "comments": []
    },
    {
      "number": 244,
      "id": "I_kwDODeTEy85XjsD7",
      "title": "Auth: When to use?",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/244",
      "state": "CLOSED",
      "author": "mnot",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "auth-scheme"
      ],
      "body": "If a server wants to use this auth scheme but the client doesn't support it, what's supposed to happen?\r\n\r\nDo you have a way for the server to discover that the client does support it?",
      "createdAt": "2022-11-30T02:57:25Z",
      "updatedAt": "2022-12-05T17:23:59Z",
      "closedAt": "2022-12-05T17:23:59Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "If the client doesn't support the scheme, it will ignore challenges \u2014 this is the same as cases where the client doesn't support a particular token type, or it fails to fetch a token for any reason. This has a useful privacy property in that it doesn't leak information about if the client couldn't fetch a token or if just doesn't support tokens, or chooses not to try to fetch a token.",
          "createdAt": "2022-11-30T18:26:00Z",
          "updatedAt": "2022-11-30T18:26:00Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "We do comment on server behavior here:\r\n\r\n> An origin MUST NOT assume that token challenges will always yield a valid token. Clients might experience issues running the issuance protocol, e.g., because the attester or issuer is unavailable, or clients might simply not support the requested token type. Origins SHOULD account for such operational or interoperability failures by offering clients an alternative type of challenge such as CAPTCHA for accessing a resource.",
          "createdAt": "2022-11-30T18:26:34Z",
          "updatedAt": "2022-11-30T18:26:34Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "We can give a simple example where the origin sends a 401 response with a body that is a CAPTCHA, such that clients that don't support this see that instead of using a token.",
          "createdAt": "2022-11-30T22:32:32Z",
          "updatedAt": "2022-11-30T22:32:32Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "An example like that would be good, but this makes me wonder: did we ever consider expressing the client's capability to support this token via a CH? I don't remember if we did or not.",
          "createdAt": "2022-11-30T22:36:14Z",
          "updatedAt": "2022-11-30T22:36:26Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "I think adding a new fingerprinting surface for that in CH isn't great. There's talk instead of having a javascript capability API for the support.",
          "createdAt": "2022-11-30T22:48:41Z",
          "updatedAt": "2022-11-30T22:48:41Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "I don't really think the fingerprinting concern is that significant. If a client supports it, then a server can more than likely (with very high probability) just probe it for a token and confirm its guess. The lack of a hint just makes the server's life more difficult without offering any meaningful privacy improvement to the client. In principle, the less signals the better, but this is a signal that can be determined anyway.",
          "createdAt": "2022-11-30T22:51:06Z",
          "updatedAt": "2022-11-30T22:52:10Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "To be clear, I'm not suggesting that we actually propose a CH for this. I'm just raising the thought experiment.",
          "createdAt": "2022-11-30T22:57:35Z",
          "updatedAt": "2022-11-30T22:57:35Z"
        }
      ]
    },
    {
      "number": 260,
      "id": "I_kwDODeTEy85X056G",
      "title": "Chris P.: WGLC: editorial",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/260",
      "state": "CLOSED",
      "author": "cjpatton",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "- [ ] Overall: The document is inconsistent about capitalization after colon (\":\").\r\n- [ ] Abstract: I'm not sure the distinction between public/private verifiability is common knowledge. It might be helpful to say plainly who is doing the verifying. E.g.: \"one [variant] providing tokens whose validity can be verified by the issuer only; and another for which token validity can be verified by any party with the issuer public key.\"\r\n- [ ] 2 Terminology: \"We assume that all protocol messages are encoded into raw byte formatt  before being sent across the wire\" This doesn't need to be mentioned, in my opinion.\r\n- [ ] 5.1 Client-To-Issuer Request: The psedocode for computing \"client_context\" hard-codes a particular OPRF suite (0x0004). Is this the only suite that is permitted/recommended by the document? I don't think this is clear until the token types are defined in Section 8.1.\r\n- [ ] 5.3 Finalization: Constants hardcoded instructs don't a semi-colon after the constant. (See \"Token\" in this section, for example.) Is this intentional? It looks a bit odd, and I'm wondering if this is \"syntactically\" correct.\r\n- [ ] 5.4 Token Verification: I think it's worth pointing out here that creating the server context requires the Issuer Private Key, which is why VOPRF is not publicly verifiable.\r\n- [ ] 7 Security Considerations: \"All security considerations described in the VOPRF document also apply in the Privacy Pass use-case.\" What about security considerations for BLINDRSA? It might be a bit cleaner to write something like this: \"Each protocol described here inherits the security considerations of its base document: For Section 5, this is [VOPRF]; ... \"\r\n- [ ] Acknowledgements: Sofi is acknowledged, but is also a co-author.\r\n",
      "createdAt": "2022-12-02T21:48:44Z",
      "updatedAt": "2022-12-05T20:20:22Z",
      "closedAt": "2022-12-05T20:20:22Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "> * [ ]  Overall: The document is inconsistent about capitalization after colon (\":\").\r\n\r\nI think I caught all of these. Addressed in #266.\r\n\r\n> * [ ]  Abstract: I'm not sure the distinction between public/private verifiability is common knowledge. It might be helpful to say plainly who is doing the verifying. E.g.: \"one [variant] providing tokens whose validity can be verified by the issuer only; and another for which token validity can be verified by any party with the issuer public key.\"\r\n\r\nYes, this is much better! Addressed in #266.\r\n\r\n> * [X]  2 Terminology: \"We assume that all protocol messages are encoded into raw byte formatt  before being sent across the wire\" This doesn't need to be mentioned, in my opinion.\r\n\r\nThis is addressed by #260.\r\n\r\n> * [ ]  5.1 Client-To-Issuer Request: The psedocode for computing \"client_context\" hard-codes a particular OPRF suite (0x0004). Is this the only suite that is permitted/recommended by the document? I don't think this is clear until the token types are defined in Section 8.1.\r\n\r\nWe explain the constant in the sentence immediately following the pseudocode, so I don't think further clarification is needed.\r\n\r\n> * [X]  5.3 Finalization: Constants hardcoded instructs don't a semi-colon after the constant. (See \"Token\" in this section, for example.) Is this intentional? It looks a bit odd, and I'm wondering if this is \"syntactically\" correct.\r\n\r\nThe semi-colon was missing, but we updated this to match what's done in RFC8446. Addressed in #266.\r\n\r\n> * [X]  5.4 Token Verification: I think it's worth pointing out here that creating the server context requires the Issuer Private Key, which is why VOPRF is not publicly verifiable.\r\n\r\nAddressed in #266.\r\n\r\n> * [ ]  7 Security Considerations: \"All security considerations described in the VOPRF document also apply in the Privacy Pass use-case.\" What about security considerations for BLINDRSA? It might be a bit cleaner to write something like this: \"Each protocol described here inherits the security considerations of its base document: For Section 5, this is [VOPRF]; ... \"\r\n\r\nGood catch. This has already been fixed on the editor's branch to say \"All security considerations described in the VOPRF and blind RSA documents also apply in the Privacy Pass use-case.\"\r\n",
          "createdAt": "2022-12-05T15:59:41Z",
          "updatedAt": "2022-12-05T15:59:41Z"
        }
      ]
    },
    {
      "number": 261,
      "id": "I_kwDODeTEy85X1B6y",
      "title": "Chris P.: WGLC: What is the byte order of hex constants?",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/261",
      "state": "CLOSED",
      "author": "cjpatton",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "Hexadecimal constants are used as strings without specifying the length or byte order. For example, \"0x0001\" might be interpreted in a couple of ways. Usually the correct interpretation is clear in context, but I'm not sure it always is.\r\n",
      "createdAt": "2022-12-02T22:10:30Z",
      "updatedAt": "2022-12-05T20:20:21Z",
      "closedAt": "2022-12-05T20:20:21Z",
      "comments": []
    },
    {
      "number": 262,
      "id": "I_kwDODeTEy85X3Euz",
      "title": "Proto: Remove mention of public metadata",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/262",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "From @cjpatton:\r\n\r\n> In the abstract you mention that: \"The privately verifiable issuance protocol optionally supports public metadata during the \r\nissuance flow.\" Where does this metadata come up in the protocol? As far as I can tell, the two protocols look functionally equivalent modulo who can verify. Perhaps you removed metadata at some point? In particular, double check that the following claim in Section 6 is accurate: \"The issuance protocol does not admit public or private metadata to bind additional context to tokens.\"\r\n",
      "createdAt": "2022-12-03T14:12:45Z",
      "updatedAt": "2022-12-05T20:18:48Z",
      "closedAt": "2022-12-05T20:18:48Z",
      "comments": []
    },
    {
      "number": 263,
      "id": "I_kwDODeTEy85X3EyP",
      "title": "Proto: Cite RSA-Verify",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/263",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "From @cjpatton:\r\n\r\n> Section 6.4: \"The function RSA-Verify(msg, pk, sig) is a procedure to verify a signature \u2026 Its implementation is not specified in this document.\". Is it specified somewhere, perhaps [BLINDRSA]? A reference would be useful, in my opinion.\r\n",
      "createdAt": "2022-12-03T14:13:02Z",
      "updatedAt": "2022-12-05T20:19:05Z",
      "closedAt": "2022-12-05T20:19:05Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "This should probably just invoke `RSASSA-PSS-VERIFY` from RFC8017 directly, since the named variants we allow for this token type must use PSS.",
          "createdAt": "2022-12-03T14:13:51Z",
          "updatedAt": "2022-12-03T14:13:51Z"
        }
      ]
    },
    {
      "number": 267,
      "id": "I_kwDODeTEy85YqrIR",
      "title": "Protocol document should explain (optional) attester behavior",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/267",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [
        "protocol"
      ],
      "body": "Split attesters and issuers are not required for the basic issuance protocol, but we should explain (in a sentence or so) that if you are using a split attester, the client sends the request to the attester, and the attester forwards the request to the issuer if it accepts the client.",
      "createdAt": "2022-12-09T22:51:55Z",
      "updatedAt": "2022-12-14T17:52:28Z",
      "closedAt": "2022-12-14T17:52:28Z",
      "comments": [
        {
          "author": "donivatamazondotcom",
          "authorAssociation": "NONE",
          "body": "For better clarity and consistency, I recommend adding a sequence diagram depicting this model considering the sequence diagrams that outline other models.",
          "createdAt": "2022-12-10T00:27:41Z",
          "updatedAt": "2022-12-10T00:27:41Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Agreed. This would be a good thing to include. I'll take this and add it.",
          "createdAt": "2022-12-10T14:09:08Z",
          "updatedAt": "2022-12-10T14:09:08Z"
        },
        {
          "author": "plisiecki1",
          "authorAssociation": "NONE",
          "body": "In a split attester/issuer scenario, the issuer needs to authenticate the attester in some way (e.g., TLS client cert).\r\n\r\nIn a combined attester/issuer scenario, the actual protocol might be something proprietary (or covered by an as-yet-unwritten spec) that extends the base issuance protocol, e.g., adding an attestation header, user login cookie, or adding extra challenge/response rounds to confirm identity.\r\n\r\nIf these issues are \"in scope\" then they should be defined here. If they are \"out of scope\" then it would be helpful context to reader to describe what is expected to be handled by a proprietary extension.",
          "createdAt": "2022-12-12T18:03:53Z",
          "updatedAt": "2022-12-12T18:03:53Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "@plisiecki1 we discuss these things in the architecture document where deployment models are discussed. But we should mention the impact that different deployment models have on the basic issuance protocol in the -protocol spec.",
          "createdAt": "2022-12-13T23:19:17Z",
          "updatedAt": "2022-12-13T23:19:17Z"
        }
      ]
    },
    {
      "number": 269,
      "id": "I_kwDODeTEy85Y2OrM",
      "title": "Define Verifier?",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/269",
      "state": "CLOSED",
      "author": "ShivanKaul",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "[Section 5.4](https://datatracker.ietf.org/doc/html/draft-ietf-privacypass-protocol#section-5-4) discusses verification, but doesn't define the role of a Verifier. I'm guessing this is because the definition is trivial (Verifiers... verify) but is the intention for the Origin to always be the Verifier? Or could that be delegated? We could have the following addition to Terminology:\r\n\r\n>- Verifier: Verifiers verify that a particular Token is valid using either the Issuer's Private Key and Public Key (for the private verification variant) or only the Issuer's Public Key (for the public verification variant). This is typically the same as the Origin.\r\n",
      "createdAt": "2022-12-12T00:25:51Z",
      "updatedAt": "2022-12-13T21:11:39Z",
      "closedAt": "2022-12-13T21:11:39Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "This was fixed to avoid the use of the term \"Verifier.\"",
          "createdAt": "2022-12-13T21:11:38Z",
          "updatedAt": "2022-12-13T21:11:38Z"
        }
      ]
    },
    {
      "number": 270,
      "id": "I_kwDODeTEy85Y2PI5",
      "title": "Define Nk",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/270",
      "state": "CLOSED",
      "author": "ShivanKaul",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "[Section 6.1](https://datatracker.ietf.org/doc/html/draft-ietf-privacypass-protocol#section-6-1-7-3) doesn't define `Nk`. The preceding text to the example says that Nk is 512, but AFAICT the value of Nk is not relevant to the example.",
      "createdAt": "2022-12-12T00:29:00Z",
      "updatedAt": "2022-12-13T21:51:00Z",
      "closedAt": "2022-12-13T21:51:00Z",
      "comments": [
        {
          "author": "plisiecki1",
          "authorAssociation": "NONE",
          "body": "Section 8.2 defines Nk=256 for type 0x0002. Section 6.1 should still apply for any value Nk if another type is added for a different size key. My two suggestions would be: (1) mention in Section 6.1 that Nk is fixed according to the token type definition and (2) use Nk=256 for the example so it matches the only currently defined blind token type (0x0002).",
          "createdAt": "2022-12-12T17:56:25Z",
          "updatedAt": "2022-12-12T17:56:25Z"
        }
      ]
    },
    {
      "number": 271,
      "id": "I_kwDODeTEy85Y2WK7",
      "title": "Table 1 has no anchor in prose",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/271",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "The table appears without the text referring to it, even with an \"as follows\".  It might be better to reference it directly.",
      "createdAt": "2022-12-12T01:19:24Z",
      "updatedAt": "2022-12-14T16:30:23Z",
      "closedAt": "2022-12-14T16:30:23Z",
      "comments": []
    },
    {
      "number": 272,
      "id": "I_kwDODeTEy85Y2WVd",
      "title": "Parentheses for JSON citations",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/272",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "> The Issuer parameters can be obtained from an Issuer via a directory object, which is a JSON object [[RFC8259](https://datatracker.ietf.org/doc/html/draft-ietf-privacypass-protocol-07#RFC8259)], [Section 4](https://rfc-editor.org/rfc/rfc8259#section-4) whose values are other JSON values [[RFC8259](https://datatracker.ietf.org/doc/html/draft-ietf-privacypass-protocol-07#RFC8259)], [Section 3](https://rfc-editor.org/rfc/rfc8259#section-3) for the parameters.\r\n\r\nMight be better as:\r\n\r\n> The Issuer parameters can be obtained from an Issuer via a directory object, which is a JSON object ([[RFC8259](https://datatracker.ietf.org/doc/html/draft-ietf-privacypass-protocol-07#RFC8259)], [Section 4](https://rfc-editor.org/rfc/rfc8259#section-4)) whose values are other JSON values ([[RFC8259](https://datatracker.ietf.org/doc/html/draft-ietf-privacypass-protocol-07#RFC8259)], [Section 3](https://rfc-editor.org/rfc/rfc8259#section-3)) for the parameters.\r\n\r\nSee also #271.",
      "createdAt": "2022-12-12T01:20:10Z",
      "updatedAt": "2022-12-13T20:41:36Z",
      "closedAt": "2022-12-13T20:41:36Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "This was fixed in @ShivanKaul's PR. Thanks, @ShivanKaul!",
          "createdAt": "2022-12-13T20:41:36Z",
          "updatedAt": "2022-12-13T20:41:36Z"
        }
      ]
    },
    {
      "number": 273,
      "id": "I_kwDODeTEy85Y2Wkq",
      "title": "Overflow in figure",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/273",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "I count 77 columns for the second line of the example in Section 3:\r\n\r\n```json\r\n {\r\n    \"issuer-request-uri\": \"https://issuer.example.net/example-token-request\",\r\n    \"token-keys\": [\r\n```",
      "createdAt": "2022-12-12T01:21:14Z",
      "updatedAt": "2022-12-13T20:56:25Z",
      "closedAt": "2022-12-13T20:56:24Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "This has been fixed in #290.",
          "createdAt": "2022-12-13T20:56:24Z",
          "updatedAt": "2022-12-13T20:56:24Z"
        }
      ]
    },
    {
      "number": 274,
      "id": "I_kwDODeTEy85Y2W9v",
      "title": "Media type for the directory",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/274",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This is a bit of a hard one to decide for me, but I think that you want to define a media type for the JSON directory.\r\n\r\nI know that in most cases the content will be served from a .well-known location, but that isn't always.",
      "createdAt": "2022-12-12T01:22:55Z",
      "updatedAt": "2022-12-14T16:30:22Z",
      "closedAt": "2022-12-14T16:30:22Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "What would be the benefit of a media type here if the content will always be JSON? That is, I don't see how a media type would influence consumers of the resource.",
          "createdAt": "2022-12-12T12:25:49Z",
          "updatedAt": "2022-12-12T12:25:49Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "So that you can make it clear that it is this specific JSON, as opposed to some other JSON.",
          "createdAt": "2022-12-12T23:41:16Z",
          "updatedAt": "2022-12-12T23:41:16Z"
        }
      ]
    },
    {
      "number": 275,
      "id": "I_kwDODeTEy85Y2X9A",
      "title": "Lots of overlong lines",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/275",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "If you have no intention of abiding by line length limits, maybe disable the warnings.  I can fill my 100-line terminal many times over with the output of building these drafts.  Some of these are genuine problems, but there is too much noise to work out which is which.",
      "createdAt": "2022-12-12T01:27:22Z",
      "updatedAt": "2022-12-13T20:56:35Z",
      "closedAt": "2022-12-13T20:56:34Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed in #290.",
          "createdAt": "2022-12-13T20:56:34Z",
          "updatedAt": "2022-12-13T20:56:34Z"
        }
      ]
    },
    {
      "number": 277,
      "id": "I_kwDODeTEy85Y341f",
      "title": "Request to issuer section and 400 response",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/277",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "[Section 5.1 of the protocol](https://www.ietf.org/archive/id/draft-ietf-privacypass-protocol-07.html#section-5.1) ends with two paragraphs that really belong in Section 5.2, because they are about the processing of the request.",
      "createdAt": "2022-12-12T05:59:35Z",
      "updatedAt": "2022-12-13T22:46:32Z",
      "closedAt": "2022-12-13T22:46:32Z",
      "comments": []
    },
    {
      "number": 278,
      "id": "I_kwDODeTEy85Y4CUo",
      "title": "Partitioning of users",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/278",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "There are claims in [Section 7 of the protocol](https://www.ietf.org/archive/id/draft-ietf-privacypass-protocol-07.html#section-7) about the value of truncating the issuer's key identifier that I don't think hold outside of having some sort of consistency.\r\n\r\nLet's say that I - your hypothetical attacker - want to partition users into 257 groups.  I give the first 255 groups a unique key for which the last byte of `token_key_id = SHA256(concat(0x0001, SerializeElement(pkI)))` is distinct.  For the last two users, I can generate two keys that map to the remaining byte value.\r\n\r\nFor the private validation setting, I can issue clients with unique values for `pkI` and tokens that match.  When validating the token, that's me (the attacker) again, so I can validate against both keys.  The complexity of my operation has doubled, but it's a linear search and maybe I can keep the numbers down to manage overall costs.\r\n\r\nIn a public validation setting, I have to ensure that any entity that might validate the tokens also gets a matching value for `pkI`, or that they are complicit in the attack and so are willing to do the extra work.  Generally, this is only the client still, so this is probably achievable, though there is a risk of an independent audit catching this.\r\n\r\nGoing from 8 bits to 9 bits of partition space doubles the work for any validator, and each additional bit doubles again.  That might be OK, but the claims would appear to be somewhat more absolute than this result implies:\r\n\r\n> Since the key ID is truncated to a single byte, an Issuer can partition the set of Clients into at most 256 different anonymity sets.\r\n\r\nAlso, even this isn't a great outcome either.  256 is pretty large, and the partitioning allocation (again, absent consistency) is under attacker control.",
      "createdAt": "2022-12-12T06:22:21Z",
      "updatedAt": "2022-12-15T16:49:54Z",
      "closedAt": "2022-12-15T16:49:54Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Good point. The bound was written under the assumption that the attacker does no work to tag clients, but that bound goes up provided it's willing and able to keep more keys around. I think we ought to just drop the explicit bound check here and rewrite things to suggest that tagging is \"not feasible at scale\" (or whatever), which is something I'm comfortable with saying. Absent consistency, that's the best sort of guarantee I think we'll get. \r\n\r\nBeyond this editorial change, we could truncate the key identifier even further to make this tradeoff involve more work for the attacker. Going from 8 bits down to n \\in {2,3,4} bits seems pretty reasonable to me, giving us a window of 2^n keys. ",
          "createdAt": "2022-12-12T12:35:33Z",
          "updatedAt": "2022-12-12T12:35:33Z"
        },
        {
          "author": "plisiecki1",
          "authorAssociation": "NONE",
          "body": "2^4 seems reasonable to me.  2^2 is too tight for managing rotations and leaves very little room to monitor for clients using incorrect/stale key_ids.  (A fairly standard 3-key rotation cycle means 3/4 of all expired key_id's would still appear valid to the issuer at any given time.)",
          "createdAt": "2022-12-12T17:50:08Z",
          "updatedAt": "2022-12-12T17:50:08Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "Discussing leaving it at 8 bits to keep aligned with OHTTP and ECH, and adding more text about this area and the requirements for consistency checks.",
          "createdAt": "2022-12-12T20:38:18Z",
          "updatedAt": "2022-12-12T20:38:18Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I don't see alignment as a concern: the value is going to be conveyed in an 8 bit field, but you don't have to use all the bits.\r\n\r\nStronger emphasis on consistency is the direction I'd be looking for, definitely.",
          "createdAt": "2022-12-12T23:43:55Z",
          "updatedAt": "2022-12-12T23:43:55Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "I think we ought to keep the consistency discussion primarily in the architecture document. Any objections to that, @martinthomson and @tfpauly?",
          "createdAt": "2022-12-13T21:19:18Z",
          "updatedAt": "2022-12-13T21:19:18Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "There at least should be some strong pointers to that section in architecture, I think.",
          "createdAt": "2022-12-13T23:58:50Z",
          "updatedAt": "2022-12-13T23:58:50Z"
        }
      ]
    },
    {
      "number": 279,
      "id": "I_kwDODeTEy85Y4Cpg",
      "title": "xxx well-known URI",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/279",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "The caption for [Table 3](https://www.ietf.org/archive/id/draft-ietf-privacypass-protocol-07.html#table-3) is: \"'xxx' Well-Known URI\", which is probably wrong.",
      "createdAt": "2022-12-12T06:23:13Z",
      "updatedAt": "2022-12-14T16:30:22Z",
      "closedAt": "2022-12-14T16:30:22Z",
      "comments": []
    },
    {
      "number": 280,
      "id": "I_kwDODeTEy85Y4F7F",
      "title": "Redemption",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/280",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "architecture"
      ],
      "body": "The protocol descriptions in the protocol draft (Sections 5 and 6) don't include a heading for token redemption.  It looks like the finalization step is where some of that happens, but it seems fairly crucial for the draft to explain that clients to remove blinding and then construct a token that can be redeemed...*and then they send it to the origin*.\r\n\r\nThere is a similar problem in the architecture draft where the \"redemption\" protocol doesn't show the challenge-response flow, or even a spontaneous flow.  That is left for the section following, which covers issuance.",
      "createdAt": "2022-12-12T06:28:50Z",
      "updatedAt": "2022-12-15T16:49:55Z",
      "closedAt": "2022-12-15T16:49:55Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "I think we can probably address this by including \"end to end\" examples in the architecture document. The auth-scheme and protocol documents try to focus on their respective protocols. That is, the auth scheme creates token challenges and then consumes tokens, whereas the issuance spec takes token challenges as input and produces tokens as output. @tfpauly, thoughts?",
          "createdAt": "2022-12-13T21:18:25Z",
          "updatedAt": "2022-12-13T21:18:25Z"
        }
      ]
    },
    {
      "number": 281,
      "id": "I_kwDODeTEy85Y4HuS",
      "title": "Blind RSA server key identifiers",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/281",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "[Section 6.5 of the issuance protocol](https://www.ietf.org/archive/id/draft-ietf-privacypass-protocol-07.html#section-6.5) diverges from [Section 5.5](https://www.ietf.org/archive/id/draft-ietf-privacypass-protocol-07.html#section-5.5).\r\n\r\nIn the earlier section:\r\n\r\n```\r\ntoken_key_id = SHA256(concat(0x0001, SerializeElement(pkI)))\r\n```\r\n\r\nIn the latter, this approximates to:\r\n\r\n```\r\ntoken_key_id = SHA256(DER(SubjectPublicKeyInfo(pkI)))\r\n```\r\n\r\n... with no 0x0002.",
      "createdAt": "2022-12-12T06:34:13Z",
      "updatedAt": "2022-12-14T16:29:52Z",
      "closedAt": "2022-12-14T16:29:52Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "I would be fine with adding a token type separator to the type2 variant. It's a simple enough change to make and deploy right now. @tfpauly, @janaiyengar: thoughts?",
          "createdAt": "2022-12-12T12:24:13Z",
          "updatedAt": "2022-12-12T12:24:13Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "@chris-wood is there a reason the type 1 key ID needs 0x0001 concatenated to it?",
          "createdAt": "2022-12-12T14:09:24Z",
          "updatedAt": "2022-12-12T14:09:24Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "We did this for separation between privacy pass and other potential uses of the same key. I don't remember exactly why we didn't do this for type2. ",
          "createdAt": "2022-12-12T16:47:23Z",
          "updatedAt": "2022-12-12T16:47:23Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "Had a call, proposing to make things consistent by removing the `concat(0x0001` for Type 1, since it doesn't seem to add any benefit, since the token_input is already binding the protocol to the type and challenge.\r\n\r\nAlso recommending adding more text (in security considerations) to make it very clear that keys ought to not be reused across protocols.",
          "createdAt": "2022-12-12T20:29:09Z",
          "updatedAt": "2022-12-12T20:29:09Z"
        }
      ]
    },
    {
      "number": 282,
      "id": "I_kwDODeTEy85Y4Ir-",
      "title": "Assumptions about length",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/282",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "In the issuance protocol draft, there are a few places where it is *assumed* that a value will be a certain length, but no effort has been made to explicitly set a length.\r\n\r\nIn [Section 6.1](https://www.ietf.org/archive/id/draft-ietf-privacypass-protocol-07.html#section-6.1):\r\n\r\n```\r\ntoken_input = concat(0x0002, nonce, challenge_digest, token_key_id)\r\n```\r\n\r\nIs the 0x0002 two octets?  Sure, you might readily assume that, but nothing says that explicitly.\r\n\r\nThe same assumption appears in Sections 5.1 and 5.5.",
      "createdAt": "2022-12-12T06:37:24Z",
      "updatedAt": "2022-12-14T16:30:41Z",
      "closedAt": "2022-12-14T16:30:41Z",
      "comments": []
    },
    {
      "number": 283,
      "id": "I_kwDODeTEy85Y4JtK",
      "title": "Broken links to Blind RSA draft",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/283",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "> The rsabssa_blind_sign function is defined in [[BLINDRSA](https://www.ietf.org/archive/id/draft-ietf-privacypass-protocol-07.html#BLINDRSA)], [Section 5.1.2.](https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-rsa-blind-signatures-07#section-5.1.2.).\r\n\r\nThis link is broken in a few ways.  Note that the links has an trailing period in it, which is only part of the problem there; there is no Section 5.1.2 or Section \"5.1.2.\".  Also, the function is called \"BlindSign\" in that version of the draft.",
      "createdAt": "2022-12-12T06:40:30Z",
      "updatedAt": "2022-12-14T16:30:41Z",
      "closedAt": "2022-12-14T16:30:41Z",
      "comments": []
    },
    {
      "number": 285,
      "id": "I_kwDODeTEy85Y4OTb",
      "title": "Bloated tables",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/285",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "The [table in Section 8.2](https://www.ietf.org/archive/id/draft-ietf-privacypass-protocol-07.html#table-4) of the issuance protocol draft is just too wide for this format.  Consider using a definition list instead, transposing the table, or finding a way to remove columns.",
      "createdAt": "2022-12-12T06:54:19Z",
      "updatedAt": "2022-12-13T20:08:38Z",
      "closedAt": "2022-12-13T20:08:38Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "A list would be better, yeah. We discussed this briefly in #257. ",
          "createdAt": "2022-12-12T12:20:44Z",
          "updatedAt": "2022-12-12T12:20:44Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed in #290",
          "createdAt": "2022-12-13T20:08:38Z",
          "updatedAt": "2022-12-13T20:08:38Z"
        }
      ]
    },
    {
      "number": 286,
      "id": "I_kwDODeTEy85Y-QEd",
      "title": "Fix language in intro \"for ensuring that client privacy leaks\"",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/286",
      "state": "CLOSED",
      "author": "plisiecki1",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "> This document does not cover the Privacy Pass architecture, including choices that are necessary for ensuring that client privacy leaks. This information is covered in [ARCHITECTURE].\r\n\r\nThis should presumably say \"for ensuring that client privacy does not leak\" or \"to prevent client privacy leaks.\"\r\n\r\n",
      "createdAt": "2022-12-12T20:39:11Z",
      "updatedAt": "2022-12-13T22:45:34Z",
      "closedAt": "2022-12-13T22:45:34Z",
      "comments": []
    },
    {
      "number": 287,
      "id": "I_kwDODeTEy85Y-dns",
      "title": "Safe addition/removal of token_types by an issuer",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/287",
      "state": "CLOSED",
      "author": "plisiecki1",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "I believe there is a race condition if an issuer tries to add or remove `token_type`s in its directory.\r\n\r\nWhen adding a token type, a client may see the a key for the new `token_type` in the directory and use it even though the origin may have a slightly stale directory.\r\n\r\nWhen removing a token, a client may see still see the key for the old `token_type` in a slightly stale directory and use it even the the origin may already have refreshed its directory.\r\n\r\nOne potential way to address this would be to extend or replace key ordering with a designation of which key(s) are \"active.\" The client would only pick \"active\" keys to make requests to an issuer, but origins would verify against all listed keys. A `token_type` could then be \"rotated\" in/out of use by having it appear for some time as inactive before activating it or removing it entirely.",
      "createdAt": "2022-12-12T21:06:35Z",
      "updatedAt": "2022-12-19T16:24:15Z",
      "closedAt": "2022-12-19T16:24:15Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Hmm, unless there's some sort of additional consistency mechanism in place, clients are not really expected to fetch or inspect the issuer's configuration. This is only useful information for the origin. This relates to how the information is cached, so I think we can address this and #289 at the same time.",
          "createdAt": "2022-12-13T21:10:48Z",
          "updatedAt": "2022-12-13T21:10:48Z"
        },
        {
          "author": "plisiecki1",
          "authorAssociation": "NONE",
          "body": "There is still some potential for skew even with cache-control. The update includes a new to refetch the config if there is evidence that it's stale, and that certainly could help in many cases.\r\n\r\nPresumably an issuer must still support a key for some amount of time after removing it from the directory for at least the cache max-age. (Is that worth mentioning explicitly?)\r\n\r\nA client that is using consistency may fail to validate a token key if it has a _fresher_ directory than the origin and the token_type has been removed. One option would be for consistency providers to keep old keys around for some time after they are removed from the directory. Another option would be for the client to try other token_types that were offered by the origin. Would it be helpful to mention somewhere (issuance protocol or maybe the http auth scheme?) that clients should try a different (supported) token_type if the first attempt fails?",
          "createdAt": "2022-12-14T00:14:28Z",
          "updatedAt": "2022-12-14T00:14:28Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "There will always be potential for skew in a distributed system like this. We already note that the issuer can advertise multiple keys (sorted by order of preference) to address this particular problem:\r\n\r\n> Issuers MAY advertise multiple token-keys for the same token-type to support key rotation. In this case, Issuers indicate preference for which token key to use based on the order of keys in the list, with preference given to keys earlier in the list.\r\n\r\nI don't think we need to say anything more without just being confusing. ",
          "createdAt": "2022-12-14T11:51:44Z",
          "updatedAt": "2022-12-14T11:51:44Z"
        }
      ]
    },
    {
      "number": 288,
      "id": "I_kwDODeTEy85Y-hfT",
      "title": "Issuer Request URI: URL? \"text/plain\"?",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/288",
      "state": "CLOSED",
      "author": "plisiecki1",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "> Issuer Request URI: A token request URL for generating access tokens.  For example, an Issuer URL might be https://issuer.example.net/example-token-request.  This parameter uses resource media type \"text/plain\".\r\n\r\nSince this URI is intended to be used as a URL later in the protocol -- and the description in fact calls it a URL -- would it be cleaner to name the parameter \"Issuer Request URL\"/`issuer-request-url`?\r\n\r\nWhat \"thing\" is actually `text/plain`? The directory itself is `application/json`, the resulting content is JSON (whose strings do not carry a notion of media types), and the token request/response using this URI use `application/private-token-request`/`application/private-token-response`.",
      "createdAt": "2022-12-12T21:17:23Z",
      "updatedAt": "2022-12-14T19:46:59Z",
      "closedAt": "2022-12-14T19:46:59Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "I think just dropping the media type mention at all is probably best here. It's just a URL string, so let's just call it that. Does #296 work for you?",
          "createdAt": "2022-12-13T21:00:14Z",
          "updatedAt": "2022-12-13T21:00:14Z"
        },
        {
          "author": "plisiecki1",
          "authorAssociation": "NONE",
          "body": "That looks much better. Should the parameter also be `issuer-request-url`?",
          "createdAt": "2022-12-13T23:56:52Z",
          "updatedAt": "2022-12-13T23:56:52Z"
        }
      ]
    },
    {
      "number": 289,
      "id": "I_kwDODeTEy85Y-lrN",
      "title": "caching of issuer directories",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/289",
      "state": "CLOSED",
      "author": "plisiecki1",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "Most likely, clients and origins will be caching issuer directories.\r\n\r\nIs it worth offering any guidance to client/origin implementations regarding caching? Is honoring cache-control response headers sufficient? And if so, should that be called out explicitly as a reminder to implementers (who might be building a custom cache or perhaps caching the parsed JSON content separately from an existing HTTP layer)?\r\n\r\nIs it worth offering any guidance to issuers about how long they should assume directory changes will take to reach ~100% of clients and issuers? (My gut says no to this one -- but I am throwing it out in case others think it is worthwhile.)",
      "createdAt": "2022-12-12T21:31:50Z",
      "updatedAt": "2022-12-19T16:24:15Z",
      "closedAt": "2022-12-19T16:24:15Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Using cache control directives for this key material seems fine, provided it's done in accordance with your key rotation schedule.",
          "createdAt": "2022-12-13T21:10:29Z",
          "updatedAt": "2022-12-13T21:10:29Z"
        },
        {
          "author": "plisiecki1",
          "authorAssociation": "NONE",
          "body": "The proposed change addresses the primary concern of this issue.\r\n\r\n> When use of an Issuer configuration results to token issuance failures\r\n\r\nTypo? Should it be \"results in\"?",
          "createdAt": "2022-12-13T23:59:47Z",
          "updatedAt": "2022-12-13T23:59:47Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "> Typo? Should it be \"results in\"?\r\n\r\nYep, fixed.",
          "createdAt": "2022-12-14T11:50:04Z",
          "updatedAt": "2022-12-14T11:50:04Z"
        }
      ]
    },
    {
      "number": 300,
      "id": "I_kwDODeTEy85ZJ_pU",
      "title": "Issuer directories are underspecified",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/300",
      "state": "CLOSED",
      "author": "e271828-",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "There are several related issues in https://github.com/ietf-wg-privacypass/base-drafts/blob/main/draft-ietf-privacypass-protocol.md#configuration-setup:\r\n\r\n1. Should the well-known location `/.well-known/token-issuer-directory` require mTLS? The two well-known public implementations previously highlighted by Apple disagree on this point.\r\n\r\nOur opinion: mTLS should not be required for the token issuer directory.\r\n\r\n2. `issuer-request-uri` is underspecified. Should this be an absolute URI, a relative URI, or allow either format?\r\n\r\nOur opinion: We prefer relative URIs, and think either option should be supported. A relative URI is also used by at least one well-known public implementation.",
      "createdAt": "2022-12-14T06:12:56Z",
      "updatedAt": "2022-12-14T19:47:00Z",
      "closedAt": "2022-12-14T19:47:00Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "> Should the well-known location /.well-known/token-issuer-directory require mTLS? The two well-known public implementations previously highlighted by Apple disagree on this point.\r\n\r\nNo. That's deployment specific decision.\r\n\r\n> issuer-request-uri is underspecified. Should this be an absolute URI, a relative URI, or allow either format?\r\n\r\nEither is fine, as evidenced by current implementations. We'll make this clear.",
          "createdAt": "2022-12-14T11:53:28Z",
          "updatedAt": "2022-12-14T11:53:28Z"
        }
      ]
    },
    {
      "number": 302,
      "id": "I_kwDODeTEy85ZnCcl",
      "title": "Improve attestation terminology",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/302",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "After talking with @hannestschofenig and @thomas-fossati, it seems like we could benefit from more clarity around attestation. In particular, we could improve clarity by providing a mapping between the terminology used in the architecture document and the terminology used in the RATS working group (which already does attestation stuff). Moreover, we could provide more examples of how attestation might actually work in practice. Currently, the diagrams just have this opaque \"Attest\" message that's sent in the issuance protocol, but expanding on that with details and an example or two could help align everyone's mental model. ",
      "createdAt": "2022-12-19T18:48:08Z",
      "updatedAt": "2023-01-30T16:50:39Z",
      "closedAt": "2023-01-30T16:50:39Z",
      "comments": []
    },
    {
      "number": 303,
      "id": "I_kwDODeTEy85ZpbMM",
      "title": "The challenge doesn't determine what is acceptable",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/303",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "architecture"
      ],
      "body": "Is [this](https://ietf-wg-privacypass.github.io/base-drafts/draft-ietf-privacypass-architecture.html#section-3.1-4) really true?\r\n\r\n> The challenge controls the type of token that the Origin will accept for the given resource. \r\n\r\nA challenge is just a declaration from the Origin about what the Client should offer.  It exerts no control.\r\n\r\nI would have thought that the arrangement is thus:\r\n\r\n* The Origin determines what sorts of token are acceptable, including whether a token is necessary.  This might incorporate any contextual information and so could change between different Clients or over time.\r\n* A valid token includes information that an Origin can use to validate it against its policies.  This includes all the stuff in the list that follows the quoted text (issuance protocol, issuer, redemption context, origin).  Importantly, it does not carry information that directly identifies the Client to any entity other than the Origin; this being the primary privacy benefit to Clients.\r\n* If the Origin determines that a token is necessary it can issue a challenge to the Client.  This challenge might imply that a token that meets these constraints would be acceptable, but see the first point (i.e., the Origin can change its mind).  There should be enough information in the challenge for the Client to obtain a token under reasonable assumptions (the Client understands the request and meets the requirements for token issuance).\r\n* Clients can pre-emptively request token issuance. This might be based on a previous indication that this might work. (I see some caching in the trust tokens API.)",
      "createdAt": "2022-12-20T06:03:09Z",
      "updatedAt": "2023-01-26T00:34:59Z",
      "closedAt": "2023-01-26T00:34:59Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "I'm probably missing the confusion that led to this issue. The arrangement you describe is true, and in that arrangement the only tokens that will be accepted for an Origin are those which verify with a valid challenge. That means the challenge determines how the client produces a valid token. For example, the challenge indicates the token type and therefore the issuance protocol required to produce a token. It also indicates a redemption context and therefore whether or not clients can preemptively request and cache tokens to amortize the cost of issuance. \r\n\r\nI don't think a challenge is _just_ a declaration of what the Client should offer. To me, challenges fundamentally determine the set of possible tokens that clients can produce, and that implies some level of control. \r\n\r\nIf \"control\" is somehow problematic or confusing, perhaps we just phrase this differently. That might be \"The challenge determines the set of tokens the Origin will accept for the given resource. This is because tokens cryptographically bind the challenge to a client-chosen nonce.\"",
          "createdAt": "2023-01-04T11:09:39Z",
          "updatedAt": "2023-01-05T02:34:23Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "As far as I can tell, yes, challenges do constrain what a client can produce in that in order to produce some tokens you need a challenge.  However, the text here might be read to imply that it constrains the server in terms of what it might accept in the future.  So yeah, using \"control\" is problematic as it too directly implies a link between the signal and the server actions that follow.\r\n\r\nI would have said that maybe \"A challenge provides the client with the information necessary to obtain tokens that the server might subsequently accept (in this context).\"",
          "createdAt": "2023-01-04T23:13:17Z",
          "updatedAt": "2023-01-04T23:13:17Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "That works for me! I'll send a PR.",
          "createdAt": "2023-01-05T02:34:47Z",
          "updatedAt": "2023-01-05T02:34:47Z"
        }
      ]
    },
    {
      "number": 304,
      "id": "I_kwDODeTEy85ZpcBx",
      "title": "Stop leaning so hard on the authscheme draft",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/304",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "architecture"
      ],
      "body": "The architecture references \\[AUTHSCHEME\\] for key concepts far more than I expected.  For instance:\r\n\r\n> As described in \\[AUTHSCHEME\\], there are a number of ways in which the token may vary, including:\r\n\r\nOr:\r\n\r\n> The Privacy Pass issuance protocol is a two-message protocol that takes as input a TokenChallenge from the redemption protocol ([AUTHSCHEME](https://ietf-wg-privacypass.github.io/base-drafts/draft-ietf-privacypass-architecture.html#AUTHSCHEME)], [Section 2.1](https://datatracker.ietf.org/doc/html/draft-ietf-privacypass-auth-scheme-07#section-2.1)) and produces a Token ([[AUTHSCHEME](https://ietf-wg-privacypass.github.io/base-drafts/draft-ietf-privacypass-architecture.html#AUTHSCHEME)], [Section 2.2](https://datatracker.ietf.org/doc/html/draft-ietf-privacypass-auth-scheme-07#section-2.2)),\r\n\r\nCan the architecture define the messages in their own right, then point to \\[AUTHSCHEME\\] for example implementations?",
      "createdAt": "2022-12-20T06:06:51Z",
      "updatedAt": "2023-01-23T20:08:55Z",
      "closedAt": "2023-01-23T20:08:55Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Is the suggestion here to describe -- conceptually -- what Token and TokenChallenges are in the architecture document? If so, that seems quite reasonable.",
          "createdAt": "2023-01-04T11:10:53Z",
          "updatedAt": "2023-01-04T11:10:53Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Yeah.  An architecture is most useful if you don't have to dig into the details to understand it and those references are somewhat critical to comprehension.",
          "createdAt": "2023-01-04T23:14:37Z",
          "updatedAt": "2023-01-04T23:14:37Z"
        }
      ]
    },
    {
      "number": 305,
      "id": "I_kwDODeTEy85ZpczU",
      "title": "Diagrams might be unclear",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/305",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "protocol",
        "architecture"
      ],
      "body": "In this image:\r\n![image](https://user-images.githubusercontent.com/67641/208595737-2b1f7670-5b27-4ff7-80e5-e36dc7b4f3df.png)\r\n\r\nIt isn't very clear where messages originate and who gets to see them.  In particular, it isn't clear where the TokenRequest originates (the Client) and whether the Attester gets to see it (\u00af\\\\(\u00b0\\_o)/\u00af).\r\n",
      "createdAt": "2022-12-20T06:10:21Z",
      "updatedAt": "2023-01-23T20:08:55Z",
      "closedAt": "2023-01-23T20:08:55Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "That's a fair point. It should be clear that the TokenRequest comes from the Attester. I wonder if we also somehow need to illustrate that there's a trust relationship between the Attester and Issuer here. Something to at least imply that the Attester is either implicitly trusted to do attestation, or, perhaps in future versions of Privacy Pass, attestation proofs are sent directly to the Issuer. ",
          "createdAt": "2023-01-04T11:13:56Z",
          "updatedAt": "2023-01-04T11:13:56Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "- Move diagram to section 3 (architecture). Also move much of the second intro paragraph down.\r\n- Add more text about the actual steps to section 3, such as a numbered list",
          "createdAt": "2023-01-09T20:13:32Z",
          "updatedAt": "2023-01-09T20:13:32Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "In here, introduce the basic privacy premise for how the redemption and issuance contexts are separated",
          "createdAt": "2023-01-09T20:27:26Z",
          "updatedAt": "2023-01-09T20:27:26Z"
        }
      ]
    },
    {
      "number": 306,
      "id": "I_kwDODeTEy85ZpeD-",
      "title": "Metadata is a privacy risk too",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/306",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [
        "architecture"
      ],
      "body": "[Section 3.2.3](https://ietf-wg-privacypass.github.io/base-drafts/draft-ietf-privacypass-architecture.html#section-3.2.3) doesn't really acknowledge this.  And [this](https://ietf-wg-privacypass.github.io/base-drafts/draft-ietf-privacypass-architecture.html#section-3.2.3-4) is a bit of a warning flag:\r\n\r\n> Metadata may also be arbitrarily long or bounded in length. The amount of permitted metadata may be determined by application or by the underlying cryptographic protocol.\r\n\r\nA forward reference to [Section 5.1](https://ietf-wg-privacypass.github.io/base-drafts/draft-ietf-privacypass-architecture.html#section-5.1) might help.",
      "createdAt": "2022-12-20T06:15:51Z",
      "updatedAt": "2023-01-30T15:07:06Z",
      "closedAt": "2023-01-30T15:07:06Z",
      "comments": []
    },
    {
      "number": 307,
      "id": "I_kwDODeTEy85Zpk4m",
      "title": "Adversarial control over anonymity set apportionment",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/307",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [
        "architecture"
      ],
      "body": "There is an attack on some of the deployment models that isn't well acknowledged in [Section 5.1](https://ietf-wg-privacypass.github.io/base-drafts/draft-ietf-privacypass-architecture.html#section-5.1) or [Section 5.2](https://ietf-wg-privacypass.github.io/base-drafts/draft-ietf-privacypass-architecture.html#section-5.2).  In this attack, there are $n$ bits of metadata (where $n$ isn't necessarily ordinal) or $2^n$ different keys.\r\n\r\nIn this model, if the Issuer is able to identify users, they can identify $2^n-1$ users for special treatment at the Origin.  Those users get assigned a unique value for metadata (or use a key that is unique to them), so that they can be reidentified at the Origin.  The remaining identifier is assigned to all other users.\r\n\r\nI was initially only a little concerned about this style of attack.  This only applies to those deployment models where the Issuer is exposed to information about Clients.  And the proposed 6 metadata values only permit 5 users being linked this way.  That seemed fine.  If there is no way in which a value used for targeting cannot be reused at a high rate.\r\n\r\n...\r\n\r\nThere is an interactive flow (see the [Private State Token](https://wicg.github.io/trust-token-api/#browser-issue-steps) issuance request), so I believe that those $2^n-1$ values could be reused for tracking on a relatively short time scale.\r\n\r\nThe Issuer and Origin can coordinate their efforts so that when one of the targeted values is used, it is redeemed nearly immediately, then released back for reuse.\r\n\r\nThe way this works is that on each round the Issuer picks $2^n-1$ issuance requests and allocates one of the special metadata values to those users.  The issuer can now reidentify the user that it issued these tokens to.  The Issuer provides the Origin with an endpoint that says \"I just got token with metadata X, what user did you allocate it to?\" for which querying has the side effect of releasing metadata X for reuse.  This provides the Issuer a way to provide the Origin with the identity - as known to the Issuer - of those $2^n-1$ users.\r\n\r\nThis overall process can operate continuously with a flow of Issuer->Client->Origin->Issuer.  Consequently, the number of users that can be linked with this approach is very high as the time where each targeting value is outstanding is low (this amounts to a single round trip to the user).  Stalls would occur if clients fail to complete their part in this, but that should be rare.  You might get something like $(2^n-1)/RTT$ users per second linked, depending on the token issuance rate.  Issuers with millions of users will find it takes a while to get through them all, but with 6 values, that's 2 million a day or thereabouts if you assume a modest 250ms RTT.\r\n\r\nI'm not sure how to defend against this.  Including limited metadata is a direct goal, but this attack operates entirely within the envelope that allowing metadata creates.  As this is a direct goal, consistency can't help.\r\n\r\nIf metadata were removed and diverse keys could not be used for metadata -- that is, keys are strictly sequenced and the consistency mechanism ensured that the Issuer couldn't switch back and forth, perhaps by marking key cutovers with a firm time of effect -- then maybe this is more tractable.  There would be a brief period at each key changeover where maybe some number of users might be targeted by exploiting clock skew, but that's all.  Losing metadata seems pretty bad though.",
      "createdAt": "2022-12-20T06:52:08Z",
      "updatedAt": "2023-01-30T15:07:06Z",
      "closedAt": "2023-01-30T15:07:06Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "All of the currently specified versions of the issuance protocol don't include any metadata, so they fall into the case you mention where consistency can be an effective tool to prevent targeting.\r\n\r\nIt seems to me that the main issue here is how to allow future versions that include metadata to be used safely. For example, maybe metadata-including token types must not be used with interactive token issuance.",
          "createdAt": "2022-12-20T16:02:55Z",
          "updatedAt": "2022-12-20T16:02:55Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "This problem exists in any design that allows for multiple keys without strict controls on the use of those keys, in addition to those designs that allow metadata.\r\n\r\nAs for interactive vs. the cached design (see #308) only changes the RTT between client and server.\r\n\r\nIf the issuance model involves a Client requesting tokens on demand (see [the proposed API](https://wicg.github.io/trust-token-api/#browser-issue-steps)), then the use of caching could lengthen the delay, but only to the extent that the Origin or Issuer can't somehow avoid using the cache.  But the Issuer can, with `Sec-Private-State-Token-Clear-Data: all`.  Cache invalidation allows the Issuer to force the client into what is effectively an interactive protocol.\r\n\r\nIn other settings where the client has a strict schedule that it operates on, it might not be possible to drive this as fast.  The client might expect a minimum-sized set of tokens to be provided each time, with no way to have those tokens invalidated or the supply exhausted more quickly than the schedule dictates.  In that case, the RTT might be as long as a day or a week and the throughput for tracking tanks.",
          "createdAt": "2022-12-21T05:39:18Z",
          "updatedAt": "2022-12-21T05:39:18Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "I think we need to keep private state tokens out of this discussion. To my knowledge, it's currently misaligned with Privacy Pass on an architectural level and at a protocol level. It's just causing confusion. (Flagging to @dvorak42 to emphasize that we really need to get these things aligned to avoid this confusion going forward!) \n\nThe general issue here is that privacy decreases as allowed metadata values increase, where metadata can be in the form of multiple keys or arbitrary things bound to tokens during the issuance protocol. As with other issues, privacy here depends in part on your consistency story. \n\nMy takeaway from this issue is that the architecture document does an inadequate job describing the privacy properties of this thing. I think we could benefit from putting privacy right at the top -- not buried in subsections about deployment models or metadata -- and discussing consistency as a necessary condition for meaningful privacy.\n\n@martinthomson, @tfpauly, thoughts?",
          "createdAt": "2022-12-21T15:00:28Z",
          "updatedAt": "2022-12-21T15:00:28Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "Agreed with Chris that we shouldn't be analyzing this in the context of Private State Tokens, which needs more work to be aligned as far as I know. We may need to make clearer the guardrails though, and explain the privacy properties of various deployment models, and where things break down.\n\nUse of privacy pass doesn't require any API like what is in Private State Tokens, since it works as just a normal HTTP auth method, so I think we should focus on that normal pattern where the origin challenges for tokens and the client presents tokens it has cached, or has to get a new one. ",
          "createdAt": "2022-12-21T15:05:08Z",
          "updatedAt": "2022-12-21T15:05:08Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@chris-wood, I think that would certainly help.  I don't quite see a disconnect between this and the Private State Token API work, but maybe that's exactly the point.\r\n\r\nUnderstanding the expected interaction model between Client and Issuer is going to be very important to this.  I see the draft as very strongly leaning toward the interactive model, but as noted elsewhere, that's not necessarily going to produce good outcomes.",
          "createdAt": "2022-12-21T23:34:53Z",
          "updatedAt": "2022-12-21T23:34:53Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Let's just keep Private State Tokens out of the equation for now.\r\n\r\n> Understanding the expected interaction model between Client and Issuer is going to be very important to this. I see the draft as very strongly leaning toward the interactive model, but as noted elsewhere, that's not necessarily going to produce good outcomes.\r\n\r\nI don't really understand why you say that the client and issuer interaction is important, or why you zero in on interactivity as the issuance model, specifically. Regardless, I think all of this stems from our inability to precisely describe the privacy properties of the system, and the requirements needed to achieve those properties. ",
          "createdAt": "2022-12-21T23:42:40Z",
          "updatedAt": "2022-12-21T23:42:40Z"
        }
      ]
    },
    {
      "number": 308,
      "id": "I_kwDODeTEy85ZpoLm",
      "title": "Bounding Issuer count",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/308",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [
        "architecture"
      ],
      "body": "Should [this](https://ietf-wg-privacypass.github.io/base-drafts/draft-ietf-privacypass-architecture.html#section-5.3-3) be \"for each Origin\"?\r\n\r\n> Clients SHOULD bound the number of Issuers they are willing to request tokens from at any given time. The exact bound depends on the deployment model and number of Clients, i.e., having a very large Client base could potentially allow for larger values. Issuer replacements should only occur with the same frequency as config rotations as they can lead to similar losses in anonymity if clients still hold redemption tokens for previously active Issuers.\r\n\r\nThe previous paragraph says \"For example, these 4 Issuers could be different for each Client.\"  But doesn't really explain how that might be exploited in an attack on Client privacy.\r\n\r\nI think that there is an unstated assumption here: the Client has interactions with multiple Origins and uses a single store of tokens from a limited set of Issuers.  This is not at all clear.  Much of the text of the document concentrates on the challenge-based flow, where an Origin asks the Client to fetch a token from the Issuer.   In that context, this text makes little sense.\r\n\r\nIt's easy to skip over [this](https://ietf-wg-privacypass.github.io/base-drafts/draft-ietf-privacypass-architecture.html#section-5.3-1):\r\n\r\n> If Clients obtain tokens from many Issuers, and Origins later challenge a Client for a token from each Issuer, Origins can learn information about the Client.\r\n\r\nThat ordering is important.  If you allow there to be a shared store of tokens and Origins can ask \"do you have a token from Issuer X?\", then this creates shared state that can be queried.  That is a far more dangerous baseline.  For that, there needs to be a global cap on the number of Issuers, or there is some information being released.\r\n\r\nOn the other hand, I'm not sure that we need the ability to check whether tokens are present.  I think that it is sufficient for the Origin to request a token.  There is value in having a token cache, but caches can operate without necessarily leaking that they are in use.  That doesn't totally eliminate time as a factor, but it might help.\r\n\r\nIn any case, the document could do a better job of laying out the various expected interaction models up front.  This cached mode is very poorly explained and something of a surprise.",
      "createdAt": "2022-12-20T07:07:34Z",
      "updatedAt": "2023-01-30T15:07:07Z",
      "closedAt": "2023-01-30T15:07:07Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "These are great points. There seem to be two issues here:\r\n\r\n1. The privacy implications of \"configuration flexibility\" (how many Issuers are allowed), and how the number of Issuers should be handled.\r\n2. Interaction models. We really need to add these to the document. Minimally, I think it makes sense to walk through the end-to-end challenge to redemption flow with and without a token cache. We could also cover error cases, e.g., where the Client fails to produce a token and doesn't present anything to the Origin. Failure to produce a token could be due to compatibility reasons, e.g., the challenge token_type, origin_info, or issuer_name values are invalid, or because of attestation or issuance failures. ",
          "createdAt": "2023-01-04T11:28:21Z",
          "updatedAt": "2023-01-04T11:28:21Z"
        }
      ]
    },
    {
      "number": 309,
      "id": "I_kwDODeTEy85aA7Um",
      "title": "Missing token challange in test vector",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/309",
      "state": "CLOSED",
      "author": "raphaelrobert",
      "authorAssociation": "NONE",
      "assignees": [
        "chris-wood"
      ],
      "labels": [],
      "body": "#290 introduces a token challenge instead of the token challenge digest, but the hex string seems to be missing in the test vector.",
      "createdAt": "2022-12-24T21:14:17Z",
      "updatedAt": "2023-01-30T16:14:35Z",
      "closedAt": "2023-01-30T16:14:35Z",
      "comments": []
    },
    {
      "number": 319,
      "id": "I_kwDODeTEy85dlFIR",
      "title": "Make clear that token_type determines struct contents",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/319",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The token_type field in `Token` and `TokenRequest` determines the remainder of each of these structures. This isn't explicitly stated anywhere, but I think it's an implicit assumption we've all been making.",
      "createdAt": "2023-02-03T15:17:40Z",
      "updatedAt": "2023-02-13T20:11:27Z",
      "closedAt": "2023-02-13T20:11:27Z",
      "comments": []
    },
    {
      "number": 321,
      "id": "I_kwDODeTEy85eWr-C",
      "title": "Type2 public key is underspecified",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/321",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [],
      "body": "... we should make it clear, and provide test vectors to make sure it matches. The test vector could include public keys in PEM format and then print out the expected key ID. ",
      "createdAt": "2023-02-13T20:19:20Z",
      "updatedAt": "2023-03-06T20:03:46Z",
      "closedAt": "2023-03-06T20:03:46Z",
      "comments": []
    },
    {
      "number": 322,
      "id": "I_kwDODeTEy85eYYMz",
      "title": "What causes the client to perform attestation?",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/322",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [],
      "body": "The issuance overview step 3 says that the Client and Attester interact to do whatever is necessary to convince the Attester to attest.  But there doesn't seem to be any pretext for this process to be initiated.  Step 4 says that the client requests issuance (via the Attester), which would provide the necessary cause to start the attesting process.  Should these steps be swapped?",
      "createdAt": "2023-02-14T04:01:47Z",
      "updatedAt": "2023-02-27T16:04:22Z",
      "closedAt": "2023-02-27T16:04:22Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "Either the attester is an intermediary to the flow (which is what we're doing in practice), or it is a separate flow.\r\n\r\nSo the prerequisite is that the client knows it wants to request a token from an issuer, and then it does attestation.",
          "createdAt": "2023-02-14T18:48:00Z",
          "updatedAt": "2023-02-14T18:48:00Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Perhaps this could be made more clear if we say that the client, upon deciding it wants to invoke the issuance protocol, then begins the deployment-specific attestation process with its trusted attester? I can suggest some text for this.",
          "createdAt": "2023-02-17T12:01:29Z",
          "updatedAt": "2023-02-17T12:01:29Z"
        }
      ]
    },
    {
      "number": 323,
      "id": "I_kwDODeTEy85eYZUs",
      "title": "Does the architecture need to use HTTP?",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/323",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "The interaction model here doesn't really need to use HTTP as far as I can tell.  Obviously, the specific protocols need to be more concrete, but the architecture works without specifically saying that the interactions use HTTP.\r\n\r\nThe overview specifically mentions HTTP only with respect to the Client-Origin interactions, not other interactions, but I can't see how this is necessary.",
      "createdAt": "2023-02-14T04:06:15Z",
      "updatedAt": "2023-02-27T16:03:52Z",
      "closedAt": "2023-02-27T16:03:52Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "No, it doesn't need to use HTTP. The auth scheme document that instantiates the challenges and redemption does use HTTP, but other mechanisms can be used.",
          "createdAt": "2023-02-14T18:46:56Z",
          "updatedAt": "2023-02-14T18:46:56Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "I'm OK de-emphasizing HTTP in the architecture if it helps simplify the presentation. Beyond it overly restrictive, was there another reason that led to this issue, @martinthomson?",
          "createdAt": "2023-02-17T11:56:12Z",
          "updatedAt": "2023-02-17T11:56:12Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Only that I know that this has obvious applications beyond HTTP and the architecture has no direct need to use it.",
          "createdAt": "2023-02-20T04:48:23Z",
          "updatedAt": "2023-02-20T04:48:23Z"
        }
      ]
    },
    {
      "number": 324,
      "id": "I_kwDODeTEy85eYcjB",
      "title": "Issuer-Client unlinkability mentions redemption contexts",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/324",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [],
      "body": "I think that this definition is incorrect.  The latest sentence is from the definition of Origin-Client unlinkability:\r\n\r\n> Issuer-Client unlinkability. This is similar to Origin-Client unlinkability in that a Client in an issuer context is indistinguishable from any other Client that might use the same issuer context. The set of Clients that share the same redemption context is referred to as a redemption anonymity set.",
      "createdAt": "2023-02-14T04:24:36Z",
      "updatedAt": "2023-02-27T20:04:14Z",
      "closedAt": "2023-02-27T20:04:14Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "\ud83e\udd26 good catch. Copy-pasta error.",
          "createdAt": "2023-02-17T12:01:54Z",
          "updatedAt": "2023-02-17T12:01:54Z"
        }
      ]
    },
    {
      "number": 325,
      "id": "I_kwDODeTEy85eYpwj",
      "title": "Contexts and unlinkability goals",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/325",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [],
      "body": "The definition of the redemption/issuance/attestation contexts seem to exist primarily to support the different unlinkability goals in the document.  Let's take the redemption one, which is defined as:\r\n\r\n> The interactions and set of information shared between the Client and Origin. This context includes all information associated with redemption, such as the timestamp of the event, Client visible information (including the IP address), and the Origin name.\r\n\r\n<details>\r\n<summary>A digression on perspective</summary>\r\n\r\nNote that \"Client visible\" is probably ambiguous here; it could mean information about the client that is visible (though to whom?) or information that is visible to the client.\r\n\r\nThis suggests that your goal is establish a point of reference or perspective for these: in this case, the relevant perspective is that of an Origin.  But this was not my main point...\r\n</details>\r\n\r\nThe corresponding unlinkability definition says:\r\n\r\n> Origin-Client unlinkability. This means that given two redemption contexts, the Origin cannot determine if both redemption contexts correspond to the same Client or two different Clients. Informally, this means that a Client in a redemption context is indistinguishable from any other Client that might use the same redemption context. The set of Clients that share the same redemption context is referred to as a redemption anonymity set.\r\n\r\nThis is a little confusing, because you might conceive of the defines the context as enclosing a single interaction between the Client and Origin, but this implies that a context encompasses multiple interactions with either the same client or different clients (all of which are indistinguishable).  That makes the definition of the context seem like it lacks something.  Does this refer to the information that is provided within that context that might be used to identify a client, from the perspective of the server?\r\n\r\nFinally, there is mention of an \"an empty redemption context\" in Section 3.1.  I had no idea how to interpret this claim.  Does empty refer to the set of clients? The set of interactions?  The information provided in that context?",
      "createdAt": "2023-02-14T05:29:50Z",
      "updatedAt": "2023-02-28T10:09:58Z",
      "closedAt": "2023-02-28T10:09:58Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "The empty redemption context comment is talking about the `redemption_context` field of the challenge being empty / zero-length.",
          "createdAt": "2023-02-14T18:48:32Z",
          "updatedAt": "2023-02-14T18:48:32Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "> Does this refer to the information that is provided within that context that might be used to identify a client, from the perspective of the server?\r\n\r\nBasically, yeah, this is the idea. Perhaps framing it this way would be a more clear description. \r\n\r\n@tfpauly regarding \"empty redemption context,\" maybe we just say \"an empty token challenge redemption context,\" or something, to make it clear that this is referring to the challenge field described in Section 3.1?",
          "createdAt": "2023-02-17T12:47:37Z",
          "updatedAt": "2023-02-17T12:47:37Z"
        }
      ]
    },
    {
      "number": 326,
      "id": "I_kwDODeTEy85eYqkq",
      "title": "Cardinality of different relationships",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/326",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [],
      "body": "From a bullet point in Section 3.1:\r\n\r\n> Each Issuer, in turn, determines which Attesters it is willing to accept in the issuance protocol. This means that if an Origin origin.example accepts tokens issued by Issuer issuer.example, and that Issuer in turn accepts different types of attestation from more than one trusted Attester, then a Client may use either of these trusted Attesters to issue and redeem tokens for origin.example. \r\n\r\nIt seems like the challenge points to a single issuer and the issuer points to one or more attesters.  If this is the case, then it might be worth spending a paragraph or sentence on it rather than burying it in an example.  Also, at this stage, it is not clear why the Origin couldn't point to more than one Issuer, if it were willing to do so.  A forward reference to discussions about this limit here being necessary to prevent widening the cross-contextual flow of information; though I believe that if the client were to be consistent in its choice, there is no additional information leak (other than perhaps something inherent to the client's choice).",
      "createdAt": "2023-02-14T05:34:43Z",
      "updatedAt": "2023-02-28T23:21:05Z",
      "closedAt": "2023-02-28T23:21:05Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Agreed. As part of #333, I think we can address this with a section on trust relationships and their cardinality. ",
          "createdAt": "2023-02-17T12:43:15Z",
          "updatedAt": "2023-02-17T12:43:15Z"
        }
      ]
    },
    {
      "number": 327,
      "id": "I_kwDODeTEy85eYsPC",
      "title": "formats and procedures",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/327",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [],
      "body": "From Section 3.2.1:\r\n\r\n> Attesters may support different types of attestation procedures. A type of attestation procedure is also referred as an attestation format.\r\n\r\nThis is a pretty wild equivalence.  I stumbled badly on this one.  It's very much like saying \"in this context a verb is sometimes referred to as a noun\".\r\n\r\nIs the goal here to say that \"there is a attestation process by which the Attester determines whether a Client meets the requirements for issuance; if successful, the Attester captures this information using an attestation format\" ?  That seems to be the case, but that's not what this says.",
      "createdAt": "2023-02-14T05:44:06Z",
      "updatedAt": "2023-02-27T16:04:03Z",
      "closedAt": "2023-02-27T16:04:03Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "I think we might just drop the equivalence to avoid confusion, but in the interest of transparency, here's where it came from.\r\n\r\nConsider the two following types of attestation procedures:\r\n1. Attestation based on [DeviceCheck](https://developer.apple.com/documentation/devicecheck), where the client and attester use this mechanism to prove that the client's device is valid. \r\n2. Attestation based on [ring signatures](https://en.wikipedia.org/wiki/Ring_signature), perhaps where the signature is computed in some client enclave, where the client authenticates its token request with such a ring signature.\r\n\r\nIn (1), attestation is some procedure that takes place between client and attester, whereas in (2) attestation is sort of non-interactive mechanism for producing an attestation format or proof of sorts. Since we don't specify the details of attestation, the text was written in a way to be maximally accommodating to these types of things.\r\n\r\nIn any case, I think it's probably fine to just treat attestation as a _procedure_, be it interactive or non-interactive or whatever, and that procedure has certain properties associated with it. I'll propose text.",
          "createdAt": "2023-02-17T12:13:36Z",
          "updatedAt": "2023-02-17T12:13:36Z"
        }
      ]
    },
    {
      "number": 328,
      "id": "I_kwDODeTEy85eYtmS",
      "title": "Privacy: Attester partitioning",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/328",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [],
      "body": "In a successful issuance exchange, the attester provides the issuer with information about the client.  The text in Section 3.2.1 points out that the way in which information about the client is combined could reduce anonymity set size in ways that affect privacy.\r\n\r\nGiven that we have a chain of custody, I imagine that the privacy property here is about what the issuer learns about a client.  More information means more information that might then propagate from the issue onward to the origin.  This means that the attester needs to limit what it passes along to only that which is relevant.  The client needs to trust the attester to do this.\r\n\r\n... or does it?  The text in Section 3.2.1 implies strongly that this anonymity set size is important, but the constraints on the client-issuer interaction, especially consistency rules, very much limits what the issuer can pass along to the origin.  So maybe the system depends less on trusting the attester and more on the combination of the cryptographic properties of the token and the consistency system that mitigates against misuse.\r\n\r\nNone of this appears in the privacy considerations.  Should it?",
      "createdAt": "2023-02-14T05:50:37Z",
      "updatedAt": "2023-02-28T23:21:16Z",
      "closedAt": "2023-02-28T23:21:16Z",
      "comments": [
        {
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "On this point: \"Clients do not explicitly trust Issuers.\" (Section 3.2.2)  This would invalidate much of the discussion of anonymity sets in attestations.  This is quite confusing.  The client doesn't need to trust the issuer, because the issuer is unable to pass information on to others.  However, the client cannot trust the issuer with information, so it has to trust the attester not to pass stuff along AND it has to use an anonymizing proxy to interact with the issuer so that nothing leaks.  This is quite contradictory overall.",
          "createdAt": "2023-02-14T05:59:55Z",
          "updatedAt": "2023-02-14T06:02:32Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "There are issuance protocols wherein the issuer learns information about the origin by design, like the [rate-limited issuance protocol](https://ietf-wg-privacypass.github.io/draft-ietf-privacypass-rate-limit-tokens/draft-ietf-privacypass-rate-limit-tokens.html). In this variant, if the attester were to pass information about the client on to the issuer, then the issuer would be able to reconstruct the (client, origin) pair, breaking the unlinkability goals.\r\n\r\nI agree that in the case where the issuer learns nothing about the origin in the protocol then reliance on the attester is lessened, but we need to make sure we accommodate future issuance protocols here. I'll think about ways in which we can try to make this more clear. This might go into the privacy considerations, as suggested.",
          "createdAt": "2023-02-17T12:42:08Z",
          "updatedAt": "2023-02-17T12:42:08Z"
        }
      ]
    },
    {
      "number": 329,
      "id": "I_kwDODeTEy85eYvAK",
      "title": "Broken attestations are forever",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/329",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [],
      "body": "Section 3.2.1 talks about the need for issuers to trust attesters.  This is probably the main trust relationship (see #328) involved regarding attestation.  The other trust basis is the extent to which the attester trusts the client, though the point is probably that the attester starts out being extremely skeptical about the client and so acts to validate them.\r\n\r\nThis is fine (though I would delete the first sentence of the last paragraph of this section).  However, the remainder of this text talks about how to handle an attester that goes bad.  None of this acknowledges the real problem, which is that in a setting where an issuer works with multiple attesters, but issues from a single key, a failure in one attester cannot result in tokens being invalidated for just that attester.  The information about which attester was involved in token issuance is erased by the issuer, deliberately.\r\n\r\nIt might even be the case (thanks to consistency requirements) that the issuer cannot revoke tokens at all.  The only recourse is the one that is noted, which is that the attester cannot be used for future issuance.  The doc should probably talk about those tokens that were issued though.",
      "createdAt": "2023-02-14T05:57:54Z",
      "updatedAt": "2023-02-28T22:23:40Z",
      "closedAt": "2023-02-28T22:23:40Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Talking about tokens in circulation post-attestation-compromise is a good suggestion. I'll take this issue and propose text.",
          "createdAt": "2023-02-17T12:24:37Z",
          "updatedAt": "2023-02-17T12:24:37Z"
        }
      ]
    },
    {
      "number": 330,
      "id": "I_kwDODeTEy85eY336",
      "title": "Diagrams",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/330",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [],
      "body": "This is a little hard to process...  An inbound PR I have proposes a change to the first diagram that might help here.  A little work on this is probably necessary.\r\n\r\n![image](https://user-images.githubusercontent.com/67641/218657903-b8cbbd9e-04e7-48c9-9b1e-0431c6fe6843.png)\r\n",
      "createdAt": "2023-02-14T06:35:08Z",
      "updatedAt": "2023-02-28T10:10:36Z",
      "closedAt": "2023-02-28T10:10:36Z",
      "comments": [
        {
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "A few things:\r\n\r\nWhen drawing arrows on lines, the line will connect with the line neatly if there is a connector or if there is an arrow adjacent to the line:\r\n\r\n```aasvg\r\n|    |\r\n+--->|\r\n|    |\r\n```\r\n\r\nThis puts the arrow on the line, which renders a gap in the line.  Avoid this:\r\n\r\n```aasvg\r\n|\r\n<----\r\n|\r\n```\r\n\r\nThe bottom-left corner here is not curved, because the detection of corners needs three characters: the corner and a line either side of that, so...\r\n\r\n```aasvg\r\n|\r\n `--\r\n```\r\n\r\nNot:\r\n\r\n\r\n```aasvg\r\n----->\r\n `--\r\n```",
          "createdAt": "2023-02-14T06:39:26Z",
          "updatedAt": "2023-02-14T06:39:26Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "@martinthomson can you say more about how it's hard to process? As we recently discussed, we're burdened by being too close to this work, so it's hard for me to see a substantial difference between the diagram in this issue and that which you proposed in the recently merged PR. \r\n\r\nIs it not clear who touches or sees each message? Part of the challenge in this particular diagram -- and any in which the attester is party to the protocol -- is that the attester may be inline or may not be! The architecture does not _require_ the attester to be inline, it really only requires that the token request from a client be somehow blessed by the attester. I'll think about ways to better visualize this, but clarification about the source of confusion would be super helpful.",
          "createdAt": "2023-02-17T12:20:35Z",
          "updatedAt": "2023-02-17T12:20:35Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "For me, the hardest part of these diagrams is that the start and end of the end of the arrows aren't really attached to anything in particular.  You rely on horizontal alignment a fair bit (the arrow starts approximately under the label \"Issuer\", so it's probably a message from the issuer).  In comparison, the diagram I provided had lines and boxes connecting them.\r\n\r\nThis is probably a more illustrative example:\r\n![image](https://user-images.githubusercontent.com/67641/220018066-b0a67c21-02c1-4eb5-88aa-0ecde3bea074.png)\r\nAre the TokenRequest and TokenResponse labels *on* the lines?  Where do these arrows start?  Is the Client/Attester/Issuer box a single entity (obviously, no) given how the challenge arrows hit it.  Which entities perform attestation?\r\n\r\nThen there are the formatting issues, some of which I will concede are specific to aasvg, see the above comment.",
          "createdAt": "2023-02-20T05:40:42Z",
          "updatedAt": "2023-02-20T05:42:09Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks -- that's helpful. I think #344 should resolve the confusion.",
          "createdAt": "2023-02-27T20:05:37Z",
          "updatedAt": "2023-02-27T20:05:37Z"
        }
      ]
    },
    {
      "number": 332,
      "id": "I_kwDODeTEy85eZyk3",
      "title": "Can the Origin distinguish per- and cross-origin tokens?",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/332",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "It seems like this is not the case (from Section 4.3):\r\n\r\n> If there is only a single Origin, then per-Origin tokens are not appropriate in this model, since the Attester can learn the redemption context. However, the Attester does not learn whether a token is per-Origin or cross-Origin.\r\n\r\nThis implies something about the way in which per-origin tokens are attested that does not follow from any of the previous text.  But I don't know what.  Is it the case that the client needs to communicate the origin that a per-origin token needs to be bound to?  Does this assume that the issuer in this deployment configuration is receiving this information via the attester?  Why is it that the client can't use a proxy (or OHTTP) to request a token from the issuer?",
      "createdAt": "2023-02-14T09:37:25Z",
      "updatedAt": "2023-03-02T17:31:42Z",
      "closedAt": "2023-03-02T17:31:42Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "The per-origin tokens are tokens that are generated based on a challenge with a non-empty `origin_info` field. A cross-origin token has an empty `origin_info`.",
          "createdAt": "2023-02-14T18:45:03Z",
          "updatedAt": "2023-02-14T18:45:03Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "None of this is really clear from the description in the architecture.",
          "createdAt": "2023-02-16T04:50:01Z",
          "updatedAt": "2023-02-16T04:50:01Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "@martinthomson does the text in [Section 3.1](https://ietf-wg-privacypass.github.io/base-drafts/draft-ietf-privacypass-architecture.html#name-redemption-protocol), which describes the ways in which token challenges can vary, not suffice? If not, can you help us understand what's missing?",
          "createdAt": "2023-02-17T12:17:23Z",
          "updatedAt": "2023-02-17T12:17:23Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "What is missing is a description of the *sort* of information that is exchanged between different roles in these cases.  That might be aided by including a reference to specific fields (like `origin_info`) or by talking about the requirements more generally.\r\n\r\nThe problem with the text in Section 3.1 is that it says the token is bound to an origin or not, but it doesn't really give enough context to understand how this might happen.  Tommy's explanation about origin is correct and obvious, but not particularly satisfying as an answer, because it's nearly a truism (obviously you need an origin for something to be origin-bound).\r\n\r\nI didn't realize this until I'd spent some time thinking about this, but when the origin needs tokens to be bound in some way to information **from the origin**[^1], that information needs to make it to the issuer.  That the issuer needs to *see* that information seems to be the primary motivation for the attester/issuer split.  \r\n\r\n[^1]: The identity of the origin is the obvious thing the origin might need to provide.  It's the only thing you talk about in the document, but there is a more general statement to be made: it might be necessary to bind to arbitrary information that the origin supplies, which the issuer also needs to see in order to construct a token.\r\n\r\nFor instance, with a blind signature, the client could use the issuer as a signing oracle and include the origin in the data that is signed, but that might make token forgery for arbitrary origins trivial without a ZKP to accompany the signing request.  The bit that makes this hard to grok is that the ZKP design is entirely valid here, so why do you need the attester/issuer split?  \r\n\r\nMy best answer is that you don't, except when it is easier to build a system that doesn't rely on cryptography that is generally pretty unpleasant to work with.\r\n\r\nThe split, avoids a situation where one entity simultaneously sees client identity or client-specific information (which is sometimes necessary for the attester) and information about the usage context (again, sometimes necessary for the issuer).  If it weren't for that, the issuer and attester could be the same entity.   This is an important piece of the architecture, but the document never really *says* that.  The information about per-origin tokens just isn't connected to the description of the different roles.",
          "createdAt": "2023-02-20T05:35:46Z",
          "updatedAt": "2023-02-20T05:35:46Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "In thinking about this issue some more, I think we can probably resolve this comment by building on the trust relationships and cardinality discussion that's in a separate PR. The text in the original comment refers to the fact that, in deployments where an there is an attester that uses an issuer that is configured for only one origin, say, A.com, then any token request for a _specific_ origin must necessarily be for A.com. \r\n\r\nI think the primary problem here is that text is a bit confusing in that, well, if there's an issuer that only supports one origin, then how can it work for cross-origin tokens? I will try to simplify.",
          "createdAt": "2023-02-24T00:30:41Z",
          "updatedAt": "2023-02-24T00:30:41Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "As I started to dig into that clarification, Martin's original idea to start talking about things in terms of information flow really seemed like the natural conclusion, so that's what #346 tries to do. Please review!",
          "createdAt": "2023-02-27T21:08:29Z",
          "updatedAt": "2023-02-27T21:08:29Z"
        }
      ]
    },
    {
      "number": 333,
      "id": "I_kwDODeTEy85emcqP",
      "title": "Authenticating the attester",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/333",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [],
      "body": "In Section 4.3 (Join Origin and Issuer):\r\n\r\n> Since the Attester and Issuer are separate entities, the Attester must authenticate itself to the Issuer. In settings where the Attester is a Client-trusted service, one way Attesters can authenticate to Issuers is via mutually-authenticated TLS. \r\n\r\nThis appears to be a more general statement that could exist outside of where it appears.  There are lots of of things that relate to the (pairwise) trust relationships between Origin, Attester, and Issuer.\r\n\r\nFurthermore, mutual authentication applies only to the extent that there is direct communication between entities.  There is a need for certain pieces of information that passes between these entities to be authenticated, but it would be better to articulate what that data is than to talk about the mechanism so directly.  That is, start by saying that when the issuer issues a token, it needs to be assured by the attester (one that it trusts) that the nonce it is binding the token was provided by a client that met whatever requirements the attester and issuer agreed would be necessary for issuance.\r\n\r\nOne way to ensure that the issuer can be sure that the attester did this is to have the attester present a request to issue a token itself, over a connection where the attester authenticates itself.  An alternative, that might be worse in that it uses bearer tokens, is to rely on the attester signing a claim to that effect and having some other entity (like the client) request issuance.\r\n",
      "createdAt": "2023-02-16T07:00:27Z",
      "updatedAt": "2023-02-28T23:21:05Z",
      "closedAt": "2023-02-28T23:21:05Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "To me, this issue suggests we need to discuss the trust relationships very clearly and explicitly in the overview section. Maybe we even dedicate an entire section to it. The specific text in Section 4.3 could then point to that section for its authentication and trust establishment considerations. If this sounds reasonable, I'll propose text.",
          "createdAt": "2023-02-17T12:15:35Z",
          "updatedAt": "2023-02-17T12:15:35Z"
        }
      ]
    },
    {
      "number": 334,
      "id": "I_kwDODeTEy85emd0n",
      "title": "Bearer tokens",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/334",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [],
      "body": "This system extensively uses tokens that are only loosely bound to usage contexts.  Possession of a token is pretty much all that is necessary. That means that tokens might be stolen or hoarded and then replayed.  The architecture draft says nothing about this as a risk, but it probably should.",
      "createdAt": "2023-02-16T07:04:14Z",
      "updatedAt": "2023-02-28T22:29:22Z",
      "closedAt": "2023-02-28T22:29:22Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Agree, especially for for cached tokens. I thought we had mentioned this somewhere, but if not, let's make sure it's included.",
          "createdAt": "2023-02-17T11:54:38Z",
          "updatedAt": "2023-02-17T11:54:38Z"
        }
      ]
    },
    {
      "number": 351,
      "id": "I_kwDODeTEy85ioP36",
      "title": "Add guidance on the frequency that an origin should issues PrivateToken challenges",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/351",
      "state": "CLOSED",
      "author": "colinbendell",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "The current PrivateToken challenge / response deviates from the expected behaviours common on the web with WWW-Authenticate/Authorization exchanges. The spec should should provide explicit guidance on the frequency that an origin should challenge and set expectations on the frequency that an origin should expect a client to reply to a challenge.\r\n\r\nMost UA implementations replay the  `Authorization` on ALL subsequent requests to the same url after a WWW-Authenticate challenge.. Some UAs even share this Authorization to other urls on the same origin. Even RFC7235 nods to this caching behaviour in 6.2. \r\n\r\nFor the origin, the assumption is that every request missing a valid token can respond with a 401 and WWW-Authenticate challenge. This is a common behavior with basic, digest, ntlm, etc - common when doing credential based auth.Clearly captcha and PATs aren't in this same category as credentials so this pattern deviates from the mental model of other auth schemes. \r\n\r\nThe issue with PAT is that the token response is inconsistent by the UA. It's not clear to the origin if a token wasn't provided because of a rate limit or because it wasn't a human. At minimum the spec should set out expectations about the minimum frequency that an origin should challenge and re-challenge. As well, there should be similar guidance for the UA.\r\n\r\nFor example:\r\n* the UA must respond to the first challenge an origin issues per TLS socket, but the UA may optionally respond to re-challenges during the same socket connection.\r\nAlternatively: \r\n* the UA must respond to challenges on the same origin and socket at least once per minute, regardless of the number of requests\r\n\r\n\r\nEditorial: when the token is not deterministically presented, I will need to set a cookie based on this token on the first presentation. This cookie now represents \"isHuman==true\". However, to ensure non-replay, I have to introduce my own cryptographic constraints on this cookie and cause the cookie to regenerate on each request. I can't help but feel I've created more problems now just because the token isn't a consistent signal.",
      "createdAt": "2023-04-04T23:50:54Z",
      "updatedAt": "2023-04-10T20:04:34Z",
      "closedAt": "2023-04-10T20:04:34Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "To note, we do have a small note that addresses part of this difference in https://www.ietf.org/archive/id/draft-ietf-privacypass-auth-scheme-09.html#name-http-authentication-scheme\r\n\r\n> Unlike many authentication schemes in which a client will present the same credentials across multiple requests, tokens used with the \"PrivateToken\" scheme are single-use credentials, and are not reused. Spending the same token value more than once allows the origin to link multiple transactions to the same client. In deployment scenarios where origins send token challenges to request tokens, origins ought to expect at most one request containing a token from the client in reaction to a particular challenge.",
          "createdAt": "2023-04-05T00:16:27Z",
          "updatedAt": "2023-04-05T00:16:27Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "It's also important to note that the acceptable rates may differ based on token type and local policy",
          "createdAt": "2023-04-05T00:16:48Z",
          "updatedAt": "2023-04-05T00:16:48Z"
        },
        {
          "author": "colinbendell",
          "authorAssociation": "NONE",
          "body": "> tokens used with the \"PrivateToken\" scheme are single-use credentials ...\r\n\r\nThis note focuses on the single-use nature of the token. It doesn't provide any guidance or direction to the origin on the frequency of challenges. Likewise, it doesn't set expectations on how frequently an origin should or shouldn't expect the UA to reply to a challenge. There should be some minimum mutual understanding of when a PAT should be expected. \r\n\r\nFor example, imagine a TLS socket with the following flow:\r\n1. challenge\r\n2. no-response\r\n3. challenge\r\n4. response\r\n\r\nIs the lack of response a signal to the origin that it shouldn't re-attempt to re-challenge? Is the second challenge on the socket that gets a response an indication that the UA is compromised and using brute force techniques (or using a shadow bot fleet)? \r\n\r\nWhile these are implementation details that are likely best for the origin to decide, it would help if there was a minimum expectations of the expected behaviour and interaction between the UA and origin. IMHO, having this would help avoid the first wave of cat-mouse attempts to circumvent PAT.",
          "createdAt": "2023-04-05T14:01:10Z",
          "updatedAt": "2023-04-05T14:01:25Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "To some degree, this is client specific behavior that falls under:\r\n```\r\nClients MAY have further restrictions and requirements around validating when a challenge is considered acceptable or valid.\r\n```\r\n\r\nWe have some specific heuristics now for specific token types, but they can vary across types, implementations.\r\n\r\nI could imagine some general advice for the origin to not ask for more tokens than they need for a particular session with a client (generally a TLS session).",
          "createdAt": "2023-04-10T19:51:33Z",
          "updatedAt": "2023-04-10T19:51:33Z"
        }
      ]
    },
    {
      "number": 352,
      "id": "I_kwDODeTEy85iryjy",
      "title": "Add base64 examples to test vectors",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/352",
      "state": "CLOSED",
      "author": "colinbendell",
      "authorAssociation": "NONE",
      "assignees": [
        "chris-wood"
      ],
      "labels": [
        "auth-scheme"
      ],
      "body": "A common bug I have seen with engineering teams implementing PAT is that they don't pad base64url encoded challenges. This is compounded by the lack of feedback from the UA. However, in this case, the padding is not needed for successful base64 decode because the lengths are known. Additionally, introducing `=` padding requires additional quoting of the fields which adds both visual and non-value noise to the exchange. \r\n\r\n`WWW-Authenticate: PrivateToken challenge=\"abc123==\", token-key=\"def456==\"`\r\nvs\r\n`WWW-Authenticate: PrivateToken challenge=abc123, token-key=def456`\r\n\r\nI can appreciate the desire to make the spec less ambiguous to reduce the burden on the UA. However, given that there are a limited number of UAs but millions of origins, there is a greater chance that origins will be unknowingly misconfigured. Therefore it would improve developer ergonomics for origins if the UA was expected to be more flexible in the decode. ",
      "createdAt": "2023-04-05T13:42:06Z",
      "updatedAt": "2023-05-08T19:28:50Z",
      "closedAt": "2023-05-08T19:28:50Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "The padding requirements date back to https://github.com/tfpauly/privacy-proxy/pull/165\r\n\r\nThis was chosen to be strict about formatting, and minimize long-term interop issues by allowing a single approach. I doubt we'd want to change that.\r\n\r\nSee the discussion in this document about flexibility: https://www.ietf.org/archive/id/draft-iab-protocol-maintenance-12.html#name-flexible-protocols",
          "createdAt": "2023-04-05T16:01:18Z",
          "updatedAt": "2023-04-05T16:01:18Z"
        },
        {
          "author": "colinbendell",
          "authorAssociation": "NONE",
          "body": "Fair. Consider this field feedback. I've seen this happen on multiple engineering teams (plus myself in my original attempts). It's a common mistake that creates engineering toil to remediate - toil that could be avoided with a more generous UA parser.",
          "createdAt": "2023-04-05T17:41:12Z",
          "updatedAt": "2023-04-05T17:41:12Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "Discussed with authors \u2014 proposing to resolve this by adding the HTTP auth headers to the test vector section to make it very clear how to parse the base64, etc.",
          "createdAt": "2023-04-10T19:32:49Z",
          "updatedAt": "2023-04-10T19:32:49Z"
        }
      ]
    },
    {
      "number": 353,
      "id": "I_kwDODeTEy85iry5B",
      "title": "Address Developer Ergonomics by providing UA feedback for malformed challenges",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/353",
      "state": "CLOSED",
      "author": "colinbendell",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "A common bug I have seen with engineering teams implementing PAT is that they don't pad base64url encoded challenges (see https://github.com/ietf-wg-privacypass/base-drafts/issues/352). This easily goes un-noticed and impacts adoptions. The root challenge is that automated integration tests with PAT aren't possible compounded by the lack of feedback interfaces from the UA to report of a malformed challenges. \r\n\r\nI created a [few tools](https://private-access-token.colinbendell.dev/) to [help test](https://private-access-token.colinbendell.dev/debug.html) for some of the common errors. However, malformed rejection from the UA is still challenging. \r\n\r\nFor example, the current version of the spec requires base64url with padding, and with padding the fields should be quoted. A developer following this spec would run into errors today because the current implementation in iOS and macOS reject quoted fields. This causes many hours of developer time trying to triage and investigate these kinds of errors. \r\n\r\nIt would help if there was a standard mechanism for a UA to clearly report if a challenge is being rejected because it was malformed. A few possible suggestions:\r\n1. send an http header, or a variant of the Authorization header signalling this malformed challenge on the next request. For example `Authorization: PrivateToken error=\"Malformed challenge\"`\r\n2. integrate the spec with the [ReportingAPI](https://w3c.github.io/reporting/) allowing for out of band, and privacy preserving feedback to the origin.\r\n\r\nHaving such a feedback mechanism will also allow for easier UA adoption by enabling WPT tests. \r\n",
      "createdAt": "2023-04-05T13:42:52Z",
      "updatedAt": "2023-04-10T20:03:25Z",
      "closedAt": "2023-04-10T20:03:25Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "While I understand that there are cases where this can be useful for debugging implementations, I don't think this belongs in the core spec \u2014 it seems more appropriate for an extension.\r\n\r\n- Having `Authorization` header on a subsequent request provide information about a previous challenge seems to be a new mechanism entirely, and we'd need to do more evaluation of the properties of that for privacy and likability.\r\n- Generally, we don't want to tell origins why tokens failed, as a privacy mechanism.\r\n- This case of malformed challenges seems to be mainly a case for development debugging, not something expected in production.",
          "createdAt": "2023-04-10T19:39:16Z",
          "updatedAt": "2023-04-10T19:39:16Z"
        }
      ]
    },
    {
      "number": 354,
      "id": "I_kwDODeTEy85jBJ_9",
      "title": "Future issuance protocol requirements",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/354",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [
        "architecture"
      ],
      "body": "Future issuance protocol documents that describe new token types are responsible for making requirements around necessary things like consistency clear. We should add a brief section to the architecture document that covers this expectation.",
      "createdAt": "2023-04-10T19:30:07Z",
      "updatedAt": "2023-06-15T17:26:29Z",
      "closedAt": "2023-06-15T17:26:29Z",
      "comments": []
    },
    {
      "number": 358,
      "id": "I_kwDODeTEy85k0CDH",
      "title": "idnits in auth-scheme",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/358",
      "state": "CLOSED",
      "author": "bemasc",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "auth-scheme",
        "editorial"
      ],
      "body": "From [the idnits tool](https://author-tools.ietf.org/api/idnits?url=https://www.ietf.org/archive/id/draft-ietf-privacypass-auth-scheme-09.txt&submissioncheck=True):\r\n\r\n~~~~\r\n  == Outdated reference: A later version (-11) exists of\r\n     draft-ietf-privacypass-architecture-10\r\n\r\n  == Outdated reference: A later version (-10) exists of\r\n     draft-ietf-privacypass-protocol-08\r\n\r\n  -- Duplicate reference: RFC8446, mentioned in 'RFC8446', was also mentioned\r\n     in 'TLS13'.\r\n~~~~",
      "createdAt": "2023-05-01T20:46:32Z",
      "updatedAt": "2023-05-02T20:58:35Z",
      "closedAt": "2023-05-02T20:58:35Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "The first two will get automatically handled when we update. The third is a simple fix.",
          "createdAt": "2023-05-02T19:34:54Z",
          "updatedAt": "2023-05-02T19:34:54Z"
        }
      ]
    },
    {
      "number": 369,
      "id": "I_kwDODeTEy85mp2hD",
      "title": "Should the token-issuer-directory be JWK formatted and extend rfc7517?",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/369",
      "state": "CLOSED",
      "author": "colinbendell",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "protocol"
      ],
      "body": "Instead of introducing a new syntax for token-issuer-directories, should this instead extend rfc7517 to reduce devex friction? \r\n\r\nThe syntax would then be:\r\n```\r\n{\r\n    \"issuer-request-uri\": \"https://issuer.example.net/request\",\r\n    \"keys\": [\r\n      {\r\n        \"kty\": \"EC\",\r\n        \"crv\": \"P-384\",\r\n        \"x\": \"MI...AB\",\r\n        \"y\": \"MI...AB\",\r\n      },\r\n      {\r\n        \"kty\": \"EC\",\r\n        \"crv\": \"P-384\",\r\n        \"x\": \"MI...AB\",\r\n        \"y\": \"MI...AB\",\r\n      }\r\n    ]\r\n }\r\n```\r\n\r\n(where the x and y coordinates are Base64Url encoded Nh long fields)",
      "createdAt": "2023-05-23T14:52:37Z",
      "updatedAt": "2023-06-15T17:29:22Z",
      "closedAt": "2023-06-15T17:29:22Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "@colinbendell is the current syntax blocking implementations, or is this a nice-to-have request?",
          "createdAt": "2023-05-23T16:33:46Z",
          "updatedAt": "2023-05-23T16:33:46Z"
        },
        {
          "author": "colinbendell",
          "authorAssociation": "NONE",
          "body": "Nice-to-have. \r\n\r\nIt is confusing right now to have 3 almost similar formats. There is the token-issuer-directory (here), the [key commitments](https://github.com/WICG/trust-token-api/blob/main/ISSUER_PROTOCOL.md) for private-state-tokens and RFC7517 [JWK Sets](https://datatracker.ietf.org/doc/html/rfc7517). JWKs have been around a lot longer and have existing tooling for JWKs (eg: vaulting, key rotation schedules, etc). Converging on existing specs, would allow the re-use of existing tools and enable clearer communications of expectations.",
          "createdAt": "2023-05-23T17:05:20Z",
          "updatedAt": "2023-05-23T17:16:08Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks. So the origins are the ones that take this issuer configuration, extract the key(s), and then encode them in the `token-key` challenge parameter. They also consume the tokens themselves for the purposes of verifying tokens they get from the client.\r\n\r\nOn one hand, catering to clients that don't have or otherwise don't want to implement JWKs seems good (which is what we have now), and on the other hand catering to servers which can lean heavily on existing JWK support to parse these token keys also seems good.\r\n\r\nWhat do you think about the following:\r\n1. Keep the current token directory structure as-is, with the matching \"application/token-issuer-directory\" content type.\r\n2. Define a separate content type, maybe \"application/token-issuer-directory-jwk\" or whatever, that carries the same content but with a different representation. (In this case, using JWK Sets instead of the existing format.) \r\n\r\nOrigins could then choose the format in which they want to consume the directory, assuming issuers implement both. Good idea? Bad idea? What do others think?",
          "createdAt": "2023-05-23T17:28:11Z",
          "updatedAt": "2023-05-23T17:28:11Z"
        },
        {
          "author": "colinbendell",
          "authorAssociation": "NONE",
          "body": "There really isn't much difference between a JWK and the issuer directory. The key details are:\r\n* public key is encoded as a single field (`token-key`, Base64Url of the ASN.1 DER encoded form) vs two fields in a JWK (`x` and `y` scalars are broken out individually, base64url encoded)\r\n* we would extend the JWK Set definition (cf: [Section 5](https://datatracker.ietf.org/doc/html/rfc7517#section-5)) for additional configuration fields like `issuer-request-uri`\r\n* the `token-type` field is replaced with the more specific encryption fields \r\n  * for VOPRF it would be `{\"kty\": \"EC\", \"crv\": \"P-384\", \"x\":\"...\", \"y\":\"...\"}`\r\n  * for type 2 Blind RSA it would be `{\"kty\":\"RSA\", \"alg\": \"PS384\", \"mod\":\"...\", \"exp\":\"...\"}`\r\n\r\nGenerally, JWK is a bit more verbose and yet, ironically, uses terse keywords. So there isn't anything specific to JWK that an origin wouldn't need to implement if they are implementing the token-directory since it is a 1:1 mapping.\r\n\r\nThe one additional point I'll mention is that this isn't just Origin's consuming these keys. With Private-State-Tokens, the UA will likely also be consuming these public keys for the same purpose as the exchange with PAT.\r\n\r\nAll that to say, I'd bias toward just using JWK and deprecate the use of the token-issuer-directory to avoid confusion.\r\n  \r\n",
          "createdAt": "2023-05-23T18:23:57Z",
          "updatedAt": "2023-05-23T18:23:57Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "> All that to say, I'd bias toward just using JWK and deprecate the use of the token-issuer-directory to avoid confusion.\r\n\r\nThat seems like what I suggested above, no? That is, we keep using what's in the draft now, specify the 1:1 JWK mapping (if someone has the energy or desire to do that), and then move to that new format as implementations gain support. ",
          "createdAt": "2023-05-23T18:44:54Z",
          "updatedAt": "2023-05-23T18:44:54Z"
        },
        {
          "author": "colinbendell",
          "authorAssociation": "NONE",
          "body": "Ah, I misunderstood your comment about origins choosing which format to consume.",
          "createdAt": "2023-05-23T19:33:25Z",
          "updatedAt": "2023-05-23T19:33:25Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "To try and further clarify, I don't think this would change the current document. Rather, I think it would be a new document that describes the new issuer directory format. Is that something you'd be interested in writing?",
          "createdAt": "2023-05-23T19:45:42Z",
          "updatedAt": "2023-05-23T19:45:57Z"
        },
        {
          "author": "colinbendell",
          "authorAssociation": "NONE",
          "body": "The one down side is the calculation of the token_key_id. For the origin it is convenient to simply take the der encoded field sha256() it, rather than having to constitute the der encded format. This could be overcome by providing the token_key_id in a precomputed form using the `kid`.\r\n\r\nA quick POC to compare the differences (I've added a pre-calculated token_key_id in the jwks.json version):\r\n* https://private-state-token.colinbendell.dev/.well-known/jwks.json\r\n* https://private-state-token.colinbendell.dev/.well-known/key-commitment\r\n* https://private-state-token.colinbendell.dev/.well-known/token-issuer-directory",
          "createdAt": "2023-05-23T19:56:00Z",
          "updatedAt": "2023-05-23T19:56:00Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks @colinbendell. Can I ask that you take this issue to the mailing list so we can get more feedback? I appreciate the desire for convergence, but it's not clear to me JWK Sets are the right target for convergence. ",
          "createdAt": "2023-05-25T11:18:02Z",
          "updatedAt": "2023-05-25T11:18:16Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "I'm closing this issue with the proposed plan to produce a new document that describes a JWKS representation for keys.",
          "createdAt": "2023-06-15T17:29:20Z",
          "updatedAt": "2023-06-15T17:29:20Z"
        }
      ]
    },
    {
      "number": 370,
      "id": "I_kwDODeTEy85mqHoH",
      "title": "Clarifications to align with VOPRF Draft21",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/370",
      "state": "CLOSED",
      "author": "colinbendell",
      "authorAssociation": "NONE",
      "assignees": [
        "chris-wood"
      ],
      "labels": [
        "protocol"
      ],
      "body": "There are a number of updates to the protocol spec that are needed to align with Draft21 of VOPRF\r\n* `SetupVOPRFClient(0x0004, pkI)` should use the cyphersuite identifier name listed in 4.4, specifically it should be `SetupVOPRFClient(\"P384-SHA384\", pkI)`\r\n* the `Finalize` function returns a hash of [Nh] length. Its uncertain if this value is what is intended to use as the `authenticator` (which has a length of [Nk])?\r\n* `servercontext.evaluate()` function takes two parameters and outputs a hash of Nh length.",
      "createdAt": "2023-05-23T15:31:19Z",
      "updatedAt": "2023-05-23T19:44:48Z",
      "closedAt": "2023-05-23T19:44:48Z",
      "comments": []
    },
    {
      "number": 372,
      "id": "I_kwDODeTEy85msGKi",
      "title": "Minor editorial comments on draft-ietf-privacypass-protocol",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/372",
      "state": "CLOSED",
      "author": "bemasc",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [
        "protocol",
        "editorial"
      ],
      "body": "(As individual participant)\r\n\r\n1. URI vs. URL\r\n* The text uses a mix of \"URI\" and \"URL\".  It's not clear to me that the usage follows a clear pattern or logic.\r\n2. \"Issuer Request URL value (as an absolute or relative URL)\"\r\n* Relative to what?  (Presumably the location of the configuration object?)  Are you sure that allowing \"../request\" is [a good idea](https://owasp.org/www-community/attacks/Path_Traversal) here?  Perhaps you may want to restrict the allowed values in some way.\r\n3. \"Issuer directory resources ... are located at the well-known location /.well-known/token-issuer-directory\"\r\n* This sentence presumes that the Issuer is identified by an HTTP Origin.  I would appreciate a sentence explaining why this is so, as opposed to identifying the Issuer by a full URL (as is [generally recommended](https://www.rfc-editor.org/rfc/rfc9205.html#section-4.4.1-3)).  Perhaps it is related to the use of origin-scoped authentication tokens in the Issuer == Origin case?  Or is it just a convenience for compact identification of Issuers?  Is it mandatory, or can Issuers be identified by a URLs as well?  The phrasing \"are located\" suggests that this is always true, but the later text that the Issuer name is \"typically a host name\" suggests that other arrangements (which might not rely on .well-known) are also allowed.\r\n4. \"When use of an Issuer configuration results in token issuance failures, e.g., because the configuration information is too stale, the directory SHOULD be fetched and revalidated.\"\r\n* How does one know that a failure is due to stale configuration?  Presumably the HTTP resource for the configuration is still fresh or we wouldn't be using it.\r\n",
      "createdAt": "2023-05-23T21:49:41Z",
      "updatedAt": "2023-06-15T17:26:14Z",
      "closedAt": "2023-06-15T17:26:14Z",
      "comments": []
    },
    {
      "number": 373,
      "id": "I_kwDODeTEy85m3sog",
      "title": "Should token-issuer-directory be private-token-issuer-directory?",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/373",
      "state": "CLOSED",
      "author": "dvorak42",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [
        "protocol"
      ],
      "body": "It seems a little odd that two out of three of the IANA registrations are for \"private-token-FOO\" while the directory is just \"token-FOO\".\r\n\r\nIs there a reason for the discrepancy? Might be worth aligning those together?",
      "createdAt": "2023-05-25T13:52:46Z",
      "updatedAt": "2023-06-15T17:27:07Z",
      "closedAt": "2023-06-15T17:27:07Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Good point! I'd be fine with renaming this such that they are all aligned with 'private-token' prefixes. This only affects clients that consume the directory, which should be fairly easy to do right now. @tfpauly, any issues on your end?",
          "createdAt": "2023-05-25T13:58:39Z",
          "updatedAt": "2023-05-25T13:58:39Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "My clients don't ever fetch this directly, so no problem. ",
          "createdAt": "2023-05-25T14:00:45Z",
          "updatedAt": "2023-05-25T14:00:45Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "I was thinking about the attester, which might be fetching it and enforcing a particular content type.\n\n> On May 25, 2023, at 10:00 AM, Tommy Pauly ***@***.***> wrote:\n> \n> \n> My clients don't ever fetch this directly, so no problem.\n> \n> \u2014\n> Reply to this email directly, view it on GitHub, or unsubscribe.\n> You are receiving this because you commented.\n> \n\n",
          "createdAt": "2023-05-25T14:01:36Z",
          "updatedAt": "2023-05-25T14:01:36Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "Yes, but I think we could do a transition if needed. ",
          "createdAt": "2023-05-25T14:27:15Z",
          "updatedAt": "2023-05-25T14:27:15Z"
        }
      ]
    },
    {
      "number": 374,
      "id": "I_kwDODeTEy85oGfH5",
      "title": "Rename auth-scheme to \"The PrivateToken HTTP Authentication Scheme\"",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/374",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [],
      "body": "... since this is what it is.",
      "createdAt": "2023-06-07T19:23:28Z",
      "updatedAt": "2023-06-14T15:49:57Z",
      "closedAt": "2023-06-14T15:49:57Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Actually, nevermind. Closing. ",
          "createdAt": "2023-06-14T15:49:57Z",
          "updatedAt": "2023-06-14T15:49:57Z"
        }
      ]
    },
    {
      "number": 375,
      "id": "I_kwDODeTEy85oHRgT",
      "title": "Token types should specify how to verify Token structures",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/375",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [
        "protocol"
      ],
      "body": "This is already done, but it's not an explicit requirement when defining a new token type. ",
      "createdAt": "2023-06-07T21:54:08Z",
      "updatedAt": "2023-06-15T17:26:29Z",
      "closedAt": "2023-06-15T17:26:28Z",
      "comments": []
    },
    {
      "number": 376,
      "id": "I_kwDODeTEy85ofW4d",
      "title": "Key IDs should be unique and canonical",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/376",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This is to ensure that two otherwise interoperable clients agree on the semantics of a resource (a public key in this case).",
      "createdAt": "2023-06-12T15:47:44Z",
      "updatedAt": "2023-06-15T17:26:21Z",
      "closedAt": "2023-06-15T17:26:21Z",
      "comments": []
    },
    {
      "number": 382,
      "id": "I_kwDODeTEy85pPiCs",
      "title": "token_type scope clarification",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/382",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "auth-scheme",
        "editorial"
      ],
      "body": "From @paulwouters\r\n\r\n        \"token_type\" is a 2-octet integer, in network byte order. This\r\n        type indicates the issuance protocol used to generate the\r\n        token. Values are registered in an IANA registry, Section\r\n        5.2. Challenges with unsupported token_type values MUST be\r\n        ignored. This value determines the structure and semantics of\r\n        the rest of the structure.\r\n        [ more fields of the structure ]\r\n\r\nIf now describing more structures, those can only be valid for a specific\r\nvalue of token_type. This should then be mentioned here. (same issue in\r\n\"Token Redemption\" section). Also, I don't see any non-grease value added\r\nto the IANA registry. I assume 0x0002 will be added for [ISSUANCE] and\r\nthat the structures here are for that use case? If so, that deserves\r\nclarification. If not, I think this also might need some rephrasing?",
      "createdAt": "2023-06-20T15:44:04Z",
      "updatedAt": "2023-06-23T15:43:03Z",
      "closedAt": "2023-06-23T15:43:03Z",
      "comments": [
        {
          "author": "paulwouters",
          "authorAssociation": "NONE",
          "body": "I dont think this addressed my point.\r\n\r\nThe TokenChallenge message has the following structure:\r\n\r\nstruct {\r\n    uint16_t token_type;\r\n    opaque issuer_name<1..2^16-1>;\r\n    opaque redemption_context<0..32>;\r\n    opaque origin_info<0..2^16-1>;\r\n} TokenChallenge;\r\n\r\nThe structure fields are defined as follows:\r\n\"token_type\" is a 2-octet integer, in network byte order. This type indicates the issuance protocol used to generate the token. Values are registered in an IANA registry, [Section 5.2](https://datatracker.ietf.org/doc/html/draft-ietf-privacypass-auth-scheme-10#token-types). Challenges with unsupported token_type values MUST be ignored. This value determines the structure and semantics of the rest of the structure.\r\n\r\nTo me, what you are describing is:\r\n\r\n```\r\nstruct {\r\n    uint16_t token_type;\r\n    opaque blob<0..2^16-1>;                        (or 2^32 I guess)\r\n} TokenChallenge;\r\n\r\n```\r\nWhere for token_type is 2, you have the opaque blob be:\r\n\r\n```\r\n    opaque issuer_name<1..2^16-1>;\r\n    opaque redemption_context<0..32>;\r\n    opaque origin_info<0..2^16-1>;\r\n\r\n```\r\n\r\nfor token_type = 3, there might not be an issuer_name, etc.",
          "createdAt": "2023-06-21T17:04:35Z",
          "updatedAt": "2023-06-21T17:04:35Z"
        },
        {
          "author": "paulwouters",
          "authorAssociation": "NONE",
          "body": "either that, or perhaps you mean:\r\n```\r\n\r\nstruct {\r\nuint16_t token_type;\r\nopaque issuer_name<1..2^16-1>;\r\nopaque redemption_context<0..32>;\r\nopaque origin_info<0..2^16-1>;\r\nopaque other_stuff<0..2^16-1>;                         0 for token_type=2\r\n} TokenChallenge;\r\n```",
          "createdAt": "2023-06-21T17:05:51Z",
          "updatedAt": "2023-06-21T17:05:51Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "What this PR says is everything after `token_type` is determined by `token_type`. I'm not seeing how that's not clear, so maybe you could suggest some specific changes to clarify?",
          "createdAt": "2023-06-21T21:09:51Z",
          "updatedAt": "2023-06-21T21:09:51Z"
        },
        {
          "author": "paulwouters",
          "authorAssociation": "NONE",
          "body": "You define a struct but that struct is not generic, even though you pretend it is. I don't understand how to make it more clear than the comments I already left above your comment?",
          "createdAt": "2023-06-22T13:43:52Z",
          "updatedAt": "2023-06-22T13:43:52Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "@paulwouters given that this has been through WGLC without such confusion, I think you will need to suggest concrete changes to clarify what you have in mind.",
          "createdAt": "2023-06-22T14:08:50Z",
          "updatedAt": "2023-06-22T14:08:50Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "@paulwouters take a look at #392; does this clarify?",
          "createdAt": "2023-06-22T16:28:43Z",
          "updatedAt": "2023-06-22T16:28:43Z"
        },
        {
          "author": "paulwouters",
          "authorAssociation": "NONE",
          "body": "That is better. But I'm still confused about including multiple optional fields and how you know which of potential multiple optional fields is present.  While most of that problem is not other documents problem, there are multiple optional fields right here in this generic advise that I dont think a parser can determine (unless optional has a meaning of \"add a 0byte for zero length of this field (in which case I would not call it optional)",
          "createdAt": "2023-06-22T16:33:33Z",
          "updatedAt": "2023-06-22T16:33:33Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "@paulwouters the optional fields are length-prefixed, so they have lengths of 0 when empty. So they're \"optionally non-empty\".",
          "createdAt": "2023-06-22T16:36:34Z",
          "updatedAt": "2023-06-22T16:36:34Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "@paulwouters updated the PR to say \"optionally empty\"",
          "createdAt": "2023-06-22T16:46:50Z",
          "updatedAt": "2023-06-22T16:46:50Z"
        },
        {
          "author": "paulwouters",
          "authorAssociation": "NONE",
          "body": "I think better terminology than \"optional\" should be used if they will always put in a length field. It seems the field is not optional at all but may be zero length",
          "createdAt": "2023-06-22T16:56:50Z",
          "updatedAt": "2023-06-22T16:56:50Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "Right, that's why I changed this to say that it is not an optional field, but a field that is optionally empty.",
          "createdAt": "2023-06-22T18:03:47Z",
          "updatedAt": "2023-06-22T18:03:47Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "@paulwouters updated to this:\r\n\r\n> - \"redemption_context\" is a field that is either 0 or 32 bytes, prefixed with a single\r\n>  octet indicating the length (either 0 or 32). If value is non-empty, it is a 32-byte value\r\n>  generated by the origin that allows the origin to require that clients fetch tokens\r\n>  bound to a specific context, as opposed to reusing tokens that were fetched for other\r\n>  contexts. See {{context-construction}} for example contexts that might be useful in\r\n>  practice. Challenges with redemption_context values of invalid lengths MUST be ignored.\r\n> \r\n>  - \"origin_info\" is a string that is either empty, or contains one or more origin\r\n>  names that allow a token to be scoped to a specific set of origins. The string\r\n>  is prefixed with a 2-octet integer indicating the length, in network byte\r\n>  order. If empty, any non-origin-specific token can be redeemed. If the string\r\n>  contains multiple origin names, they are delimited with commas \",\" without any\r\n> whitespace. If this field is not empty, the Origin MUST include its own name\r\n> as one of the names in the list.",
          "createdAt": "2023-06-22T20:59:51Z",
          "updatedAt": "2023-06-22T20:59:51Z"
        },
        {
          "author": "paulwouters",
          "authorAssociation": "NONE",
          "body": "Thanks, this looks okay now.",
          "createdAt": "2023-06-23T15:02:13Z",
          "updatedAt": "2023-06-23T15:02:13Z"
        }
      ]
    },
    {
      "number": 383,
      "id": "I_kwDODeTEy85pPiKV",
      "title": "issuer_name clarification",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/383",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "auth-scheme",
        "editorial"
      ],
      "body": "From @paulwouters\r\n\r\n>  opaque issuer_name<1..2^16-1>\r\n\r\nwith:\r\n\r\n> The string is prefixed with a 2-octet integer indicating the length\r\n\r\nthese two don't go well together. If the value itself isn't length-describing,\r\nlike ASN.1 things, then the field should be shown as a separate field in the\r\nstruct? Especially since issuer_name claims its minimum length is 1 and so it\r\ncannot contain the 2 octet length field. If the 2^16-1 implies the two octet\r\nlength, then perhaps a note is useful to state if this field is omitted, two\r\nzero bytes are present? That is also the only way one could distinguish the\r\ntwo optional fields redemption_context and origin_info if only one was included?\r\n(this might be obvious to TLS13 readers and its syntax, but as specified, I\r\ndon't find it very clear, and I suspect non-TLS implementers might not either)",
      "createdAt": "2023-06-20T15:44:23Z",
      "updatedAt": "2023-06-23T15:46:19Z",
      "closedAt": "2023-06-23T15:46:19Z",
      "comments": [
        {
          "author": "paulwouters",
          "authorAssociation": "NONE",
          "body": "I'm still unclear on some parts.\r\n\r\nbased on:\r\n\r\nstruct {\r\n    uint16_t token_type;\r\n    opaque issuer_name<1..2^16-1>;\r\n    opaque redemption_context<0..32>;\r\n    opaque origin_info<0..2^16-1>;\r\n} TokenChallenge;\r\n\r\nCan you show me the bytes for:\r\n\r\n1) token_type = 2, issuer_name \"nohats.ca\",  redemption_context=\"example.com\", no origin_info\r\n\r\nand\r\n\r\n2) token_type = 2, issuer_name \"nohats.ca\",  no redemption_context and origin_info=\"example.com\"\r\n\r\n",
          "createdAt": "2023-06-21T16:57:12Z",
          "updatedAt": "2023-06-21T16:57:12Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "There are [test vectors](https://ietf-wg-privacypass.github.io/base-drafts/draft-ietf-privacypass-auth-scheme.html#name-challenge-and-redemption-st) in the document that cover such examples. Also, the redemption context is _not_ an origin name. As described in the spec, it's either a 0 or 32 byte value. \r\n\r\nAnyway, here are the bytes you requested, generated from actual code.\r\n\r\n1. token_type = 0x0002, redemption_context = `5218ea3062d78299246161ca4cd6a0d22ad688a443b5b7fe60941e659b554e39`, issuer_name = \"nohats.cs\", origin_info = nil, challenge = `000200096e6f686174732e6361205218ea3062d78299246161ca4cd6a0d22ad688a443b5b7fe60941e659b554e390000`.\r\n2. token_type = 0x0002, redemption_context = nil, issuer_name = \"nohats.cs\", origin_info = \"example.com\", challenge = `000200096e6f686174732e636100000b6578616d706c652e636f6d`.\r\n\r\n3. token_type = 0x0002, redemption_context = nil, issuer_name = \"nohats.cs\", origin_info = \"foo.example,bar.example\", challenge = `000200096e6f686174732e6361000017666f6f2e6578616d706c652c6261722e6578616d706c65`\r\n\r\n@paulwouters please let us know if this is still unclear.",
          "createdAt": "2023-06-21T18:52:57Z",
          "updatedAt": "2023-06-21T18:54:40Z"
        }
      ]
    },
    {
      "number": 384,
      "id": "I_kwDODeTEy85pPivh",
      "title": "origin_info clarifications",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/384",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "auth-scheme",
        "editorial"
      ],
      "body": "From @paulwouters:\r\n\r\nOn origin_info:\r\n\r\n>        If the string contains multiple origin names, they are delimited\r\n>        with commas \",\" without any whitespace.\r\n\r\nWhat is a \"string\" ? (the same question can be asked for issuer_name). Is it null terminated? ASCII? UTF-8? A-label FQDN?\r\n\r\nDoes origin_info support strings containing a comma? If so how is this expressed?\r\nUsing \\, or ,, or ? Is it valid for origin names to have leading or trailing spaces?\r\nThis seems a bit fragile to me, and perhaps some additional text can make it less\r\nfragile?",
      "createdAt": "2023-06-20T15:45:55Z",
      "updatedAt": "2023-06-23T15:46:19Z",
      "closedAt": "2023-06-23T15:46:19Z",
      "comments": []
    },
    {
      "number": 385,
      "id": "I_kwDODeTEy85pPi6d",
      "title": "Ignoring challenges",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/385",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "auth-scheme",
        "editorial"
      ],
      "body": "From @paulwouters\r\n\r\n> Clients can ignore the challenge if\r\n\r\nWhy \"can\" and not MAY ?",
      "createdAt": "2023-06-20T15:46:23Z",
      "updatedAt": "2023-06-21T14:50:24Z",
      "closedAt": "2023-06-21T14:50:24Z",
      "comments": []
    },
    {
      "number": 386,
      "id": "I_kwDODeTEy85pPjIu",
      "title": "Fancy art in Section 4",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/386",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "auth-scheme",
        "editorial"
      ],
      "body": "From @paulwouters: Why no fancy arrows and lines but ascii art for Section 4 ? :)",
      "createdAt": "2023-06-20T15:47:00Z",
      "updatedAt": "2023-06-21T14:20:02Z",
      "closedAt": "2023-06-21T14:20:02Z",
      "comments": []
    },
    {
      "number": 393,
      "id": "I_kwDODeTEy85pmG3a",
      "title": "make doesn't pull in kramdown-rfc ?",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/393",
      "state": "CLOSED",
      "author": "paulwouters",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "It pulls in half the world of pip, but then stops short of kramdown-rfc ?\r\n\r\nlib/trace.sh: line 14: exec: kramdown-rfc: not found\r\n\r\n",
      "createdAt": "2023-06-23T14:51:41Z",
      "updatedAt": "2023-06-23T15:46:04Z",
      "closedAt": "2023-06-23T15:46:03Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "Hm, not sure about this one. I think that's more an issue with how the template repo was configured back when this repo was created?",
          "createdAt": "2023-06-23T15:46:03Z",
          "updatedAt": "2023-06-23T15:46:03Z"
        }
      ]
    },
    {
      "number": 395,
      "id": "I_kwDODeTEy85p0Jef",
      "title": "Artart review",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/395",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "architecture"
      ],
      "body": "# Major Concerns\r\n\r\nIn Section 1, I think that a bit more context is necessary.  At a very high level, this is an architecture for authorization based on privacy-preserving authentication mechanisms.  So, this section needs to say more about authentication, authorization, and how the two work together.  See the discussion of these two concepts in RFC 4949.\r\n\r\nIn Section 2, I think that the definition of Attestation procedure should be reworded to avoid using \"trusted\" in this manner.  The use of \"trust\" In Section 3.2 is more in line with the usual use of this term.  Suggestion:\r\n\r\n```\r\n   Attestation procedure:  The procedure by which an Attester determines\r\n      whether or not a Client has the specific set of properties \r\n      that are necessary for token issuance.\r\n```\r\n\r\n# Minor Concerns\r\n\r\nSection 5: Please explain \"viability of an open Web\".\r\n\r\n# Nits\r\n\r\nSection 3.4.2: A reference for Tor would be useful.",
      "createdAt": "2023-06-26T17:48:04Z",
      "updatedAt": "2023-08-09T15:18:07Z",
      "closedAt": "2023-08-09T15:18:07Z",
      "comments": []
    },
    {
      "number": 396,
      "id": "I_kwDODeTEy85p73aN",
      "title": "Genart review",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/396",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Major issues:\r\n\r\nMinor issues:\r\n\r\nNits/editorial comments:\r\nConcept of Issuer, Origin, Client, and Attester. Any requirement which  should\r\nbe  from the same/different organization? 4.2 to 4.4 cover examples but an\r\nexplanation at the the beginning of the document with example organization\r\nwould really help with readability.\r\n\r\n-[Page 4] \"etc;\"-->\"etc.,\"\r\n-[Page 6] section 3.2 \"the vailidity\"-->\"the validity\"\r\n-[Page 6] \"the vailidity\"-->\"the validity \"\r\n-[Page 25]\r\n\"Appliations should \"-->\"Applications should \"?\r\n\"discused in Section 4 \"-->\"discussed in Section 4 \"\r\n",
      "createdAt": "2023-06-27T16:02:48Z",
      "updatedAt": "2023-07-12T19:04:37Z",
      "closedAt": "2023-07-12T19:04:37Z",
      "comments": []
    },
    {
      "number": 397,
      "id": "I_kwDODeTEy85p746r",
      "title": "[Secdir review] Terminology",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/397",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "architecture"
      ],
      "body": "```\r\n   The following terms are used throughout this document:\r\n\r\n   Client:  An entity that seeks authorization to an Origin.\r\n```\r\n\r\n- [nms] It would be helpful to cite RFC9334 sooner than midway through section 3 and add a note to this definition that \"Client implements the RATS Attester  role.\" Additionally, it isn't clear if \"entity\" refers to the RFC4949 definition or is more constrained. This is important when considering privacy protections as protection of user (human) trackability isn't necessarily 1 to 1 with device or platform trackability. \r\n\r\n```\r\n   Origin:  An entity that redeems tokens presented by Clients.\r\n```\r\n- [nms]  \"token redemption\" is not a well-known phrase that warrant explanation. Normally, privacy preservation is an objective of the Client. The other entities in the system are potential adversaries. This definition doesn't specify whether the Origin is trusted by the Client or a privacy adversary.\r\n\r\n```\r\n   Issuer:  An entity that issues tokens to Clients for properties attested to by the Attester.\r\n```\r\n- [nms]  This definition doesn't specify whether the Issuer is trusted by the Client or a privacy adversary.\r\n\r\n```\r\n   Attester:  An entity that attests to properties of Clients for the purposes of token issuance.\r\n```\r\n- [nms]  This definition doesn't specify whether the Issuer is trusted by the Client or a privacy adversary.\r\n- [nms]  I suggest using \"Attestation Verifier\" so as not to create reader dissonance for those familiar with RFC9334. \r\n\r\n```\r\n   Attestation procedure:  The procedure by which an Attester determines whether or not a Client is trusted with a specific set of properties for token issuance.\r\n```\r\n- [nms]  This definition isn't clear whether \"trusted with a specific set of properties\" means the Client is authorized to possess the set of properties or whether the Client possessing the properties may be the wrong set of properties for one of the other entities to trust the Client.",
      "createdAt": "2023-06-27T16:06:30Z",
      "updatedAt": "2023-08-09T14:36:33Z",
      "closedAt": "2023-08-09T14:36:33Z",
      "comments": []
    },
    {
      "number": 398,
      "id": "I_kwDODeTEy85p750C",
      "title": "[Secdir review] Use cases",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/398",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "architecture"
      ],
      "body": "- [nms]  There should be a use cases section or reference to stand-alone use cases document that explains the context for who might deploy a Privacy Pass solution and the conditions in which such deployment is necessary.",
      "createdAt": "2023-06-27T16:08:37Z",
      "updatedAt": "2023-08-09T14:36:33Z",
      "closedAt": "2023-08-09T14:36:33Z",
      "comments": []
    },
    {
      "number": 399,
      "id": "I_kwDODeTEy85p76qy",
      "title": "[Secdir review] Architecture overview and example",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/399",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "architecture"
      ],
      "body": "```\r\n3.  Architecture\r\n\r\n   The Privacy Pass architecture consists of four logical entities --\r\n   Client, Origin, Issuer, and Attester -- that work in concert for\r\n   token redemption and issuance.  This section presents an overview of\r\n   Privacy Pass, a high-level description of the threat model and\r\n   privacy goals of the architecture, and the goals and requirements of\r\n   the redemption and issuance protocols.\r\n```\r\n- [nms]  This definition doesn't describe the relevance of token issuance (or refusal to issue) as a mechanism for privacy protection (preservation). A primary concern for user privacy is that attributes that can be regarded as PII or PI can be found (inferred through differential privacy analysis) from a collection of other attributes that separately are not classified as PI or PII but together reveal a value that should be classified as PI or PII. It isn't clear if the token is intended as a set of attributes that survives DPA, a handle that identifies the user, but can't be compromised using DPA, something else?\r\n\r\n```\r\n3.1.  Overview\r\n\r\n   The typical interaction flow for Privacy Pass uses the following\r\n   steps:\r\n\r\n   1.  A Client interacts with an Origin by sending a request or\r\n       otherwise interacting with the Origin in a way that triggers a\r\n       response containing a token challenge.  The token challenge\r\n       indicates a specific Issuer to use.\r\n```\r\n- [nms]  What are some examples of triggering mechanisms or circumstances? \r\n\r\n```\r\n   2.  If the Client already has a token available that satisfies the\r\n       token challenge, e.g., because the Client has a cache of\r\n       previously issued tokens, it can skip to step 6 and redeem its\r\n       token; see Section 7.1 for security considerations of cached\r\n       tokens.\r\n```\r\n- [nms]  Step 1 says the result of step 1 is an indication of which Issuer to use, not that a token was issued. Hence, the cached information from step 1 is a suggested token issuer (not an issued token).\r\n\r\n```\r\n   3.  If the Client does not have a token available and decides it\r\n       wants to obtain one (or more) bound to the token challenge, it\r\n       then invokes the issuance protocol.  As a prerequisite to the\r\n       issuance protocol, the Client runs the deployment specific\r\n       attestation process that is required for the designated Issuer.\r\n       Client attestation can be done via proof of solving a CAPTCHA,\r\n```\r\n\r\n- [nms]  \"Attestation\" via CAPTCHA is a proof of liveness (rather than an attestation of device trustworthiness properties). The sentence structure seems to conflate these two very different properties.\r\n\r\n```\r\n   4.  If the attestation process completes successfully, the client\r\n       creates a Token Request to send to the designated Issuer\r\n       (generally via the Attester, though it is not required to be sent\r\n       through the Attester).  \r\n```\r\n\r\n- [nms]  Wouldn't the token request be made prior to the interaction with the Attester where the interaction is a way to populate one of the fields in the token request? Using RATS passport model, the token request contains the attestation passport that is then sent to the Issuer. Alternatively, the Token Request is sent to the Attester who forwards it to the Issuer who then does a RATS background check prior to issuing the token response. \r\n\r\n```\r\nThe Attester and Issuer might be\r\n       functions on the same server, depending on the deployment model\r\n       (see Section 4).  Depending on the attestation process, it is\r\n       possible for attestation to run alongside the issuance protocol,\r\n       e.g., where Clients send necessary attestation information to the\r\n       Attester along with their Token Request.  If the attestation\r\n       process fails, the Client receives an error and issuance aborts\r\n       without a token.\r\n\r\n   5.  The Issuer generates a Token Response based on the Token Request,\r\n       which is returned to the Client (generally via the Attester).\r\n       Upon receiving the Token Response, the Client computes a token\r\n       from the token challenge and Token Response.  This token can be\r\n       validated by anyone with the per-Issuer key, but cannot be linked\r\n       to the content of the Token Request or Token Response.\r\n\r\n   6.  If the Client has a token, it includes it in a subsequent request\r\n       to the Origin, as authorization.  \r\n\r\n```\r\n- [nms]  Normally, a server that requires authorization might be using OAuth2. Does Privacy Pass integrate with OAuth2 or if not, does it compete with OAuth2?\r\n\r\n```\r\nThis token is sent only once.\r\n```\r\n\r\n- [nms]  Does this mean it is only sent once per Origin (i.e., each Origin receives a different token) or that for a given Origin, it receives a token one time? Given the Origin-Client interaction is RESTful, and there are multiple REST interactions, will the Client obtain a different token for each RESTful exchange?\r\n\r\n```\r\n       The Origin validates that the token was generated by the expected\r\n       Issuer and has not already been redeemed for the corresponding\r\n       token challenge.  If the Client does not have a token, perhaps\r\n       because issuance failed, the client does not reply to the\r\n       Origin's challenge with a new request.\r\n```\r\n- [nms]  It isn't clear if \"Request + Token\" is combing two otherwise independent flows: (a) Token - which completes the flow described in Fig. 1. and (b) Request - which restarts the flow in Fig. 1. Or if Request+Token finalizes the flow in Fig. 1. If so, what is being requested in \"Request\"?\r\n\r\n",
      "createdAt": "2023-06-27T16:10:28Z",
      "updatedAt": "2023-08-09T14:36:34Z",
      "closedAt": "2023-08-09T14:36:34Z",
      "comments": []
    },
    {
      "number": 400,
      "id": "I_kwDODeTEy85p761g",
      "title": "[Secdir] Privacy goals and threat model",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/400",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "architecture"
      ],
      "body": "General comment:\r\n\r\n- [nms] The threat model should also describe the obligations each entity is under for not disclosing attributes obtained from the Client. If attributes are shared, what obligations the targets of sharing are under to not disclose etc. Given the Issuer and Origin(s) are adversaries of the Client and given the Attester has a dual role of being both a trusted entity of the Client and a trusted entity of the Issuer, the potential for Attester being manipulated into bias against the Client seems likely. The threat model should do more to explain how these (contradictory) objective can be met. \r\n\r\nThe unlinkability goals are necessarily overridden by the attestation objective to share Client attributes. Hence more should be said about how the Client is supposed to trust its adversaries with information that could be shared with colluding partners.\r\n\r\n```\r\n   The privacy goals of Privacy Pass assume a threat model in which\r\n   Origins trust specific Issuers to produce tokens, and Issuers in turn\r\n   trust one or more Attesters to correctly run the attestation\r\n   procedure with Clients.  This arrangement ensures that tokens which\r\n   validate for a given Issuer were only issued to a Client that\r\n   successfully completed attestation with an Attester that the Issuer\r\n   trusts.  Moreover, this arrangement means that if an Origin accepts\r\n   tokens issued by an Issuer that trusts multiple Attesters, then a\r\n   Client can use any one of these Attesters to issue and redeem tokens\r\n   for the Origin.\r\n```\r\n- [nms]The threat model should consider the possibility that any of the entities could collude with any other entities to obtain Redemption context, Issuance context, and Attestation context. Based on the descriptions above, these sets are not disjoint, hence, portions of the set of attributes associated with the Client are shared by some of the entities. Since, the Privacy Pass scope doesn't attempt to understand the various attestation protocols (and therefore doesn't understand which attributes are used), it doesn't seem reasonable to assume that there is any difference in terms of the attributes of each of the contexts. Consequently, (through collusion or otherwise) all entities have access to all attributes, the Privacy Pass protocol would not provide an effective protection against DPA attacks vs. the Client withholding all attributes that contribute to DPA attack weakness.\r\n\r\n```\r\n   Clients explicitly trust Attesters to perform attestation correctly\r\n   and in a way that does not violate their privacy.  \r\n```\r\n\r\n- [nms]This type of trust should be explained more clearly as RFC9334 doesn't claim to perform attestation that is privacy preserving. Except for draft-ietf-rats-daa-03 which focuses only on privacy properties of RATS attester signing keys. How does the Client evaluate an Attester (RATS Verifier) to assess whether it is capable of preserving Client privacy while also fulfilling the requirements of Relying Parties desire to gain insight about Client (RATS Attester) attributes.\r\n\r\n```\r\nHowever, Clients assume Issuers and Origins are malicious.\r\n```\r\n- [nms]It would be helpful to include this assumption as part of the description of the roles (and reference this section for details).\r\n\r\n```\r\n   Given this threat model, the privacy goals of Privacy Pass are\r\n   oriented around unlinkability based on redemption, issuance, and\r\n   attestation contexts, as described below.\r\n\r\n   1.  Origin-Client unlinkability.  This means that given two\r\n       redemption contexts, the Origin cannot determine if both\r\n       redemption contexts correspond to the same Client or two\r\n       different Clients.  Informally, this means that a Client in a\r\n       redemption context is indistinguishable from any other Client\r\n       that might use the same redemption context.  The set of Clients\r\n       that share the same redemption context is referred to as a\r\n       redemption anonymity set.\r\n```\r\n- [nms]  Based on previous description, it seems the anonymity sets may not be disjoint. If not, then understanding the DPA impact to anonymity cannot be strictly understood for a given anonymity set.\r\n\r\n```\r\n   2.  Issuer-Client unlinkability.  This is similar to Origin-Client\r\n       unlinkability in that a Client in an issuance context is\r\n       indistinguishable from any other Client that might use the same\r\n       issuance context.  The set of Clients that share the same\r\n       issuance context is referred to as an issuance anonymity set.\r\n\r\n   3.  Attester-Origin unlinkability.  This is similar to Origin-Client\r\n       and Issuer-Client unlinkability.  It means that given two\r\n       attestation contexts, the Attester cannot determine if both\r\n       contexts correspond to the same Origin or two different Origins.\r\n       The set of Origins that share the same attestation context is\r\n       referred to as an attestation anonymity set.\r\n\r\n   4.  Redemption context unlinkability.  Given two redemption contexts,\r\n       the Origin cannot determine which issuance and attestation\r\n       contexts each redemption corresponds to, even with the\r\n       collaboration of the Issuer and Attester (should these be\r\n       different parties).  This means that any information that may be\r\n       learned about the Client during the issuance and attestation\r\n       flows cannot be used by the Origin to compromise Client privacy.\r\n\r\n   By ensuring that different contexts cannot be linked in this way,\r\n   only the Client is able to correlate information that might be used\r\n```\r\n- [nms]  this conclusion doesn't follow based on the potential for collusion and attribute overlap in the various anonymity sets.",
      "createdAt": "2023-06-27T16:10:59Z",
      "updatedAt": "2023-08-09T14:36:34Z",
      "closedAt": "2023-08-09T14:36:34Z",
      "comments": []
    },
    {
      "number": 401,
      "id": "I_kwDODeTEy85p78nb",
      "title": "[Secdir review] Redemption",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/401",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "architecture"
      ],
      "body": "```\r\n   *  Issuer identity.  Token challenges identify which Issuers are\r\n      trusted for a given issuance protocol.  As described in\r\n      Section 3.2, the choice of Issuer determines the type of Attesters\r\n      and attestation procedures possible for a token from the specified\r\n      Issuer, but the Client does not learn exactly which Attester was\r\n      used for a given token issuance event.\r\n```\r\n- [nms] Earlier descriptions indicate the Issuer issues token request responses while the Attester provides results to the Client and the Client creates the token. How is it the Client doesn't know the Attester?\r\n\r\n```\r\n   *  Redemption context.  Challenges can be bound to a given redemption\r\n```\r\n- [nms] As an architecture document, does it make sense to describe the requirements of the system that achieve the privacy goals vs. describing the behavior that may or may not be privacy relevant?\r\n\r\n```\r\n      context, which influences a client's ability to pre-fetch and\r\n      cache tokens.  For example, an empty redemption context always\r\n      allows tokens to be issued and redeemed non-interactively, whereas\r\n      a fresh and random redemption context means that the redeemed\r\n      token must be issued only after the client receives the challenge.\r\n      See Section 2.1.1 of [AUTHSCHEME] for more details.\r\n\r\n   *  Per-Origin or cross-Origin.  Challenges can be constrained to the\r\n```\r\n- [nms] As an architecture document, does it make sense to describe the requirements of the system that achieve the privacy goals vs. describing the behavior that may or may not be privacy relevant?\r\n\r\n```\r\n      Origin for which the challenge originated (referred to as per-\r\n      Origin tokens), or can be used across multiple Origins (referred\r\n      to as cross-Origin tokens).  The set of Origins for which a cross-\r\n      Origin token is applicable is referred to as the cross-Origin set.\r\n\r\n   Origins that admit cross-Origin tokens bear some risk of allowing\r\n   tokens issued for one Origin to be spent in an interaction with\r\n   another Origin.  \r\n```\r\n- [nms] How is the risk quantified? \r\n\r\n```\r\nIn particular, depending on the use case, Origins\r\n   may need to maintain state to track redeemed tokens.  For example,\r\n   Origins that accept cross-Origin tokens across shared redemption\r\n```\r\n- [nms] A 'cross-origin shared redemption' sounds like collusion. What makes it not collusion from the perspective of the Client?\r\n\r\n```\r\n   contexts SHOULD track which tokens have been redeemed already in\r\n   those redemption contexts, since these tokens can be issued and then\r\n   spent multiple times in response to any such challenge.  \r\n```\r\n- [nms] Wouldn't the first \"spend\" of the token represent a disclosure of potentially privacy revealing activity? If so, wouldn't a subsequent \"spend\" equate to the same disclosure? Once information is disclosed the effect on privacy is idempotent. Assume that either the information is known everywhere or that its scope of disclosure is limited by the entity you disclosed it too, and that entity is trusted to maintain that scope regardless of the number of times it is re-disclosed. ",
      "createdAt": "2023-06-27T16:16:09Z",
      "updatedAt": "2023-08-09T14:36:35Z",
      "closedAt": "2023-08-09T14:36:35Z",
      "comments": []
    },
    {
      "number": 402,
      "id": "I_kwDODeTEy85p7_pk",
      "title": "[Secdir review] Issuance",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/402",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "architecture"
      ],
      "body": "```\r\n3.4.  Issuance Protocol\r\n\r\n   The Privacy Pass issuance protocol, described in [ISSUANCE], is a\r\n   two-message protocol that takes as input a TokenChallenge from the\r\n   redemption protocol ([AUTHSCHEME], Section 2.1) and produces a Token\r\n   ([AUTHSCHEME], Section 2.2), as shown in Figure 1.\r\n```\r\n- [nms] This architecture has several sections that are conceptually incomplete unless the reader reads the cited I-D that are WIP. This implies the architecture can't be completed until the dependent I-Ds are completed. Is that how the WG intends to move this I-D forward? Alternatively, the concepts referenced by the cited I-Ds can be included here and written in the style of requirements. The referenced I-Ds can be written in the style of an implementation that follows the requirements. References, become informative rather than normative. Otherwise, I assert these references are actually normative and are in the wrong section below.\r\n\r\n```\r\n3.4.1.  Attester Role\r\n\r\n   In Privacy Pass, attestation is the process by which an Attester\r\n   bears witness to, confirms, or authenticates a Client so as to verify\r\n   properties about the Client that are required for Issuance.  Issuers\r\n   trust Attesters to perform attestation correctly.\r\n```\r\n- [nms] A clearer definition of 'trust' is needed so that the reader can understand if the Issuer is a potential adversary that may 'leak' or expose information that can be used to perform DPA attacks or if the Issuer is itself doing DPA attacks. It isn't clear whether the Issuer is a RATS Relying Party or if Origin is a RATS Relying Party. If both are RATS RPs, then it isn't clear if the Client is trusting one more than the other to enforce the Client privacy policy.\r\n\r\n```\r\n   [RFC9334] describes an architecture for attestation procedures.\r\n   Using that architecture as a conceptual basis, Clients are RATS\r\n   attesters that produce attestation evidence, and Attesters are RATS\r\n   verifiers that appraise the validity of attestation evidence.\r\n```\r\n- [nms] If Privacy Pass uses RFC9334 definitions of roles, then the previous paragraph is fallacious. A RATS Verifier do not attest, instead they produce attestation results while the Client attests.\r\n\r\n```\r\n   The type of attestation procedure is a deployment-specific option and\r\n   outside the scope of the issuance protocol.  \r\n```\r\n- [nms] I don't understand how, if the algorithm that exposes Client attributes, is out of scope of the I-D, that Privacy Pass is able to understand the DPA properties of a particular disclosed attribute. This seems essential to any of the Privacy Pass entities that are trusted by the Client to enforce it's privacy policy.\r\n\r\n```\r\n   In general, each attestation procedure has different security\r\n   properties.  For example, attesting to having a valid account is\r\n   different from attesting to running on trusted hardware.  In general,\r\n   minimizing the set of supported attestation procedures helps minimize\r\n   the amount of information leaked through a token.\r\n```\r\n- [nms] Word choice is a concern as it suggests a Privacy Pass token can't be trusted to protect the privacy interests of the Client.\r\n\r\n```\r\n3.4.2.  Issuer Role\r\n\r\n   In Privacy Pass, the Issuer is responsible for completing the\r\n   issuance protocol for Clients that complete attestation through a\r\n   trusted Attester.  As described in Section 3.4.1, Issuers explicitly\r\n   trust Attesters to correctly and reliably perform attestation.\r\n```\r\n- [nms] Yes, but Client's trust Attesters not to disclose attributes that compromises Client privacy. The threat model said that Issuer and Origin were adversaries of the Client and the Attester was trusted by the Client (but didn't clearly explain which attributes the Client trusted the Attester not to disclose to the Issuer / Origin). How is does the Attester serve the interests of both Client and Issuer/Origin who are adversaries?\r\n\r\n```\r\n   Depending on the deployment model case, issuance may require some\r\n   form of Client anonymization service,\r\n```\r\n- [nms] This seems to suggest there is a 5th role \"Client Anonymization Service\" that isn't mentioned in the threat model. Given the Issuer is a Client adversary, why should the Client trust the Client Anonymization Service which is deployed from the Issuer context? Wouldn't the Issuer already have access to Client attributes at this point? Given the Client already trusts the Attester to prevent disclosure of attributes to Issuer / Origin, why wouldn't the Client Anonymization Service be employed by the Client directly or by the Attester? \r\n\r\n```\r\n similar to an IP-hiding proxy,\r\n```\r\n- [nms] The IP-hiding proxy exists at a particular layer in the networking stack so as being in a position to prevent the next hop entity from observing the IP address. If this logic is applied to attributed \"FOO\", the application or network context is essential to determining if the Client Anonymization Service is an effective proxy. Yet there is not discussion about this important architectural dependency on a per attribute basis. Alternatively, the Client Anonymization Service is encrypting attributes to avoid disclosure. In this context, understanding the key exchange path is essential. \r\n\r\n\r\n```\r\n   so that Issuers cannot learn information about Clients.  This can be\r\n   provided by an explicit participant in the issuance protocol, or it\r\n   can be provided via external means, such as through the use of an IP-\r\n   hiding proxy service like Tor. In general, Clients SHOULD minimize or\r\n   remove identifying information where possible when invoking the\r\n   issuance protocol.\r\n```\r\n- [nms] Ultimately, what matters is whether the information contributes to a DPA attack. Unless there is a way for a Client to evaluate whether or not to \"minimize or remove identifying information\" comes down to whether the Client can assess whether the attribute contributes to a DPA attack. I don't see how that is enabled by Privacy Pass.\r\n\r\n```\r\n   Issuers are uniquely identifiable by all Clients with a consistent\r\n   identifier.  In a web context, this identifier might be the Issuer\r\n   host name.  \r\n```\r\n- [nms] Load balancers obscure the host name from the instance. Hence, host names are not necessarily unique identifiers of an entity. Issuers maintain one or more configurations, including\r\n\r\n\r\n```\r\n   Public metadata is that which clients can observe as part of the\r\n   token issuance flow.  Public metadata can either be transparent or\r\n   opaque.  For example, transparent public metadata is a value that the\r\n   client either generates itself, or the Issuer provides during the\r\n   issuance flow and the client can check for correctness.  Opaque\r\n   public metadata is metadata the client can see but cannot check for\r\n   correctness.  As an example, the opaque public metadata might be a\r\n   \"fraud detection signal\", computed on behalf of the Issuer, during\r\n   token issuance.  In normal circumstances, Clients cannot determine if\r\n   this value is correct or otherwise a tracking vector.\r\n```\r\n- [nms] Is this saying the Client can't tell when it has been labeled with a \"fraud detection signal\"? Shouldn't the goals of Privacy Pass favor Client's ability to detect when a privacy disclosure event has occurred such that it can attempt to apply a privacy counter measure. Possibly, there are privacy laws that prevent misuse even if privacy sensitive information is disclosed.",
      "createdAt": "2023-06-27T16:24:21Z",
      "updatedAt": "2023-08-09T14:36:35Z",
      "closedAt": "2023-08-09T14:36:35Z",
      "comments": []
    },
    {
      "number": 403,
      "id": "I_kwDODeTEy85p8AUb",
      "title": "[Secdir review] Information flow",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/403",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "architecture"
      ],
      "body": "```\r\n3.5.1.  Token Challenge Flow\r\n\r\n   To use Privacy Pass, Origins choose an Issuer from which they are\r\n   willing to accept tokens.  Origins then construct a token challenge\r\n   using this specified Issuer and information from the redemption\r\n   context it shares with the Client.  This token challenge is then\r\n   delivered to a Client.  The token challenge conveys information about\r\n   the Issuer and the redemption context, such as whether the Origin\r\n   desires a per-Origin or cross-Origin token.  Any entity that sees the\r\n   token challenge might learn things about the Client as known to the\r\n   Origin.  \r\n```\r\n- [nms] The threat model didn't qualify the Origin vs. cross-Origin such that an Origin is trusted by the Client to protect the attributes disclosed to it from further disclosure to cross-Origin entities. \r\n\r\n\r\n```\r\n3.5.2.  Attestation Flow\r\n\r\n   Clients interact with the Attester to prove that they meet some\r\n   required set of properties.  In doing so, Clients contribute\r\n   information to the attestation context, which might include sensitive\r\n   information such as application-layer identities, IP addresses, and\r\n   so on.  Clients can choose whether or not to contribute this\r\n   information based on local policy or preference.\r\n```\r\n- [nms] Policy or preference seems insufficient advice since the Client is motivated to participate in the online activity that the user is motivated to participate in. The privacy question is not easily all or nothing, but rather a question of whether disclosed attributes constitutes successful DPA attacks. \r\n\r\n```\r\n   Exceptional cases in the issuance protocol, such as when either the\r\n   Attester or Issuer aborts the protocol, can contribute information to\r\n   the attestation or issuance contexts.  The extent to which\r\n   information in this context harms the Issuer-Client or Attester-\r\n   Origin unlinkability goals in Section 3.2 depends on deployment\r\n   model; see Section 4.  Clients can choose whether or not to\r\n   contribute information to these contexts based on local policy or\r\n   preference.\r\n```\r\n- [nms] Policy or preference seems insufficient advice since the Client is motivated to participate in the online activity that the user is motivated to participate in. The privacy question is not easily all or nothing, but rather a question of whether disclosed attributes constitutes successful DPA attacks. \r\n\r\n```\r\n3.5.4.  Token Redemption Flow\r\n\r\n   Clients send tokens to Origins during the redemption protocol.  Any\r\n   information that is added to the token during issuance can therefore\r\n   be sent to the Origin.  Information can either be explicitly passed\r\n   in a token, or it can be implicit in the way the Client responds to a\r\n   token challenge.  For example, if a Client fails to complete\r\n   issuance, and consequently fails to redeem a token in response to a\r\n   token challenge, this can reveal information to the Origin that it\r\n   might not otherwise have access to.  \r\n```\r\n- [nms] The example may have poor word choice in that the Client is presumed to know (have access to) all the attributes it discloses in Evidence. Once disclosed, there is no way to un-disclose it. Hence, the wording should say that the Client might disclose attributes to the Origin during the token exchange, that can't be un-disclosed even if the Client aborts the token challenge exchange. \r\n\r\n```\r\nHowever, an Origin cannot\r\n   necessarily distinguish between a Client that fails to complete\r\n   issuance and one that ignores the token challenge altogether.\r\n```\r\n- [nms] However, the Origin may apply DPA attacks on all tokens such that the attributes disclosed over a period of time may reveal a pattern that is then used to identify / track a particular Client. For example, the time of day, mix of attributes, and number of times a series of failures to complete a token request occurs etc.",
      "createdAt": "2023-06-27T16:25:52Z",
      "updatedAt": "2023-08-09T14:36:35Z",
      "closedAt": "2023-08-09T14:36:35Z",
      "comments": []
    },
    {
      "number": 404,
      "id": "I_kwDODeTEy85p8AmL",
      "title": "[Secdir review] Shared Origin, Attester, Issuer deployment",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/404",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "architecture"
      ],
      "body": "```\r\n   This model represents the initial deployment of Privacy Pass, as\r\n   described in [PrivacyPassCloudflare].  In this model, the Attester,\r\n   Issuer, and Origin share the attestation, issuance, and redemption\r\n   contexts.  As a result, attestation mechanisms that can uniquely\r\n   identify a Client, e.g., requiring that Clients authenticate with\r\n   some type of application-layer account, are not appropriate, as they\r\n   could lead to unlinkability violations.\r\n```\r\n- [nms] Can the architecture be more specific about which type of application-layer accounts and which unlinkability violations?  If an application-layer account used a DAA key to attest (sign Evidence) then the unlinkability goal appears to be achieved. Placing a ban on all application accounts without consideration for specific techniques and their privacy preserving properties seems inappropriate.\r\n\r\n```\r\n   Origin-Client, Issuer-Client, and Attester-Origin unlinkability\r\n   requires that issuance and redemption events be separated over time,\r\n   such as through the use of tokens that correspond to token challenges\r\n   with an empty redemption context (see Section 3.3), or be separated\r\n   over space, such as through the use of an anonymizing proxy when\r\n   connecting to the Origin.\r\n```\r\n- [nms] The specific attributes that the anonymizing proxy is capable of proxying (hiding) should be enumerated since some attributes are opaque payload elements for a given OSI layer.  A full application layer proxy would, in theory, have the ability to proxy any attribute that is implied by the previous paragraph (yet is banned). \r\n\r\nWhat causes the Client to trust the proxy to be it's delegate in enforcing the Client's privacy policy vs. being an agent of its adversaries?",
      "createdAt": "2023-06-27T16:26:43Z",
      "updatedAt": "2023-08-09T14:36:36Z",
      "closedAt": "2023-08-09T14:36:36Z",
      "comments": []
    },
    {
      "number": 405,
      "id": "I_kwDODeTEy85p8Auj",
      "title": "[Secdir review] Joint Attester and Issuer deployment",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/405",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "architecture"
      ],
      "body": "````\r\n4.2.  Joint Attester and Issuer\r\n\r\n   In this model, the Attester and Issuer are operated by the same\r\n   entity that is separate from the Origin.  The Origin trusts the joint\r\n   Attester and Issuer to perform attestation and issue Tokens.  \r\n```\r\n- [nms] Combining these roles seems like it should not be tolerated since the Issuer is an adversary of the Client and the Attester (RATS Verifier) is a trusted ally of the Client. Given the server hosting both roles is under common administrative control, what causes the Client to continue to trust the Attester while not trust the Issuer?",
      "createdAt": "2023-06-27T16:27:08Z",
      "updatedAt": "2023-08-09T14:36:37Z",
      "closedAt": "2023-08-09T14:36:37Z",
      "comments": []
    },
    {
      "number": 406,
      "id": "I_kwDODeTEy85p8BCr",
      "title": "[Secdir review] Discriminatory Treatment",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/406",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "architecture"
      ],
      "body": "```\r\n5.1.  Discriminatory Treatment\r\n\r\n   Origins can use tokens as a signal for distinguishing between Clients\r\n   that are capable of completing attestation with one Attester trusted\r\n   by the Origin's chosen Issuer, and Clients that are not capable of\r\n   doing the same.  \r\n```\r\n- [nms] Shouldn't the goal of Privacy Pass be that the Client (and it's trusted participants - Attester / RATS Verifier?) are able to opt-out of a privacy revealing exchange before the exchange occurs? Likewise, if the Origin is unable to get a sufficient degree of transparency of the Client, the Origin may opt-out? Given opting-out is a reasonable privacy enforcement strategy, and a threat mitigation strategy, does it make sense to describe this as \"discriminatory\"?\r\n\r\n```\r\nA consequence of this is that Privacy Pass could\r\n   enable discriminatory treatment of Clients based on Attestation\r\n   support.  This could lead to harmful ecosystem effects if left\r\n   unresolved.\r\n```\r\n- [nms]The harmful ecosystem effects should be enumerated.\r\n\r\n```\r\n   For example, to disallow discriminatory behavior between Clients with\r\n   and without device attestation support, an Issuer may wish to support\r\n   Attesters that support CAPTCHA-based attestation.  This means that\r\n   the overall attestation value of a Privacy Pass token is bound by the\r\n   difficulty in spoofing or bypassing either one of these attestation\r\n   procedures.\r\n```\r\n- [nms]Wouldn't the value also be tied to the shared attributes that were negotiated? For example, the attributes that are good indicators of Client trustworthiness and are also privacy preserving? Is it within the scope of this I-D to identify some of these attributes - all things considered? If the set of attributes is the empty set, then does it make sense to deploy Privacy\r\nPass?",
      "createdAt": "2023-06-27T16:28:03Z",
      "updatedAt": "2023-08-09T14:36:37Z",
      "closedAt": "2023-08-09T14:36:37Z",
      "comments": []
    },
    {
      "number": 407,
      "id": "I_kwDODeTEy85p8BSr",
      "title": "[Secdir review] Centralization",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/407",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "architecture"
      ],
      "body": "```\r\n5.2.  Centralization\r\n\r\n   A consequence of limiting the number of participants (Attesters or\r\n   Issuers) in Privacy Pass deployments for meaningful privacy is that\r\n   it forces concentrated centralization amongst those participants.\r\n   [CENTRALIZATION] discusses several ways in which this might be\r\n   mitigated.  For example, a multi-stakeholder governance model could\r\n   be established to determine what candidate participants are fit to\r\n   operate as participants in a Privacy Pass deployment.  This is\r\n   precisely the system used to control the Web's trust model.\r\n\r\n   Alternatively, Privacy Pass deployments might mitigate this problem\r\n   through implementation.  For example, rather than centralize the role\r\n   of attestation in one or few entities, attestation could be a\r\n   distributed function \r\n```\r\n- [nms]\"Attestation\" is ambiguous if the reader substitutes RATS \"Verifier\" with Attester and RATS Attester with Client. Attestation is both the generation (collection) of Evidence and the generation of Attestation Results. The language here suggests the attestation function is distributable, but only in the sense that multiple Verifier instances can be deployed for scalability and the various subroutines of the verifier function can be distributed. The idea that a distributed deployment wouldn't be capable of or have interest in collusion should not be assumed. Rather, mechanisms (such as DAA) should be defined that prevent collusion.",
      "createdAt": "2023-06-27T16:28:48Z",
      "updatedAt": "2023-08-09T14:36:38Z",
      "closedAt": "2023-08-09T14:36:38Z",
      "comments": []
    },
    {
      "number": 408,
      "id": "I_kwDODeTEy85p8BdN",
      "title": "[Secdir review] Security considerations",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/408",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "architecture"
      ],
      "body": "```\r\n7.  Security Considerations\r\n\r\n   This document describes security and privacy requirements for the\r\n   Privacy Pass redemption and issuance protocols.  It also describes\r\n   deployment models and privacy considerations for using Privacy Pass\r\n   within those models.  Ensuring Client privacy -- separation of\r\n   attestation and redemption contexts \r\n```\r\n- [nms] Separation of contexts is a reasonable BKM for good privacy architecture, but meaningful implementation should identify enforcement mechanisms that resist collusion attacks.",
      "createdAt": "2023-06-27T16:29:17Z",
      "updatedAt": "2023-08-09T14:36:38Z",
      "closedAt": "2023-08-09T14:36:38Z",
      "comments": []
    },
    {
      "number": 409,
      "id": "I_kwDODeTEy85rXYnY",
      "title": "Token key encoding ambiguity",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/409",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "There is currently no text that says precisely how token keys are encoded. As an example, one could infer that it's as a DER encoded SPKI blob based on how the token key ID is computed, but we're not explicit about that. We should fix that.",
      "createdAt": "2023-07-12T15:55:55Z",
      "updatedAt": "2023-07-23T20:52:04Z",
      "closedAt": "2023-07-23T20:52:04Z",
      "comments": []
    },
    {
      "number": 412,
      "id": "I_kwDODeTEy85sqBUh",
      "title": "Auth scheme: update rationale for base64 padding guidance",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/412",
      "state": "CLOSED",
      "author": "DavidSchinazi",
      "authorAssociation": "NONE",
      "assignees": [
        "tfpauly"
      ],
      "labels": [],
      "body": "In the [current auth scheme draft](https://www.ietf.org/archive/id/draft-ietf-privacypass-auth-scheme-11.html#section-2.1), `challenge` and `token-key` are currently defined as base64url-encoded values. The draft also states:\r\n> Since the length of the challenge is not fixed, the base64url value MUST include padding.\r\n\r\nThis sounds like a misunderstanding of how base64 padding works. Padding is only required when concatenating two base64 messages. Here's an example:\r\n\r\n* `hello` ASCII encodes as base64 `aGVsbG8=`\r\n* `base` ASCII encodes as base64 `YmFzZQ==`\r\n\r\nOn the decoding side, `aGVsbG8` is non-ambiguous: it decodes just as well as `aGVsbG8=`. Similarly, if you see `YmFzZQ` you know how many bytes there are and it decodes fine. The problem arises if you concatenate: `aGVsbG8=YmFzZQ==` decodes to `hellobase` (assuming your decoder supports this which many don't), but `aGVsbG8YmFzZQ` decodes to `hello\u0018\\`.\r\n\r\nIn the context of this draft, the message is strongly delimited (ends with the end of the header, or with a whitespace or a comma etc.) so there is no opportunity for concatenation.\r\n\r\nThis document shouldn't be requiring padding.",
      "createdAt": "2023-07-26T18:35:56Z",
      "updatedAt": "2023-08-01T23:54:08Z",
      "closedAt": "2023-08-01T23:54:08Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "I am happy to change the explanation for why the padding is present, but I would prefer to not change the padding at this point to have a breaking change, that doesn't add any significant value. I prefer to have a spec with a consistent approach (one or the other), and the spec for base64 does by default require padding. Of course, we could choose to override that here (as RFC4648 allows) but I don't see a strong reason to do so.\r\n\r\nhttps://www.rfc-editor.org/rfc/rfc4648#section-3.2\r\n\r\n>    In some circumstances, the use of padding (\"=\") in base-encoded data\r\n>    is not required or used.  In the general case, when assumptions about\r\n>    the size of transported data cannot be made, padding is required to\r\n>    yield correct decoded data.\r\n> \r\n>    Implementations MUST include appropriate pad characters at the end of\r\n>    encoded data unless the specification referring to this document\r\n>    explicitly states otherwise.\r\n\r\nThis also allows the base64 string for the keys to be safely copied into other contexts where it might get concatenated, without risk of losing the length. If we change the advice, we would need to add security warnings about using these strings in other contexts.",
          "createdAt": "2023-07-26T21:28:34Z",
          "updatedAt": "2023-07-26T21:28:34Z"
        },
        {
          "author": "DavidSchinazi",
          "authorAssociation": "NONE",
          "body": "RFC 4648 recommends including padding because it assumes that concatenation can take place, which really isn't the case here. Copying these strings into other contexts and concatenating them doesn't make any sense to me in this case. What does concatenating challenges mean? Or concatenating public keys? And even if that did make sense, why would you concatenate base64 instead of concatenating the decoded binary?\r\n\r\nPreferring to avoid wire format changes at this point in the timeline is totally reasonable though. If this is too much of a deployment problem, then keeping the wire format as-is but removing the rationale is a viable option.",
          "createdAt": "2023-07-26T21:42:00Z",
          "updatedAt": "2023-07-26T21:42:00Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "Happy to make a PR to remove that rationale. ",
          "createdAt": "2023-07-27T02:01:01Z",
          "updatedAt": "2023-07-27T02:01:01Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "@DavidSchinazi please check #413 ",
          "createdAt": "2023-07-28T18:02:44Z",
          "updatedAt": "2023-07-28T18:02:44Z"
        }
      ]
    },
    {
      "number": 415,
      "id": "I_kwDODeTEy85tMzF-",
      "title": "DISCUSS: under-specification",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/415",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "auth-scheme"
      ],
      "body": "(a) There is guidance in the architecture and issuance documents; and this\r\ndocument to construct an end-to-end solution.  However, for the purposes of\r\nthese document, those other are only informative.  There appears to be a few\r\nplaces of under-specification or implicit assumptions.\r\n\r\n** Section 2.2\r\n   For token types that support public verifiability, origins verify the\r\n   token authenticator using the public key of the issuer, and validate\r\n   that the signed message matches the concatenation of the client nonce\r\n   and the hash of a valid TokenChallenge.\r\n\r\n-- Please explain what \u201cpublic verifiability\u201d means.  I didn\u2019t see this term in\r\nthe architecture document.\r\n\r\n-- Implementation details of the authenticator/token seem to be leaking into\r\nthis text (i.e., properties of the nonce || hash TokenChallenge).  Does this\r\nsuggest requirements for the construction of the token? Put in another way,\r\nwhere is the normative guidance that requires that construction?  I couldn\u2019t\r\nfind other language in this document on the cryptographic properties of the\r\nToken.\r\n\r\n** Section 2.2.  Since this section is describing the redemption process, I\r\nmissed something obvious -- how does the origin know it got a \u201cgood\u201d token\u201d.  I\r\nwas expecting to see language which say that there is a token-specific\r\nverification steps of the Token\u2019s cryptographic assurances.",
      "createdAt": "2023-08-01T21:40:29Z",
      "updatedAt": "2023-08-09T14:09:16Z",
      "closedAt": "2023-08-09T14:09:16Z",
      "comments": []
    },
    {
      "number": 416,
      "id": "I_kwDODeTEy85tMzPj",
      "title": "DISCUSS: Hash agility",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/416",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "auth-scheme"
      ],
      "body": "(b) Section 2.2.\r\n   *  \"challenge_digest\" is a 32-octet value containing the hash of the\r\n      original TokenChallenge, SHA256(TokenChallenge).\r\n\r\nIt appears that challenge_digest uses a hard coded hash function (SHA256). \r\nWhat is the hash agility plan?",
      "createdAt": "2023-08-01T21:41:06Z",
      "updatedAt": "2023-08-09T14:09:05Z",
      "closedAt": "2023-08-09T14:09:05Z",
      "comments": []
    },
    {
      "number": 417,
      "id": "I_kwDODeTEy85tMz8Z",
      "title": "COMMENT: Origin guidance",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/417",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "auth-scheme"
      ],
      "body": "** Section 2.\r\n   Origins SHOULD minimize the number of challenges sent on a particular\r\n   client session, such as a unique TLS session between a client and\r\n   origin (referred to as the \"redemption context\" in [ARCHITECTURE]).\r\n   Clients can have implementation-specific policy to minimize the\r\n   number of tokens that can be retrieved by origins, so origins are\r\n   advised to only request tokens when necessary within a single\r\n   session.\r\n\r\n-- Why does the origin guidance use normative language but the client guidance\r\ndoes not \u2013 i.e., s/Clients can have/Clients MAY have/.\r\n\r\n-- Why repeat \u201cso origins are advised to only request tokens when necessary\r\nwithin a single session\u201d, if the prior sentence already uses a SHOULD to\r\ncaution against this behavior.",
      "createdAt": "2023-08-01T21:43:48Z",
      "updatedAt": "2023-08-09T14:11:33Z",
      "closedAt": "2023-08-09T14:11:33Z",
      "comments": []
    },
    {
      "number": 418,
      "id": "I_kwDODeTEy85tM0Fu",
      "title": "COMMENT: Normatively reference SHA256",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/418",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "auth-scheme"
      ],
      "body": "** Section 2.2.\r\n   *  \"challenge_digest\" is a 32-octet value containing the hash of the\r\n      original TokenChallenge, SHA256(TokenChallenge).\r\n\r\n-- Please provide a normative reference to SHA256.",
      "createdAt": "2023-08-01T21:44:23Z",
      "updatedAt": "2023-08-09T14:09:06Z",
      "closedAt": "2023-08-09T14:09:06Z",
      "comments": []
    },
    {
      "number": 419,
      "id": "I_kwDODeTEy85tM0KS",
      "title": "COMMENT: Issuance details out of scope",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/419",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "auth-scheme"
      ],
      "body": "** Section 2.1\r\n\r\n*  \"token-key\", which contains a base64url encoding of the public key\r\n      for use with the issuance protocol indicated by the challenge.\r\n\r\nRecommend adding language to remind the reader that the procedures of the\r\nissuance protocol are out of scope.",
      "createdAt": "2023-08-01T21:44:39Z",
      "updatedAt": "2023-08-09T14:11:34Z",
      "closedAt": "2023-08-09T14:11:34Z",
      "comments": []
    },
    {
      "number": 420,
      "id": "I_kwDODeTEy85tM0Wn",
      "title": "COMMENT: Authenticator construction",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/420",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "auth-scheme"
      ],
      "body": "** Section 2.2.\r\n*  \"authenticator\" is a Nk-octet authenticator that covers the\r\n      preceding fields in the token.  The value of this field is defined\r\n      by the token_type and corresponding issuance protocol.  The value\r\n      of constant Nk depends on token_type, as defined in Section 5.2.\r\n\r\n-- Could a bit more be said about the purpose of this field.  Please also\r\nexplain what \u201ccover\u201d means in this context.\r\n\r\n-- Will the security properties of these authenticators vary by token_type?  If\r\nso, please explicitly state that?",
      "createdAt": "2023-08-01T21:45:29Z",
      "updatedAt": "2023-08-09T14:09:16Z",
      "closedAt": "2023-08-09T14:09:16Z",
      "comments": []
    },
    {
      "number": 421,
      "id": "I_kwDODeTEy85tM0Z2",
      "title": "COMMENT: Origin interaction",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/421",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "auth-scheme"
      ],
      "body": "** Section 3.\r\n   Origins need not block useful work on token\r\n   authentication.  Instead, token authentication can be used in similar\r\n   ways to CAPTCHA validation today, but without the need for user\r\n   interaction.  If issuance is taking a long time, a website could show\r\n   an indicator that it is waiting, or fall back to another method of\r\n   user validation.\r\n\r\nCan \u201cOrigins need not block useful work on token authentication\u201d, please be\r\nclarified?  Specifically:\r\n\r\n-- What is \u201cuseful work\u201d?\r\n\r\n-- Isn\u2019t a website displaying an indicator that it is waiting blocking use of\r\nthe website?",
      "createdAt": "2023-08-01T21:45:42Z",
      "updatedAt": "2023-08-09T14:11:35Z",
      "closedAt": "2023-08-09T14:11:35Z",
      "comments": []
    },
    {
      "number": 422,
      "id": "I_kwDODeTEy85tM0fZ",
      "title": "COMMENT: Fallback and greasing",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/422",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "auth-scheme"
      ],
      "body": "** Section 3.\r\n   An origin MUST NOT assume that token challenges will always yield a\r\n   valid token.  Clients might experience issues running the issuance\r\n   protocol, e.g., because the attester or issuer is unavailable, or\r\n   clients might simply not support the requested token type.  Origins\r\n   SHOULD account for such operational or interoperability failures by\r\n   offering clients an alternative type of challenge such as CAPTCHA for\r\n   accessing a resource.\r\n\r\nIf the origin _MUST_ assumed that a challenge might not always yield a token,\r\nis the origin willing to not have the clients connect?  I ask because the fall\r\nback mechanism is framed only as a \u201cSHOULD\u201d?\r\n\r\n** Section 3.\r\n\r\n   In particular, clients SHOULD ignore token\r\n   challenges with some non-zero probability.  Likewise, origins SHOULD\r\n   randomly choose to not challenge clients for tokens with some non-\r\n   zero probability.\r\n\r\n-- Since there is normative guidance around greasing, what is a/the recommended\r\nprobability values?\r\n\r\n-- Is this normative guidance saying that periodically clients SHOULD fail\r\nintentionally per some distribution?",
      "createdAt": "2023-08-01T21:46:05Z",
      "updatedAt": "2023-08-09T14:11:35Z",
      "closedAt": "2023-08-09T14:11:35Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Regarding grease probabilities, I think we can get away without saying anything. This is what [QUIC did](https://datatracker.ietf.org/doc/html/rfc9287).",
          "createdAt": "2023-08-03T22:28:06Z",
          "updatedAt": "2023-08-03T22:28:06Z"
        }
      ]
    },
    {
      "number": 427,
      "id": "I_kwDODeTEy85te6BT",
      "title": "Vyncke comments",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/427",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "auth-scheme"
      ],
      "body": "1) the abstract is really opaque for a newcomer, suggest to define what\r\n'privacy pass' is used for\r\n\r\n2) section 2.1.1, I strongly suggest to avoid linking anything to an IP\r\naddress/prefix has devices can switch between IPv6/IPv4 (happy eyeball) or\r\nmultiple interfaces (cellular / Wi-Fi)\r\n\r\n3) section 2.1.1, I find weird the use of 'location' for an IP address as it\r\nhints to geographical location and mobile devices can change geographical\r\nlocations while keeping the same IP address",
      "createdAt": "2023-08-04T14:09:36Z",
      "updatedAt": "2023-08-09T02:55:54Z",
      "closedAt": "2023-08-09T02:55:54Z",
      "comments": []
    },
    {
      "number": 430,
      "id": "I_kwDODeTEy85to-VX",
      "title": "Registry guidance",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/430",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "auth-scheme"
      ],
      "body": "### Section 5.2, paragraph 15\r\n```\r\n     This registry also will also allow provisional registrations to allow\r\n     for experimentation with protocols being developed.  Designated\r\n     experts review, approve, and revoke provisional registrations.\r\n```\r\nHow/why/when do experts revoke provisional registrations? AFAIK this\r\nis not something that they usually do for other registries. Can\r\nprovisional registrations be upgraded to regular ones without\r\ncodepoint changes? This all might need more text, or maybe we can\r\nrely on the \"private use\" range for this?",
      "createdAt": "2023-08-07T13:26:34Z",
      "updatedAt": "2023-08-09T02:57:33Z",
      "closedAt": "2023-08-09T02:57:33Z",
      "comments": []
    },
    {
      "number": 436,
      "id": "I_kwDODeTEy85vn1ug",
      "title": "auth-scheme line lengths",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/436",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "dvorak42"
      ],
      "labels": [
        "auth-scheme",
        "editorial"
      ],
      "body": "I ran `make lint` and it turned up a ton of issues.  Some of them can probably be safely ignored, but not all.  There are several examples that have lines that are longer than the 65 character limit in the linter.  The text output can handle 69 characters, so maybe the linter just needs to be fixed.",
      "createdAt": "2023-08-30T01:02:04Z",
      "updatedAt": "2023-09-05T21:05:56Z",
      "closedAt": "2023-09-05T21:05:56Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "@dvorak42 can you help here?",
          "createdAt": "2023-08-31T19:31:04Z",
          "updatedAt": "2023-08-31T19:31:04Z"
        }
      ]
    },
    {
      "number": 437,
      "id": "I_kwDODeTEy85vn6kH",
      "title": "Are tokens really single use?",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/437",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "> Unlike many authentication schemes in which a client will present the same credentials across multiple requests, tokens used with the \"PrivateToken\" scheme are single-use credentials, and are not reused. Spending the same token value more than once allows the origin to link multiple transactions to the same client. In deployment scenarios where origins send token challenges to request tokens, origins ought to expect at most one request containing a token from the client in reaction to a particular challenge.\r\n\r\nI can think of many cases where a client wants to access a series of resources and use this scheme to access each.  I can think of two broad categories:\r\n\r\n1. Error recovery.  If the client is unable to retrieve a resource for reasons unrelated to the token (a broken connection, say), they might want to retry the request.\r\n2. Multiple resources within a single transaction or context.  Though it might be possible to only authorize a single request (the root HTML of a web page), HTTP servers often provide access control on a per-resource basis.  Having the token reused in that setting isn't harmful to privacy, particularly if there are other means of correlating requests (like the shared connection that is used to make all those requests).\r\n\r\nIn other words, I think that a non-reuse requirement could be problematic in the first case and unnecessary in the second.  Of course, loosening this requirement might make replay protections and whatnot more interesting, but that's something that can be managed.",
      "createdAt": "2023-08-30T01:30:58Z",
      "updatedAt": "2023-09-05T18:23:36Z",
      "closedAt": "2023-09-05T18:23:36Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "I think it is reasonable to allow reuse depending on the desired behavior, but still say that they are generally one-time-use.",
          "createdAt": "2023-08-31T16:36:59Z",
          "updatedAt": "2023-08-31T16:36:59Z"
        }
      ]
    },
    {
      "number": 438,
      "id": "I_kwDODeTEy85vn7n9",
      "title": "The token challenge could use an overview",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/438",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [
        "auth-scheme",
        "editorial"
      ],
      "body": "Section 2.1 describes the use of \"PrivateToken\" challenges in WWW-Authenticate (site note: and proxy-authenticate?), which is fine.\r\n\r\nIt then launches into a description of what a TokenChallenge message includes, failing to note some important stuff up front:\r\n\r\n1. the field value is a series of key-value pairs, with values being base64-encoded binary data\r\n2. there are `challenge` and `token-key` keys that are both required\r\n3. the challenge can be repeated\r\n\r\nThe necessary information is all there, but it could really use a map.",
      "createdAt": "2023-08-30T01:37:32Z",
      "updatedAt": "2023-09-12T19:31:07Z",
      "closedAt": "2023-09-12T19:31:07Z",
      "comments": []
    },
    {
      "number": 439,
      "id": "I_kwDODeTEy85vn7w4",
      "title": "HTTP examples and line folding",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/439",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "dvorak42",
        "chris-wood"
      ],
      "labels": [
        "auth-scheme",
        "editorial"
      ],
      "body": "The examples use `obs-fold`, which is a construct in HTTP that is dead.  It might be worth noting that this is used only to fit document formatting constraints.",
      "createdAt": "2023-08-30T01:38:22Z",
      "updatedAt": "2023-09-05T21:06:37Z",
      "closedAt": "2023-09-05T21:06:36Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "@dvorak42 can you help here?",
          "createdAt": "2023-08-31T19:31:21Z",
          "updatedAt": "2023-08-31T19:31:21Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed by #471 ",
          "createdAt": "2023-09-05T21:06:36Z",
          "updatedAt": "2023-09-05T21:06:36Z"
        }
      ]
    },
    {
      "number": 440,
      "id": "I_kwDODeTEy85vn8a8",
      "title": "Issuer identification using an \"authority\"",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/440",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "tfpauly"
      ],
      "labels": [
        "auth-scheme"
      ],
      "body": "> \"issuer_name\" is an ASCII string that identifies the issuer using the format of the authority portion of a URI as defined in Section 3.2 of [URI].\r\n\r\nThis is a little surprising to me, which suggests that it might need an explanation.\r\n\r\nI might even suggest that this is dangerous, in that it can include `userinfo`, which seems like it might be harmful in this context (though I can't exactly see why).\r\n\r\nWould a web origin [RFC6454] be a better choice?",
      "createdAt": "2023-08-30T01:42:19Z",
      "updatedAt": "2023-09-12T19:16:52Z",
      "closedAt": "2023-09-12T19:16:52Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "The origin definition in RFC6454 seems like it would include the scheme as well, which is not quite what we want here. The goal is to have it be the hostname+(optional port). Agreed that we don't want a `userinfo`, although maybe we can just spell that out.",
          "createdAt": "2023-08-31T17:38:50Z",
          "updatedAt": "2023-08-31T17:38:50Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I know that origin is a change, but host+port isn't really meaningful without some sort of framework under which it operates.  I think that you are OK with limiting this to HTTPS, so the scheme is probably redundant.  That leaves one question: does a bare host mean any HTTPS endpoint on any port on that host, or is it the service on port 443?",
          "createdAt": "2023-08-31T23:53:38Z",
          "updatedAt": "2023-08-31T23:53:38Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "Indeed, the scheme for HTTPS is implied/redundant here. And yes, the bare host means port 443. Good stuff to clarify.",
          "createdAt": "2023-09-01T02:31:23Z",
          "updatedAt": "2023-09-01T02:31:23Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "Proposal is to explain more clearly these bounds (no user info, implied 443 if no port) and define after the list of issuer_name and origin_info parameters, that both refer to.",
          "createdAt": "2023-09-05T20:15:14Z",
          "updatedAt": "2023-09-05T20:15:14Z"
        }
      ]
    },
    {
      "number": 441,
      "id": "I_kwDODeTEy85vn922",
      "title": "Explain the functioning of origins in the challenge",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/441",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [
        "auth-scheme",
        "editorial"
      ],
      "body": "There is an optional list of origins in the challenge, but the purpose of the field is not explained.\r\n\r\nIf I were to guess, the requirement to include the current server in the list means that clients are expected to retrieve tokens for that set of origins and -- if they receive extra -- use those tokens if challenged by any of the listed origins (provided that the other parameters match).\r\n\r\nSection 2.1.2 almost says this, but there seems to be a missing link somewhere.",
      "createdAt": "2023-08-30T01:47:58Z",
      "updatedAt": "2023-09-12T19:59:26Z",
      "closedAt": "2023-09-12T19:59:26Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "Section 1 does describe this:\r\n```\r\nIn addition to working with different token issuance protocols, this scheme optionally supports use of tokens that are associated with origin-chosen contexts and specific origin names.\r\n```\r\n\r\nThe reason is to let you have a particular token work across origins, or be specific to origins (when you've prefetched a bunch).",
          "createdAt": "2023-08-31T17:41:24Z",
          "updatedAt": "2023-08-31T17:41:24Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "That really doesn't say what the semantics are.  That is, the expectation is that the same challenge will be issued by all of the listed origins AND that the client can use a token retrieved for any of those challenges to answer any other challenge, without adhering to its normal rules about restricting information to a single origin.\r\n\r\nNote that the use of the word \"origin\" is hugely confusing in this context, so you will need to be more careful than I am being.",
          "createdAt": "2023-08-31T23:55:45Z",
          "updatedAt": "2023-08-31T23:55:45Z"
        }
      ]
    },
    {
      "number": 442,
      "id": "I_kwDODeTEy85vn-TF",
      "title": "Replayed challenges",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/442",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "> This challenge value MUST be unique for every 401 HTTP response to prevent replay attacks.\r\n\r\nI don't understand how this could be necessary.  Worse, the content of the challenge is all static information, so I don't see how this could be unique, at least without completely destroying the caching property that seems to be so important to the privacy properties that the spec seeks to obtain.",
      "createdAt": "2023-08-30T01:50:26Z",
      "updatedAt": "2023-09-05T10:22:35Z",
      "closedAt": "2023-09-05T10:22:35Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "Yeah I don't think this is needed.",
          "createdAt": "2023-08-31T17:43:09Z",
          "updatedAt": "2023-08-31T17:43:09Z"
        }
      ]
    },
    {
      "number": 443,
      "id": "I_kwDODeTEy85vn_TA",
      "title": "Ignoring WWW-Authenticate",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/443",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "> Clients MAY ignore the challenge, e.g., because the token-key is invalid or otherwise untrusted.\r\n\r\nThis text seems unnecessary.\r\n\r\nHints (like `WWW-Authenticate`) that a client might use to make a later, successful request are not directives to clients.  They are only hints that a server offers, typically alongside a rejection like a 401 status response.  The client can act on those hints automatically in a way that might allow them to get a successful response, but if the hint is malformed, then there is nothing that the client can do.  I'd strike this.",
      "createdAt": "2023-08-30T01:54:38Z",
      "updatedAt": "2023-09-05T10:30:18Z",
      "closedAt": "2023-09-05T10:30:18Z",
      "comments": []
    },
    {
      "number": 444,
      "id": "I_kwDODeTEy85vn_oS",
      "title": "Ignoring unknown parameters",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/444",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "tfpauly"
      ],
      "labels": [
        "auth-scheme"
      ],
      "body": "> Clients SHOULD ignore unknown parameters in challenges, except if otherwise specified by issuance protocols.\r\n\r\nThis should be a \"MUST\".  Otherwise, we're in a soup of unknown client handling procedures for extensions.\r\n\r\nIt seems unlikely that extensions will be necessary, but you have not provided any other means of extending, so making this one work is probably wise.",
      "createdAt": "2023-08-30T01:56:27Z",
      "updatedAt": "2023-09-05T21:07:03Z",
      "closedAt": "2023-09-05T21:07:03Z",
      "comments": []
    },
    {
      "number": 445,
      "id": "I_kwDODeTEy85voCO9",
      "title": "Choosing between multiple challenges",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/445",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "tfpauly"
      ],
      "labels": [
        "auth-scheme"
      ],
      "body": "> it is possible for the WWW-Authenticate header field to include multiple challenges ([RFC9110], Section 11.6.1). This allows the origin to indicate support for different token types, issuers, or to include multiple redemption contexts\r\n\r\nHow would a client decide between two challenges?  There are a lot of considerations:\r\n\r\n1. algorithm choice - this might be obvious, because the client has a preference or because they do not support an offered algorithm\r\n2. origin scope - should a client prefer to offer tokens with broader or narrower scope (no origin, a set of origins, a narrower set of origins)\r\n3. redemption context - should a client prefer challenges without this value?  how does the client choose between two different opaque values?\r\n\r\nIt's possible that the right answer for some clients would be to prefer broad over narrow, with algorithm preference being secondary.\r\n\r\nFinally, and somewhat critically, if the challenge varies, the client does not replay that challenge when it makes a new request.  That means that the server needs to remember the challenges it issues, potentially globally, so choosing highly variable challenges means that the server needs to maintain a store for those challenges (or their hashes).  I think that this is the point of Section 2.1.1, but that is not clear from how that is constructed.",
      "createdAt": "2023-08-30T02:11:21Z",
      "updatedAt": "2023-09-08T15:14:46Z",
      "closedAt": "2023-09-08T15:14:46Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "My take is that the choice is one of policy, i.e., not something that the specification needs to be opinionated about. That said, we could add text which describes considerations for making one choice or another, which might be what you're trying to suggest. \r\n\r\nAs for the server piece, yes, the origin needs to remember or be able to reconstruct all possible challenges. This is in 2.1.1. I don't see how it's not clear, so could you please elaborate a bit?",
          "createdAt": "2023-09-05T16:31:41Z",
          "updatedAt": "2023-09-05T16:32:26Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Yes, all I was suggesting is that some guidance would be useful.\r\n\r\nAs for the server piece, I can't see anything in 2.1.1 that covers the need to be able to reconstruct/remember the redemption context.  For instance, it says:\r\n\r\n> This value can be a unique per-request nonce, constructed from 32 freshly generated random bytes. \r\n\r\nBut it doesn't say that the server needs to be able to recover this value from a hash.",
          "createdAt": "2023-09-05T23:01:46Z",
          "updatedAt": "2023-09-05T23:01:46Z"
        }
      ]
    },
    {
      "number": 446,
      "id": "I_kwDODeTEy85voCa3",
      "title": "Binding requests to connections",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/446",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "> For example, double spend state for unique, per-request redemption contexts only needs to exist within the scope of the request connection or session. \r\n\r\nThis is probably not a good idea.  Clients will expect to be able to make a new request over a new connection and will probably not request fresh issuance if a request with a token fails.\r\n\r\n(Also, \"request connection\" is not a concept in HTTP.)",
      "createdAt": "2023-08-30T02:12:26Z",
      "updatedAt": "2023-09-05T20:31:56Z",
      "closedAt": "2023-09-05T20:31:56Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Is this comment trying to say that it's OK to replay a token over the same connection? If so, I would agree with that, since linkability already exists at the connection layer. Addressing that point seems like an extension to #461, which we can do separately. But I don't think this issue is resolved by #465 as-is.",
          "createdAt": "2023-09-05T10:41:52Z",
          "updatedAt": "2023-09-05T10:44:19Z"
        }
      ]
    },
    {
      "number": 447,
      "id": "I_kwDODeTEy85voCvU",
      "title": "Variable Nid",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/447",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [],
      "body": "It seems like the size of the key identifier could be fixed in the specification, rather than have it be algorithm-specific.",
      "createdAt": "2023-08-30T02:14:15Z",
      "updatedAt": "2023-09-05T10:17:03Z",
      "closedAt": "2023-09-05T10:17:03Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "We may want to change it in the future, so I think keeping it as a variable makes most sense. Closing.",
          "createdAt": "2023-09-05T10:17:03Z",
          "updatedAt": "2023-09-05T10:17:03Z"
        }
      ]
    },
    {
      "number": 448,
      "id": "I_kwDODeTEy85voFQn",
      "title": "User interaction",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/448",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "tfpauly"
      ],
      "labels": [
        "auth-scheme"
      ],
      "body": "I have a lot to say about this section, but let's start with the big one:\r\n\r\n> Token challenges can be performed without explicit user involvement, depending on the issuance protocol.\r\n\r\nThat's at best misleading.  There are multiple factors that might cause a client to supply a token without user involvement, but the choice of protocol is not something that is relevant.  Sure, there might be cases where something makes user involvement necessary, but this is not the overriding concern.\r\n\r\nThe main concern is that the token carries information from one context to another and the Web generally tries to avoid that happening without very good reason.  In order to overcome that, most clients/user agents will want to ensure that a number of conditions are met.\r\n\r\nWe don't need to go into those conditions here, because this is an IETF specification.  In fact, most of this section doesn't belong in an IETF specification as it relates to decisions that web user agents might choose to make.  In other contexts, the considerations are different and so different constraints might be appropriate.  \r\n\r\nI'll go further and say that while this specification is clearly designed for the Web, it is not fit for that purpose.\r\n\r\nWhat this document needs is a section explaining how a client might choose to use tokens, what the risks involved are, and how those risks might be mitigated.  Some of that is probably already in the architecture document, but this document makes a lot of that quite concrete. A brief overview of the challenges that is backed by references to the architecture is probably worthwhile.",
      "createdAt": "2023-08-30T02:28:44Z",
      "updatedAt": "2023-09-14T05:55:05Z",
      "closedAt": "2023-09-08T15:14:47Z",
      "comments": [
        {
          "author": "paulwouters",
          "authorAssociation": "NONE",
          "body": "@martinthomson does this resolve your issue ?",
          "createdAt": "2023-09-14T00:59:47Z",
          "updatedAt": "2023-09-14T00:59:47Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Yes, this is much better.",
          "createdAt": "2023-09-14T05:55:05Z",
          "updatedAt": "2023-09-14T05:55:05Z"
        }
      ]
    },
    {
      "number": 449,
      "id": "I_kwDODeTEy85voFYv",
      "title": "WWW-Authenticate is not a request-response protocol",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/449",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "tfpauly"
      ],
      "labels": [],
      "body": "There are a few instances where this assumes that clients will automate their response to receiving a challenge.  That's not really how HTTP authentication works.",
      "createdAt": "2023-08-30T02:29:25Z",
      "updatedAt": "2023-09-12T19:58:19Z",
      "closedAt": "2023-09-12T19:58:19Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "@martinthomson can you clarify which instances you're referring to? While it's true that it's not a request-response protocol, it's also not a case where we need user interaction in order to re-issue a request, so it is some cases \"automated\".",
          "createdAt": "2023-08-31T18:08:14Z",
          "updatedAt": "2023-08-31T18:08:14Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "Improved some of this in #477. Instead of talking about response, this now talks about:\r\n\r\n> Upon receipt of a challenge, a client validates the TokenChallenge structure\r\n>  before taking any action, such as fetching a new token or redeeming a token\r\n>  in a new request.\r\n\r\nCan add some more",
          "createdAt": "2023-09-12T19:48:14Z",
          "updatedAt": "2023-09-12T19:48:14Z"
        }
      ]
    },
    {
      "number": 450,
      "id": "I_kwDODeTEy85voFpT",
      "title": "Greasing",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/450",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "tfpauly"
      ],
      "labels": [
        "auth-scheme"
      ],
      "body": "> To mitigate the risk of deployments becoming dependent on tokens, clients and origins SHOULD grease their behavior unless explicitly configured not to. In particular, clients SHOULD ignore token challenges with some non-zero probability. From the origin's perspective, ignoring a token challenge is indistinguishable from the issuance protocol failing for arbitrary reasons (excluding what can be inferred from latency between the client and origin interaction). Likewise, origins SHOULD randomly choose to not challenge clients for tokens with some non-zero probability. Moreover, origins SHOULD include random token types, from the Reserved list of \"greased\" types (defined in Section 5.2), with some non-zero probability.\r\n\r\nI have no idea how to implement greasing here.  Ignoring a challenge is easy, but you can't just ignore the fact that your request failed with a 401 status code.",
      "createdAt": "2023-08-30T02:30:57Z",
      "updatedAt": "2023-09-08T15:14:47Z",
      "closedAt": "2023-09-08T15:14:47Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "I'm not sure what the confusion here is. The greasing cases we list are:\r\n- Client chooses to not authenticate with a token\r\n- Origin chooses to not send a token challenge\r\n- Origin chooses to send greased token type challenges\r\n\r\nCan you be more specific about what change you'd like to see?",
          "createdAt": "2023-08-31T18:09:58Z",
          "updatedAt": "2023-08-31T18:09:58Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Choosing not to do something is not greasing, it's doing nothing.  Greasing using bogus token types is greasing, but that is not what this seems to be aiming at.\r\n\r\n(FWIW, This is one of your examples of where the text vaguely treats a challenge as a request and the subsequent request as a response to that.)",
          "createdAt": "2023-09-01T00:54:31Z",
          "updatedAt": "2023-09-01T00:54:31Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "This is where we need better terminology for behavioral variation. We can change that line to say \"add random variance to their behavior\" instead of grease.",
          "createdAt": "2023-09-01T02:32:34Z",
          "updatedAt": "2023-09-01T02:32:34Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "That wasn't my point.  My point was that a client has a goal in mind.  Refusing to supply a token sounds fine in isolation. However, if the result is that they get a 4xx rather than a 2xx, they will go and get the token.  Because the 2xx is what they want, not some abstract concept like greasing.",
          "createdAt": "2023-09-01T04:52:43Z",
          "updatedAt": "2023-09-01T04:52:43Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Perhaps the issue is that we call \"doing nothing\" and \"sending random values\" greasing, when what @martinthomson seems to be suggesting is that the latter is the only thing that's actually greasing (according to the ill-defined meaning we have)? I don't think we need to be strict about the meaning of grease.",
          "createdAt": "2023-09-05T15:07:18Z",
          "updatedAt": "2023-09-05T15:07:18Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "I was suggesting calling it varying behavior, but Martin is pointing out that a client may not want to behave differently for a 4xx and just not authenticate.\r\n\r\nIn practice, for captcha-interaction cases, I think it actually is totally fine to then ignore these \u2014 in these cases, a client may not always be able to present a token anyway, so it has to be able to handle not having a token. Certainly other deployment use cases may be different.",
          "createdAt": "2023-09-05T15:39:57Z",
          "updatedAt": "2023-09-05T15:39:57Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "So, \"origins SHOULD include random token types\" is definitely grease, per the usual definition. The other stuff can be called \"varying behavior\" or whatever, I don't feel strongly. Clients that choose to just not authenticate given a 4xx and challenge are still adhering to the text, so I don't get the problem here.",
          "createdAt": "2023-09-05T15:58:08Z",
          "updatedAt": "2023-09-05T15:58:08Z"
        }
      ]
    },
    {
      "number": 451,
      "id": "I_kwDODeTEy85voiu1",
      "title": "Consider not including a private use range",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/451",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "RFC 6648 carries a useful lesson about how private use can leak into wider deployment.  That suggests that people looking to use stuff for private reasons can just pick a random codepoint to use.  There is still a risk of collision if it escapes into the wild, but that is more likely the case if they are forced to draw from a smaller \"private use\" range.",
      "createdAt": "2023-08-30T04:53:37Z",
      "updatedAt": "2023-09-05T20:48:57Z",
      "closedAt": "2023-09-05T20:48:57Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "I'm personally ambivalent here. We can discuss more.",
          "createdAt": "2023-08-31T18:10:52Z",
          "updatedAt": "2023-08-31T18:10:52Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "I also do not care about this bike shed. @smhendrickson would you be OK choosing a random codepoint?",
          "createdAt": "2023-09-05T10:48:31Z",
          "updatedAt": "2023-09-05T10:48:31Z"
        },
        {
          "author": "smhendrickson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "That works for me. I'll send a PR for auth scheme to remove this, and update the [extensions draft](https://chris-wood.github.io/draft-wood-privacypass-auth-scheme-extensions/draft-wood-privacypass-auth-scheme-extensions.html#section-5-5) to match.",
          "createdAt": "2023-09-05T15:43:21Z",
          "updatedAt": "2023-09-05T15:43:21Z"
        }
      ]
    },
    {
      "number": 452,
      "id": "I_kwDODeTEy85vokHl",
      "title": "Consider loosening registration requirements",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/452",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "> Designated experts need to ensure that the token type is sufficiently clearly defined to be used for both token issuance and redemption, and meets the common security and privacy requirements for issuance protocols defined in Section 3.2 of [ARCHITECTURE].\r\n\r\nThis is pretty stringent, which might discourage people from registering.  \r\n\r\nMore seriously, it places a lot of responsibility on experts.  The expectation this will create is that experts have performed this review.  I don't think that an expert should be asked to shoulder that burden.",
      "createdAt": "2023-08-30T05:00:06Z",
      "updatedAt": "2023-09-06T14:13:54Z",
      "closedAt": "2023-09-06T14:13:54Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "I don't think that's the expectation. Rather, it's the expectation that the experts confirm this review has been done, be it by themselves or, for example, in the Privacy Pass working group or elsewhere. ",
          "createdAt": "2023-09-05T15:59:22Z",
          "updatedAt": "2023-09-05T15:59:22Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Either way, it's not a responsibility I would want to impose on experts.  Tommy's revision splits the difference well enough.",
          "createdAt": "2023-09-05T22:58:40Z",
          "updatedAt": "2023-09-05T22:58:40Z"
        }
      ]
    },
    {
      "number": 453,
      "id": "I_kwDODeTEy85volKC",
      "title": "Structure the security considerations",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/453",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [
        "auth-scheme",
        "editorial"
      ],
      "body": "There are several different concepts here.  Add section headings for the following:\r\n\r\n* Replay attacks (integrity)\r\n* Token exhaustion attacks (DoS)\r\n* Timing correlation attacks (privacy)\r\n* Cross-context recognition",
      "createdAt": "2023-08-30T05:04:47Z",
      "updatedAt": "2023-09-12T19:20:28Z",
      "closedAt": "2023-09-12T19:20:28Z",
      "comments": []
    },
    {
      "number": 454,
      "id": "I_kwDODeTEy85volbu",
      "title": "Replay attacks via 0-RTT",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/454",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [
        "auth-scheme",
        "editorial"
      ],
      "body": "There is no inherent problem with a replay of a token.  A problem only exists if replay occurs and the request that it authorizes has some sort of unwanted side effect.  That's not a problem with this document, so I'm not sure that you need to cite that document.",
      "createdAt": "2023-08-30T05:06:00Z",
      "updatedAt": "2023-09-12T19:55:28Z",
      "closedAt": "2023-09-12T19:55:28Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "This seems like it would be resolved by an extension to #461. In particular, text that suggests replaying in an otherwise linkable context (like the same connection) is fine. @tfpauly I suggest we just update #461 with something like this.",
          "createdAt": "2023-09-05T10:50:01Z",
          "updatedAt": "2023-09-05T10:50:25Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "Yes, I agree we can have a simple change here, but let's do a new PR for that since it requires touching different parts of the doc too.",
          "createdAt": "2023-09-05T15:03:43Z",
          "updatedAt": "2023-09-05T15:03:43Z"
        }
      ]
    },
    {
      "number": 455,
      "id": "I_kwDODeTEy85vollp",
      "title": "RFC 4086",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/455",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "> All random values in the challenge and token MUST be generated using a cryptographically secure source of randomness.\r\n\r\nWorth citing 4086 here, methinks.",
      "createdAt": "2023-08-30T05:06:42Z",
      "updatedAt": "2023-09-05T10:22:59Z",
      "closedAt": "2023-09-05T10:22:58Z",
      "comments": []
    },
    {
      "number": 456,
      "id": "I_kwDODeTEy85vomfW",
      "title": "Flush on network change",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/456",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "> As discussed in Section 2.1, clients SHOULD discard any context-bound tokens upon flushing cookies or **changing networks**, to prevent an origin using the redemption context state as a cookie to recognize clients.\r\n\r\n(Emphasis mine) I missed this first time around, but the requirement to drop state when changing networks is not necessary in many cases.  The reason to drop state is if you believe that the tokens would allow you to be recognized in a way that is unwelcome.\r\n\r\nMost browser clients will retain site-specific state when they move, so this requirement would be pointless.",
      "createdAt": "2023-08-30T05:10:39Z",
      "updatedAt": "2023-09-05T10:29:32Z",
      "closedAt": "2023-09-05T10:29:32Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "If the client does not retain site-specific state, and the context can be related to the client IP, etc, then it should flush the state. We can clarify that this is only useful when other state isn't being shared.",
          "createdAt": "2023-08-31T18:15:47Z",
          "updatedAt": "2023-08-31T18:15:47Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "The server is the one that cares about the binding to IP in that case.  The client doesn't really know or care.  Maybe it will try to access the resource with a token that won't be accepted, which is fine because the server can just ask for another token.",
          "createdAt": "2023-09-01T00:55:41Z",
          "updatedAt": "2023-09-01T00:55:41Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "If the redemption context was specific to a particular client IP, or client subnet, etc, the server could try to trial-verify tokens with a different client IP or subnet than the one the client is using to see if the token was generated using a challenge from a previous context on a particular IP \u2014 essentially, it lets a server guess if the client had a previous context, and verify it using the token.",
          "createdAt": "2023-09-01T02:34:45Z",
          "updatedAt": "2023-09-01T02:34:45Z"
        }
      ]
    },
    {
      "number": 457,
      "id": "I_kwDODeTEy85vooQ9",
      "title": "\"augment\"-ing time",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/457",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "> Depending on the \"max-age\" token challenge parameter, clients MAY try to augment the time between getting challenged then redeeming a token so as to make this sort of linkability more difficult.\r\n\r\nI'm not sure what meaning of \"augment\" is intended here.",
      "createdAt": "2023-08-30T05:18:42Z",
      "updatedAt": "2023-08-31T18:27:14Z",
      "closedAt": "2023-08-31T18:27:14Z",
      "comments": []
    },
    {
      "number": 458,
      "id": "I_kwDODeTEy85vop5g",
      "title": "Timing correlation is worse than this makes out",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/458",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "The following conditions, if all met, produces pretty poor privacy properties:\r\n\r\n* A client that automatically executes issuance in response to receiving a 401 with a TokenChallenge.\r\n* An attester that is exposed to identifying information about the client.\r\n* An attester or joint attester/issuer that is willing to collude with the origin.\r\n\r\nIn cases where the origin, attester, and issuer are the same entity, this is particularly bad.\r\n\r\nIt seems like the only defense is to inject [delays](https://github.com/ietf-wg-privacypass/base-drafts/issues/457).  These have to be added both before and after requesting issuance.  For that to work, it is necessary to understand the rate at which that attester is being used so that the anonymity set size can be tuned.\r\n\r\nThere's a version of this where the attester is trusted not to collude with origins.  With a distinct issuer, the attester might shield the issuer from any identifying information.  If there is a joint attester/issuer, then having that entity be more trusted and distinct from the origin also works.  Either model -- the former of which being what Apple uses -- can address this concern.\r\n\r\n(Also, this text should point to Section 6.3 of the architecture, not the whole doc.)",
      "createdAt": "2023-08-30T05:25:30Z",
      "updatedAt": "2023-10-02T21:53:10Z",
      "closedAt": "2023-10-02T21:53:10Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "I largely think this should be addressed by improving the architecture references, since it's a property of the architecture more than a specific way to instantiate challenge/redemption. But we can emphasize this more.",
          "createdAt": "2023-08-31T19:34:26Z",
          "updatedAt": "2023-08-31T19:34:26Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "I don't see anything we can meaningfully do here beyond citing the architecture document. Yes, timing attacks will exist and they will never really go away. This is not unique to Privacy Pass. I think we have to accept that the low latency or on-demand nature of the protocol will mean they exist. That seems like something we could further clarify in the architecture document, and then as Tommy suggests just lean more heavily on that from the auth-scheme document.",
          "createdAt": "2023-09-05T10:46:47Z",
          "updatedAt": "2023-09-05T10:46:47Z"
        }
      ]
    },
    {
      "number": 472,
      "id": "I_kwDODeTEy85wN_2O",
      "title": "Clarifications in Token Type Registry definitions",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/472",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [
        "auth-scheme"
      ],
      "body": "(1) p 15, sec 5.2.  Token Type Registry\r\n\r\n  *  Private Metadata: A Y/N value indicating if the output tokens can\r\n     contain private metadata.\r\n\r\nThis is the first time that some of these fields (e.g., Publicly Verifiable,\r\nPublic/Private Metadata) have been introduced.  Does the document need any\r\nadditional prose to describe what they and how they are used?  The current text\r\nfeels somewhat terse as a description in a standard track document.\r\n\r\n(2) p 17, sec 5.2.  Token Type Registry\r\n\r\n  *  Nid: N/A\r\n\r\nShoudln't Nk and Nid default to 0 rather than 'N/A'?  This comment also applies\r\nto the text above the greased values, or otherwise (at a stretch) it could\r\narguably be interpreted as putting is randomly sized Nk and Nid fields\r\ncontaining random data.",
      "createdAt": "2023-09-05T21:03:27Z",
      "updatedAt": "2023-09-12T20:18:01Z",
      "closedAt": "2023-09-12T20:18:01Z",
      "comments": []
    },
    {
      "number": 473,
      "id": "I_kwDODeTEy85wOAGk",
      "title": "Reference architecture normatively",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/473",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "tfpauly"
      ],
      "labels": [
        "auth-scheme"
      ],
      "body": "(3) p 18, sec 6.2.  Informative References\r\n\r\n  [ARCHITECTURE]\r\n             Davidson, A., Iyengar, J., and C. A. Wood, \"The Privacy\r\n             Pass Architecture\", Work in Progress, Internet-Draft,\r\n             draft-ietf-privacypass-architecture-13, 15 June 2023,\r\n             <https://datatracker.ietf.org/doc/html/draft-ietf-\r\n             privacypass-architecture-13>.\r\n\r\nIt seems strange to me that the architecture reference isn't normative.  I.e.,\r\nI would think that reading aspects of the architecture is a prerequisite to\r\nfully understanding the protocol aspects defined here.",
      "createdAt": "2023-09-05T21:04:02Z",
      "updatedAt": "2023-09-08T15:14:57Z",
      "closedAt": "2023-09-08T15:14:57Z",
      "comments": []
    },
    {
      "number": 498,
      "id": "I_kwDODeTEy85zGO3J",
      "title": "auth: suggestion about Token structure.",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/498",
      "state": "CLOSED",
      "author": "armfazh",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Define `Token` structure based on the `AutenticationInput` struct.\r\n\r\nIn Section 2.2.1 and 2.2.3,\r\n**Before:**\r\n```c\r\nstruct {\r\n    uint16_t token_type;\r\n    uint8_t nonce[32];\r\n    uint8_t challenge_digest[32];\r\n    uint8_t token_key_id[Nid];\r\n    uint8_t authenticator[Nk];\r\n} Token;\r\n\r\nstruct {\r\n    uint16_t token_type;\r\n    uint8_t nonce[32];\r\n    uint8_t challenge_digest[32];\r\n    uint8_t token_key_id[Nid];\r\n} AuthenticatorInput;\r\n```\r\n\r\n**After:**\r\n```c\r\nstruct {\r\n    uint16_t token_type;\r\n    uint8_t nonce[32];\r\n    uint8_t challenge_digest[32];\r\n    uint8_t token_key_id[Nid];\r\n} AuthenticatorInput;\r\n\r\nstruct {\r\n    AuthenticatorInput authInput;\r\n    uint8_t authenticator[Nk];\r\n} Token;\r\n```\r\n\r\n",
      "createdAt": "2023-10-06T22:41:46Z",
      "updatedAt": "2023-10-07T03:09:10Z",
      "closedAt": "2023-10-07T03:09:10Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "While they do share that part, the authenticator input is really just covering the first parts of the token. From a naming perspective, switching this would be backwards to the meaning. The token is the main thing that matters, and the authenticator input is the derived structure. ",
          "createdAt": "2023-10-07T03:09:01Z",
          "updatedAt": "2023-10-07T03:09:01Z"
        }
      ]
    },
    {
      "number": 499,
      "id": "I_kwDODeTEy85zRnvO",
      "title": "protocol: include ProofRandomScalar to VOPRF test vectors",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/499",
      "state": "OPEN",
      "author": "armfazh",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "The token response is composed of a zk-proof, which is a randomized procedure.\r\n\r\n```c\r\nstruct {\r\n   uint8_t evaluate_msg[Ne];\r\n   uint8_t evaluate_proof[Ns+Ns];\r\n} TokenResponse;\r\n```\r\n\r\nIn order to reproduce the test vectors for VOPRF, the `ProofRandomScalar` should be included as part of the test vectors, just like the [VOPRF draft](https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-voprf-21#name-test-vectors) does:\r\n\r\n> \"Proof\": The serialized Proof output from GenerateProof() composed of two serialized scalar values, each Ns bytes long. Only present for VOPRF and POPRF test vectors.\r\n> \r\n> \"ProofRandomScalar\": The random scalar r computed in GenerateProof(), a serialized scalar of Ns bytes long. Only present for VOPRF and POPRF test vectors.\r\n\r\nThe proof attached in the current `TokenResponse` field can be tested as a valid proof; but the generation of the proof cannot be reproduced without the random scalar.\r\n",
      "createdAt": "2023-10-09T23:26:31Z",
      "updatedAt": "2024-01-29T16:04:59Z",
      "closedAt": null,
      "comments": [
        {
          "author": "heathdutton",
          "authorAssociation": "NONE",
          "body": "Agreed. This will make the test vectors more complete and align them with the existing standards in VOPRF and POPRF test vectors, facilitating better interoperability and consistency across implementations.\r\n\r\n```\r\nstruct {\r\n   uint8_t evaluate_msg[Ne];\r\n   uint8_t evaluate_proof[Ns+Ns];\r\n   uint8_t proof_random_scalar[Ns];\r\n} TokenResponse;\r\n```",
          "createdAt": "2024-01-29T16:04:59Z",
          "updatedAt": "2024-01-29T16:04:59Z"
        }
      ]
    },
    {
      "number": 501,
      "id": "I_kwDODeTEy850F1gL",
      "title": "Nit: Clarify responding to multiple token challenges",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/501",
      "state": "CLOSED",
      "author": "smhendrickson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "[Section 2.1.2.1](https://www.ietf.org/archive/id/draft-ietf-privacypass-auth-scheme-14.html#name-sending-multiple-token-chal) indicates clearly that multiple challenges can be present, but is less clear on how a client is supposed to respond. I think it would be best to add a sentence indicating that the protocol expects clients to respond to exactly one challenge, if it chooses to respond:\r\n\r\n```diff\r\n...\r\nIf the origin has a preference for one challenge over another (for example, if one uses a token type that is faster to verify), it can sort it to be first in the list of challenges as a hint to the client.\r\n+If clients choose to respond, clients should satisfy exactly one of the challenges presented.\r\n```\r\n\r\nI can raise this as a PR once agreement is reached.",
      "createdAt": "2023-10-17T15:21:18Z",
      "updatedAt": "2023-10-19T03:06:55Z",
      "closedAt": "2023-10-19T03:06:55Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "Section 3.2 does cover this a bit:\r\n\r\nhttps://ietf-wg-privacypass.github.io/base-drafts/draft-ietf-privacypass-auth-scheme.html#name-choosing-between-multiple-c\r\n\r\nDo you think we need more there?",
          "createdAt": "2023-10-17T21:05:34Z",
          "updatedAt": "2023-10-17T21:05:34Z"
        },
        {
          "author": "smhendrickson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Agreed this is a better home for the addition. I'll send a PR.",
          "createdAt": "2023-10-19T00:09:24Z",
          "updatedAt": "2023-10-19T00:09:24Z"
        }
      ]
    },
    {
      "number": 504,
      "id": "I_kwDODeTEy856Blfh",
      "title": "Typos in protocol document",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/issues/504",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [
        "protocol"
      ],
      "body": "From a reviewer of the protocol doc:\r\n\r\n> https://datatracker.ietf.org/doc/draft-ietf-privacypass-protocol/\r\n> Section 6.3 has probably two errors:\r\n> First one:\r\n> authenticator =\r\n>      Finalize(pkI, nonce, blind_sig, blind_inv)\r\n> I think that instead of nonce we need to pass token_input to the Finalize:\r\n>    token_input = concat(0x0002, // Token type field is 2 bytes long\r\n>                         nonce,\r\n>                         challenge_digest,\r\n>                         token_key_id)\r\n> Otherwise the Finalize function fails to verify the signature.\r\n> Second:\r\n> The Token.nonce value is that which was sampled in Section 5.1\r\n> I think this one should be:\r\n> ... sampled in Section 6.1",
      "createdAt": "2023-12-18T18:45:51Z",
      "updatedAt": "2023-12-19T16:47:37Z",
      "closedAt": "2023-12-19T16:47:37Z",
      "comments": []
    }
  ],
  "pulls": [
    {
      "number": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0MzgyNDY0NDMx",
      "title": "Initial HTTP API Draft",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/1",
      "state": "MERGED",
      "author": "dvorak42",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This is a basic draft for the HTTP API, it still needs work to bring it into sync with the architecture doc (and to fill out some of the registry/storage sections).\r\n\r\nWill keep on iterating on it, but wanted to make the PR so people can start looking at it/responding to it, and also to figure out which bits should be in this doc versus the other PrivacyPass docs.",
      "createdAt": "2020-03-02T15:57:39Z",
      "updatedAt": "2020-03-04T17:35:24Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "master",
      "baseRefOid": "a8e6ed43f5863a50ad36949c4d9cae3a1e315d74",
      "headRepository": "dvorak42/privacy-pass-ietf",
      "headRefName": "master",
      "headRefOid": "46cb0fb4756d625b7bb07da9e5e904c24aa01327",
      "closedAt": "2020-03-04T17:35:24Z",
      "mergedAt": "2020-03-04T17:35:24Z",
      "mergedBy": "alxdavids",
      "mergeCommit": {
        "oid": "43e828c9f5535d81cd1a316972ebf3ee689f37e5"
      },
      "comments": [
        {
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "body": "Added a section about the global registry.",
          "createdAt": "2020-03-03T15:55:01Z",
          "updatedAt": "2020-03-03T15:55:01Z"
        },
        {
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "body": "Yeah, I think there's now enough meet on this to merge it as is, and I can make additional PRs to update it/clean it up. ",
          "createdAt": "2020-03-04T14:58:16Z",
          "updatedAt": "2020-03-04T14:58:16Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3OTE3NDgx",
          "commit": {
            "abbreviatedOid": "45855ed"
          },
          "author": "alxdavids",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "This LGTM so far, I just have a few small comments. We can probably look at merging this once we have more detail about the commitment registry.",
          "createdAt": "2020-03-03T11:56:18Z",
          "updatedAt": "2020-03-03T11:59:51Z",
          "comments": [
            {
              "originalPosition": 68,
              "body": "This is probably hangover from draft-privacy-pass, but we should remove mention of VOPRFs to be as generic as possible",
              "createdAt": "2020-03-03T11:56:18Z",
              "updatedAt": "2020-03-04T14:57:22Z"
            },
            {
              "originalPosition": 242,
              "body": "I guess that this should be `i_data`?",
              "createdAt": "2020-03-03T11:57:05Z",
              "updatedAt": "2020-03-04T14:57:22Z"
            },
            {
              "originalPosition": 263,
              "body": "This is slightly different to how the SERVER_ISSUE interface currently operates, as it this interface that calls CLIENT_ISSUE_FINISH. Perhaps the interface should be modified so that SERVER_ISSUE returns the response to CLIENT_ISSUE_GEN to match what you have here?",
              "createdAt": "2020-03-03T11:57:41Z",
              "updatedAt": "2020-03-04T14:57:22Z"
            },
            {
              "originalPosition": 287,
              "body": "Eventually we may want to be more prescriptive about how additional_data is formed as it is the HMAC input. This document may be the best place to do that.",
              "createdAt": "2020-03-03T11:58:10Z",
              "updatedAt": "2020-03-04T14:57:22Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4MDQyMTMz",
          "commit": {
            "abbreviatedOid": "45855ed"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-03-03T14:49:58Z",
          "updatedAt": "2020-03-03T14:49:58Z",
          "comments": [
            {
              "originalPosition": 263,
              "body": "Yeah, was going to comment on the architecture doc, in that for some of the interfaces its a bit odd that they internally call back and forth between the server and client, which makes it hard to integrate at the communication between the two.\r\n\r\nOne potential change is making them return these intermediate responses which are then used as inputs to the matching side, and optionally having interfaces that encapsulate the whole flow, so that APIs built on top of them can integrate between the individual steps rather than needing to redefine how they internally call back and forth.\r\n\r\n",
              "createdAt": "2020-03-03T14:49:58Z",
              "updatedAt": "2020-03-04T14:57:22Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4MDQ0NjU5",
          "commit": {
            "abbreviatedOid": "45855ed"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-03-03T14:52:46Z",
          "updatedAt": "2020-03-03T14:52:46Z",
          "comments": [
            {
              "originalPosition": 68,
              "body": "Ah yeah, synced with a previous copy of the protocol doc, updated.",
              "createdAt": "2020-03-03T14:52:46Z",
              "updatedAt": "2020-03-04T14:57:22Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4MDU3MjU4",
          "commit": {
            "abbreviatedOid": "45855ed"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-03-03T15:06:59Z",
          "updatedAt": "2020-03-03T15:07:00Z",
          "comments": [
            {
              "originalPosition": 287,
              "body": "Specific construction for the delegated case is down below, but I'm not sure whether the client (UA) which originally has the tokens should be doing PP_Redeem and then passing the result of that to whatever website wants to redeem a token (allowing the UA to set the aux additional_data, so that it can't be reused elsewhere), or whether the website should be taking the raw token and doing its own PP_Redeem with whatever it wants to insert in aux.",
              "createdAt": "2020-03-03T15:06:59Z",
              "updatedAt": "2020-03-04T14:57:22Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4NTkyMjIy",
          "commit": {
            "abbreviatedOid": "9ad2faf"
          },
          "author": "alxdavids",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-03-04T08:47:20Z",
          "updatedAt": "2020-03-04T08:47:20Z",
          "comments": [
            {
              "originalPosition": 263,
              "body": "Yeah rewriting the interfaces to return those values synchronously to the calling interface makes sense. I'll write up the change.",
              "createdAt": "2020-03-04T08:47:20Z",
              "updatedAt": "2020-03-04T14:57:22Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4NTk4NDE2",
          "commit": {
            "abbreviatedOid": "9ad2faf"
          },
          "author": "alxdavids",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "A few comments. I think this currently serves as a good starting point. I plan to send some calls for participation around soon, linking to the WIP docs that we currently have. If you would be happy with it, then we could merge this draft in its current state and then continue to iterate on top of it?",
          "createdAt": "2020-03-04T08:57:17Z",
          "updatedAt": "2020-03-04T09:01:40Z",
          "comments": [
            {
              "originalPosition": 70,
              "body": "Can also provide a link to the architecture document here for more details.",
              "createdAt": "2020-03-04T08:57:18Z",
              "updatedAt": "2020-03-04T14:57:22Z"
            },
            {
              "originalPosition": 56,
              "body": "This isn't present in the architecture document but I think it's a good idea to make verification easier. I guess the proof is updated every time the commitment is updated?",
              "createdAt": "2020-03-04T08:59:03Z",
              "updatedAt": "2020-03-04T14:57:22Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4ODQ2OTk1",
          "commit": {
            "abbreviatedOid": "9ad2faf"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-03-04T14:57:04Z",
          "updatedAt": "2020-03-04T14:57:05Z",
          "comments": [
            {
              "originalPosition": 56,
              "body": "Yeah, wasn't sure if using a system that supports an inclusion proof should be part of the main architecture doc or for specific instantiations of Privacy Pass. But yeah, you'd get a new inclusion proof when you do the commitment (probably some update to the GLOBAL_CONFIG_UPDATE interface to support this).",
              "createdAt": "2020-03-04T14:57:04Z",
              "updatedAt": "2020-03-04T14:57:22Z"
            }
          ]
        }
      ]
    },
    {
      "number": 4,
      "id": "MDExOlB1bGxSZXF1ZXN0Mzg0ODQ4MzMy",
      "title": "Fixing draft formatting",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/4",
      "state": "MERGED",
      "author": "dvorak42",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-03-06T14:25:05Z",
      "updatedAt": "2020-03-06T14:58:46Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "master",
      "baseRefOid": "19581ad111f8feb11d3e3f9a1762d29830aa86e0",
      "headRepository": "dvorak42/privacy-pass-ietf",
      "headRefName": "master",
      "headRefOid": "8048b7a35d1071283ebd7213b8af0ff95bb8427a",
      "closedAt": "2020-03-06T14:58:46Z",
      "mergedAt": "2020-03-06T14:58:46Z",
      "mergedBy": "alxdavids",
      "mergeCommit": {
        "oid": "e006b84a4b5ddd9bcd9e939a25dbb0d8ee775692"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwMzg0MTQy",
          "commit": {
            "abbreviatedOid": "8048b7a"
          },
          "author": "alxdavids",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-03-06T14:58:40Z",
          "updatedAt": "2020-03-06T14:58:40Z",
          "comments": []
        }
      ]
    },
    {
      "number": 6,
      "id": "MDExOlB1bGxSZXF1ZXN0Mzg5NDI5NDM1",
      "title": "Fix #5: reorg repo",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/6",
      "state": "MERGED",
      "author": "alxdavids",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Borrow repo structure from https://github.com/quicwg/base-drafts/ as per #5.",
      "createdAt": "2020-03-16T18:37:42Z",
      "updatedAt": "2022-06-22T14:03:24Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "master",
      "baseRefOid": "7be7f305a4620f5c15814d46f90ea9d2b6ddd7be",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "alxdavids/repo-structure",
      "headRefOid": "69984936b26be5710f7551296202b209dd5be73f",
      "closedAt": "2020-03-16T18:38:49Z",
      "mergedAt": "2020-03-16T18:38:49Z",
      "mergedBy": "alxdavids",
      "mergeCommit": {
        "oid": "caa104150bd8c21f8347a301db271560a3095b62"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 7,
      "id": "MDExOlB1bGxSZXF1ZXN0MzkzMzg4MTUz",
      "title": "Solve some consistency problems",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/7",
      "state": "MERGED",
      "author": "claucece",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-03-25T05:12:43Z",
      "updatedAt": "2020-05-11T12:58:46Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "master",
      "baseRefOid": "d220f993d1a2c6dbca62eb8f70af52918ea2080b",
      "headRepository": "claucece/privacy-pass-ietf",
      "headRefName": "master",
      "headRefOid": "39e4a985ab716eb7bfa28792d194fc9242089fec",
      "closedAt": "2020-05-11T12:58:46Z",
      "mergedAt": "2020-05-11T12:58:46Z",
      "mergedBy": "alxdavids",
      "mergeCommit": {
        "oid": "e17c69355a47bd4354d6ea23bf54cf43edec9bca"
      },
      "comments": [
        {
          "author": "claucece",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I just fixed them all ;)",
          "createdAt": "2020-04-14T07:49:01Z",
          "updatedAt": "2020-04-14T07:49:14Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyMTg4NjUx",
          "commit": {
            "abbreviatedOid": "ed5352d"
          },
          "author": "alxdavids",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "Thanks for these changes, just a few amendments from my side.",
          "createdAt": "2020-04-13T14:43:18Z",
          "updatedAt": "2020-04-13T14:49:04Z",
          "comments": [
            {
              "originalPosition": 97,
              "body": "I think the word `encounter` can be removed here.",
              "createdAt": "2020-04-13T14:43:18Z",
              "updatedAt": "2020-04-14T07:45:49Z"
            },
            {
              "originalPosition": 134,
              "body": "`received from a server`?",
              "createdAt": "2020-04-13T14:43:50Z",
              "updatedAt": "2020-04-14T07:45:49Z"
            },
            {
              "originalPosition": 392,
              "body": "requires minor rewording, perhaps: \r\n```\r\nError occurred when a client attempts to verify the proof...\r\n```",
              "createdAt": "2020-04-13T14:46:21Z",
              "updatedAt": "2020-04-14T07:45:49Z"
            },
            {
              "originalPosition": 419,
              "body": "`perform` -> `performs`",
              "createdAt": "2020-04-13T14:46:40Z",
              "updatedAt": "2020-04-14T07:45:49Z"
            },
            {
              "originalPosition": 421,
              "body": "`doing is` -> `doing this is`\r\n(already existing typo)",
              "createdAt": "2020-04-13T14:46:58Z",
              "updatedAt": "2020-04-14T07:45:49Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5MTQ2NTE2",
          "commit": {
            "abbreviatedOid": "39e4a98"
          },
          "author": "alxdavids",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-05-11T12:58:35Z",
          "updatedAt": "2020-05-11T12:58:35Z",
          "comments": []
        }
      ]
    },
    {
      "number": 12,
      "id": "MDExOlB1bGxSZXF1ZXN0NDA2NzI1NzIz",
      "title": "Updated charter text",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/12",
      "state": "MERGED",
      "author": "alxdavids",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Changes account for feedback received during (and following) virtual BoF session, including:\r\n\r\n- Scoping protocol to application-layer.\r\n- Considering the case of transferable tokens only.\r\n- Specific points to consider potential consolidation/trust issues.\r\n- Not committing to a specific set of documents.\r\n- Ensuring that Clients can verify Issuer key material.\r\n",
      "createdAt": "2020-04-21T14:51:04Z",
      "updatedAt": "2022-06-22T14:03:25Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "master",
      "baseRefOid": "d220f993d1a2c6dbca62eb8f70af52918ea2080b",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "post-bof-charter",
      "headRefOid": "24e38dc0f0130cb7cf5fb72704c3ca1b1e408c4c",
      "closedAt": "2020-05-14T16:51:43Z",
      "mergedAt": "2020-05-14T16:51:43Z",
      "mergedBy": "alxdavids",
      "mergeCommit": {
        "oid": "bf7e53ab85bd05f6a776dde433eda0b2417a39f9"
      },
      "comments": [
        {
          "author": "alxdavids",
          "authorAssociation": "COLLABORATOR",
          "body": "Going to merge this now so that we have a working up-to-date version. Further changes can be made in a new PR.",
          "createdAt": "2020-05-14T16:51:38Z",
          "updatedAt": "2020-05-14T16:51:38Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 19,
      "id": "MDExOlB1bGxSZXF1ZXN0NDEzNzkxMjky",
      "title": "Rename some fields and fix some nits",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/19",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Rename IssuanceMessage and RedemptionMessage to IssuanceRequest and RedemptionRequest, respectively. Rename SecretKey to PrivateKey. Change `max_evals` to an integer value, rather than opaque vector.\r\n\r\nI also removed company-specific information, which is not really relevant for the document. (That's useful information, but not appropriate for a standards document, I think.)\r\n\r\ncc @alxdavids @dvorak42 ",
      "createdAt": "2020-05-05T22:50:40Z",
      "updatedAt": "2020-05-20T07:46:52Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "master",
      "baseRefOid": "8f89861020ed4d73c2337c1a1905f2fee7714d69",
      "headRepository": "chris-wood/privacy-pass-ietf",
      "headRefName": "caw/nits-and-renaming",
      "headRefOid": "fc8e56ed4af68ca7cbb5f612709f4fd3dcaf1c41",
      "closedAt": "2020-05-20T07:46:52Z",
      "mergedAt": "2020-05-20T07:46:52Z",
      "mergedBy": "alxdavids",
      "mergeCommit": {
        "oid": "040a82989fdb41ce30d810a4c6e4a951a8cc08ad"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0MjU4NTU2",
          "commit": {
            "abbreviatedOid": "79dfa07"
          },
          "author": "alxdavids",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Looks good, just one thing that needs to change I think.",
          "createdAt": "2020-05-19T09:18:44Z",
          "updatedAt": "2020-05-19T09:20:07Z",
          "comments": [
            {
              "originalPosition": 46,
              "body": "```suggestion\r\n\"initialisation\", produces the global server configuration that is\r\n```",
              "createdAt": "2020-05-19T09:18:45Z",
              "updatedAt": "2020-05-19T14:57:55Z"
            },
            {
              "originalPosition": 46,
              "body": "also, existing typo on my part, but maybe it should be initialization?",
              "createdAt": "2020-05-19T09:19:21Z",
              "updatedAt": "2020-05-19T14:57:55Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1MDczMzMw",
          "commit": {
            "abbreviatedOid": "fc8e56e"
          },
          "author": "alxdavids",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-05-20T07:46:30Z",
          "updatedAt": "2020-05-20T07:46:30Z",
          "comments": []
        }
      ]
    },
    {
      "number": 25,
      "id": "MDExOlB1bGxSZXF1ZXN0NDE4Njk5MTQ1",
      "title": "Rename SecretKey to PrivateKey for consistency with PublicKey.",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/25",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Addresses #17.",
      "createdAt": "2020-05-15T16:54:24Z",
      "updatedAt": "2020-05-15T17:04:44Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "master",
      "baseRefOid": "bf7e53ab85bd05f6a776dde433eda0b2417a39f9",
      "headRepository": "chris-wood/privacy-pass-ietf",
      "headRefName": "caw/rename-secret-key",
      "headRefOid": "41b58addda7ff968aa2c6477ea5eb2de668e1b27",
      "closedAt": "2020-05-15T17:04:44Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": []
    },
    {
      "number": 26,
      "id": "MDExOlB1bGxSZXF1ZXN0NDE4NzAzNDc3",
      "title": "Namespace all PrivacyPass routines.",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/26",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "These functions do not need the \"PP_\" namespace prefix as it's implied\r\nfrom the specification. I also removed underscores in favor of normal\r\ncamel case notation.",
      "createdAt": "2020-05-15T17:04:18Z",
      "updatedAt": "2020-05-19T09:17:12Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "master",
      "baseRefOid": "bf7e53ab85bd05f6a776dde433eda0b2417a39f9",
      "headRepository": "chris-wood/privacy-pass-ietf",
      "headRefName": "caw/namespace",
      "headRefOid": "72fc5e13e44915cc9fa1eccf890eacb75530817b",
      "closedAt": "2020-05-19T09:17:11Z",
      "mergedAt": "2020-05-19T09:17:11Z",
      "mergedBy": "alxdavids",
      "mergeCommit": {
        "oid": "8f89861020ed4d73c2337c1a1905f2fee7714d69"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0MjU3MDk1",
          "commit": {
            "abbreviatedOid": "72fc5e1"
          },
          "author": "alxdavids",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-05-19T09:16:52Z",
          "updatedAt": "2020-05-19T09:16:52Z",
          "comments": []
        }
      ]
    },
    {
      "number": 27,
      "id": "MDExOlB1bGxSZXF1ZXN0NDE5OTg2NTE1",
      "title": "Updates based on 17 May comments",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/27",
      "state": "MERGED",
      "author": "alxdavids",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-05-19T09:14:48Z",
      "updatedAt": "2022-06-22T14:03:25Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "master",
      "baseRefOid": "bf7e53ab85bd05f6a776dde433eda0b2417a39f9",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "alxdavids/charter-updates",
      "headRefOid": "b7c19fe867913815103ab1bf80f274ea1aba1e22",
      "closedAt": "2020-05-20T07:43:49Z",
      "mergedAt": "2020-05-20T07:43:49Z",
      "mergedBy": "alxdavids",
      "mergeCommit": {
        "oid": "037ea9c67c2dbcd0d746eb34d57037796a571260"
      },
      "comments": [
        {
          "author": "jsalowey",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I think we should merge this change.",
          "createdAt": "2020-05-20T03:56:51Z",
          "updatedAt": "2020-05-20T03:56:51Z"
        },
        {
          "author": "alxdavids",
          "authorAssociation": "COLLABORATOR",
          "body": "Merging the change following approvals from the chairs on list.",
          "createdAt": "2020-05-20T07:43:44Z",
          "updatedAt": "2020-05-20T07:43:44Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 28,
      "id": "MDExOlB1bGxSZXF1ZXN0NDIwOTYyMDQx",
      "title": "Another take at unlinkability.",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/28",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "And fix some nits.",
      "createdAt": "2020-05-20T19:00:57Z",
      "updatedAt": "2020-05-25T16:11:05Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "master",
      "baseRefOid": "040a82989fdb41ce30d810a4c6e4a951a8cc08ad",
      "headRepository": "chris-wood/privacy-pass-ietf",
      "headRefName": "caw/charter-nits",
      "headRefOid": "5558d353bc2fc642cab456052aa0c07f018ca01b",
      "closedAt": "2020-05-25T16:11:05Z",
      "mergedAt": "2020-05-25T16:11:05Z",
      "mergedBy": "alxdavids",
      "mergeCommit": {
        "oid": "6a3120e1c6662dc722302fa95010477d349477dc"
      },
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "> Hmm, I think this still needs to say something about keys.\r\n\r\nYeah, good point! ",
          "createdAt": "2020-05-20T19:26:47Z",
          "updatedAt": "2020-05-20T19:26:47Z"
        },
        {
          "author": "alxdavids",
          "authorAssociation": "COLLABORATOR",
          "body": "I think this clarification is more specific than the previous wording so I'm happy to add it.",
          "createdAt": "2020-05-25T16:10:59Z",
          "updatedAt": "2020-05-25T16:10:59Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1NjM4MzU0",
          "commit": {
            "abbreviatedOid": "5e246aa"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Hmm, I think this still needs to say something about keys.\r\n\r\nIf the issuer issues some users M tokens under key 1 and others L under key 2, you want to say that you can't link them beyond 1/N (where N is either M or L, depending on which key the tokens were issued to).",
          "createdAt": "2020-05-20T19:11:31Z",
          "updatedAt": "2020-05-20T19:15:42Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "*Issuer",
              "createdAt": "2020-05-20T19:11:32Z",
              "updatedAt": "2020-05-20T19:26:46Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3Nzk2Njg5",
          "commit": {
            "abbreviatedOid": "5558d35"
          },
          "author": "alxdavids",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-05-25T16:09:40Z",
          "updatedAt": "2020-05-25T16:09:40Z",
          "comments": []
        }
      ]
    },
    {
      "number": 29,
      "id": "MDExOlB1bGxSZXF1ZXN0NDM0NzEwNzA1",
      "title": "Synchronize charter with datatracker 00-00",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/29",
      "state": "MERGED",
      "author": "kaduk",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Before entering the draft charter into the datatracker for IESG+IAB evaluation (https://datatracker.ietf.org/doc/charter-ietf-privacypass/), I made a few edits.  Let's get them in place here as well, to avoid skew in what people see if they look in different places.\r\n\r\nI also put a bit of commentary on the motivation for the changes, at https://github.com/kaduk/privacy-pass-ietf/pull/1/files",
      "createdAt": "2020-06-15T18:47:19Z",
      "updatedAt": "2020-06-17T10:17:32Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "master",
      "baseRefOid": "2f726b08a6a11aac1ae5703663abd1e6d49c9dc9",
      "headRepository": "kaduk/privacy-pass-ietf",
      "headRefName": "master",
      "headRefOid": "6a33a911fcdb8ec93dad7b48e42d5b6e0065e717",
      "closedAt": "2020-06-17T10:17:32Z",
      "mergedAt": "2020-06-17T10:17:32Z",
      "mergedBy": "alxdavids",
      "mergeCommit": {
        "oid": "b0d666b8fac64a745763f811bfd92a16c5be4576"
      },
      "comments": [
        {
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "body": "+1, looks good.",
          "createdAt": "2020-06-16T14:04:54Z",
          "updatedAt": "2020-06-16T14:04:54Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxMzM4MjQ0",
          "commit": {
            "abbreviatedOid": "6a33a91"
          },
          "author": "alxdavids",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "\ud83d\udc4d \r\ncc @dvorak42 to get another review before I merge.",
          "createdAt": "2020-06-16T09:46:41Z",
          "updatedAt": "2020-06-16T09:46:41Z",
          "comments": []
        }
      ]
    },
    {
      "number": 31,
      "id": "MDExOlB1bGxSZXF1ZXN0NDQxMzQxNTg2",
      "title": "Update protocol doc for new VOPRF API (fixes #30)",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/31",
      "state": "MERGED",
      "author": "alxdavids",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "- Rewrite parts of intro\r\n- Clean up protocol overview\r\n- Rewrite API functions\r\n- Rewrite protocol instantiation\r\n- Update ciphersuites\r\n\r\n(This is a big change, apologies!)\r\n\r\ncc @dvorak42, @chris-wood for reviews (will also notify mailing list).",
      "createdAt": "2020-06-29T11:32:27Z",
      "updatedAt": "2022-06-22T14:03:26Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "master",
      "baseRefOid": "b0d666b8fac64a745763f811bfd92a16c5be4576",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "alxdavids/update-protocol",
      "headRefOid": "39988e8de6c1a74abde07af954df8613a69169b8",
      "closedAt": "2020-07-07T17:28:03Z",
      "mergedAt": "2020-07-07T17:28:03Z",
      "mergedBy": "alxdavids",
      "mergeCommit": {
        "oid": "dcfe294925fdd8d5f0817d0053eddbfc0b8009d3"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxMTcyNjQ3",
          "commit": {
            "abbreviatedOid": "35e1d3d"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2020-07-01T20:24:25Z",
          "updatedAt": "2020-07-06T19:09:53Z",
          "comments": [
            {
              "originalPosition": 30,
              "body": "Should this be @dvorak42?",
              "createdAt": "2020-07-01T20:24:25Z",
              "updatedAt": "2020-07-07T10:13:45Z"
            },
            {
              "originalPosition": 1033,
              "body": "```suggestion\r\nThe RECOMMENDED Issuer ciphersuites are as follows:\r\n```",
              "createdAt": "2020-07-06T19:08:01Z",
              "updatedAt": "2020-07-07T10:13:45Z"
            },
            {
              "originalPosition": 1033,
              "body": "Probably one of them should be MTI too, right?",
              "createdAt": "2020-07-06T19:08:11Z",
              "updatedAt": "2020-07-07T10:13:45Z"
            },
            {
              "originalPosition": 1064,
              "body": "```suggestion\r\nstatic Diffie Hellman attacks. See {{I-D.irtf-cfrg-voprf}} for more details.\r\n```",
              "createdAt": "2020-07-06T19:08:27Z",
              "updatedAt": "2020-07-07T10:13:45Z"
            },
            {
              "originalPosition": 1118,
              "body": "As we removed the batch interface to Blind, this pseudocode probably needs to be updated.",
              "createdAt": "2020-07-06T19:08:54Z",
              "updatedAt": "2020-07-07T10:13:45Z"
            },
            {
              "originalPosition": 1175,
              "body": "Ditto here for the batch interface.",
              "createdAt": "2020-07-06T19:09:09Z",
              "updatedAt": "2020-07-07T10:13:45Z"
            },
            {
              "originalPosition": 1287,
              "body": "Where did \"OPRF2\" come from?",
              "createdAt": "2020-07-06T19:09:34Z",
              "updatedAt": "2020-07-07T10:13:45Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzNjcxODQ1",
          "commit": {
            "abbreviatedOid": "35e1d3d"
          },
          "author": "alxdavids",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-07-07T08:27:24Z",
          "updatedAt": "2020-07-07T08:31:08Z",
          "comments": [
            {
              "originalPosition": 1033,
              "body": "How is this usually specified?",
              "createdAt": "2020-07-07T08:27:24Z",
              "updatedAt": "2020-07-07T10:13:45Z"
            },
            {
              "originalPosition": 1175,
              "body": "Right, but if we have a batched proof then we'll need to evaluate it over all the evaluated elements at once. I don't think this is will be as easy as pushing it all into the for loop?",
              "createdAt": "2020-07-07T08:29:01Z",
              "updatedAt": "2020-07-07T10:13:45Z"
            },
            {
              "originalPosition": 1287,
              "body": "Due to OPRF ciphersuite with ID=0x0002. I could just call it by its full name, but I thought that it introduced naming redundancy?",
              "createdAt": "2020-07-07T08:29:53Z",
              "updatedAt": "2020-07-07T10:13:45Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0MDkwNDk2",
          "commit": {
            "abbreviatedOid": "39988e8"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-07-07T17:08:57Z",
          "updatedAt": "2020-07-07T17:08:57Z",
          "comments": []
        }
      ]
    },
    {
      "number": 32,
      "id": "MDExOlB1bGxSZXF1ZXN0NDQxMzQ1MTI0",
      "title": "Permit additional token metadata (fixes #11)",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/32",
      "state": "MERGED",
      "author": "alxdavids",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "- Add allowances in protocol doc for redemption metadata\r\n- Provide privacy analysis of including metadata to architecture doc\r\n- Update privacy parametrizations\r\n\r\ncc @dvorak42 @chris-wood @mmaker (I don't know everyone's github usernames, so feel free to add others who will be interested in reviewing).",
      "createdAt": "2020-06-29T11:37:45Z",
      "updatedAt": "2022-06-22T14:04:01Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "master",
      "baseRefOid": "dcfe294925fdd8d5f0817d0053eddbfc0b8009d3",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "alxdavids/metadata",
      "headRefOid": "abb6e73183265619f9266df11360fe82eeac8342",
      "closedAt": "2020-07-07T17:29:56Z",
      "mergedAt": "2020-07-07T17:29:56Z",
      "mergedBy": "alxdavids",
      "mergeCommit": {
        "oid": "057bb23552fea28152efd9b630b171de3651935d"
      },
      "comments": [
        {
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "body": "LGTM",
          "createdAt": "2020-07-06T19:15:37Z",
          "updatedAt": "2020-07-06T19:15:37Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5MzIzMjI1",
          "commit": {
            "abbreviatedOid": "63b11a3"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-06-29T16:44:25Z",
          "updatedAt": "2020-06-29T16:52:57Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "I'd leave this pointing at the WICG API (the explainer there and the spec, whenever I get around to actually publishing it) is probably the canonical for Trust Token.",
              "createdAt": "2020-06-29T16:44:25Z",
              "updatedAt": "2020-07-07T17:29:10Z"
            },
            {
              "originalPosition": 42,
              "body": "nit: Issuer",
              "createdAt": "2020-06-29T16:44:48Z",
              "updatedAt": "2020-07-07T17:29:10Z"
            },
            {
              "originalPosition": 127,
              "body": "The initial Trust Token experiment actually has log2(6) metadata bits (allowing 3 different keys to be configured at a time for public metadata and 1 bit of private metadata), though stricter allowed issuers per page limits than here. For the purpose of this spec, I'd guess keeping it at 1 metadata bit as an example, rather than using the amounts from Trust Token.",
              "createdAt": "2020-06-29T16:51:33Z",
              "updatedAt": "2020-07-07T17:29:10Z"
            },
            {
              "originalPosition": 24,
              "body": "You sort of get public metadata from the VOPRF construction by allowing for multiple issuance keys at a time. (which is also how it is handled in Trust Token currently)",
              "createdAt": "2020-06-29T16:52:52Z",
              "updatedAt": "2020-07-07T17:29:10Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzMzUwNjg3",
          "commit": {
            "abbreviatedOid": "7bd240a"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM. We\u2019ll need to work through the extensibility support for the metadata bit variant next.",
          "createdAt": "2020-07-06T19:28:43Z",
          "updatedAt": "2020-07-06T19:28:43Z",
          "comments": []
        }
      ]
    },
    {
      "number": 33,
      "id": "MDExOlB1bGxSZXF1ZXN0NDQxNDE3OTI0",
      "title": "Reinforce anonymity requirements and core use-cases",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/33",
      "state": "MERGED",
      "author": "alxdavids",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "- Add a motivating use-cases section to discuss Tor (#9)\r\n- Add a section to identify what we mean by anonymity (#10)\r\n- Replaced some usages of privacy with anonymity\r\n\r\ncc @chris-wood @dvorak42 @chelseakomlo for feedback",
      "createdAt": "2020-06-29T13:33:39Z",
      "updatedAt": "2022-06-22T14:04:02Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "master",
      "baseRefOid": "057bb23552fea28152efd9b630b171de3651935d",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "alxdavids/use-cases",
      "headRefOid": "91323daba8ae15924df0c5e1794387bf3641d3cd",
      "closedAt": "2020-07-08T09:52:03Z",
      "mergedAt": "2020-07-08T09:52:03Z",
      "mergedBy": "alxdavids",
      "mergeCommit": {
        "oid": "cd9585cb8deb06d02bcf61309bd65137e8e6922d"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5MjQzOTgw",
          "commit": {
            "abbreviatedOid": "b1602cf"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2020-06-29T15:11:57Z",
          "updatedAt": "2020-06-29T16:19:13Z",
          "comments": [
            {
              "originalPosition": 80,
              "body": "```suggestion\r\nsuch as Tor. In particular, the protocol allows clients to\r\n```\r\n\r\nI don't think a VPN is an anonymity-preserving tool.",
              "createdAt": "2020-06-29T15:11:57Z",
              "updatedAt": "2020-07-08T09:49:33Z"
            },
            {
              "originalPosition": 109,
              "body": "```suggestion\r\n  redeem more than `N` valid tokens.\r\n```",
              "createdAt": "2020-06-29T15:15:05Z",
              "updatedAt": "2020-07-08T09:49:33Z"
            },
            {
              "originalPosition": 91,
              "body": "```suggestion\r\nThe Privacy Pass protocol has a number of use cases in practice. \r\nSee {{DGSTV18}}, {{TrustTokenAPI}}, {{PrivateStorage}}, {{OpenPrivacy}}, \r\nand {{Brave}} for examples.\r\n```",
              "createdAt": "2020-06-29T16:14:57Z",
              "updatedAt": "2020-07-08T09:49:33Z"
            },
            {
              "originalPosition": 106,
              "body": "```suggestion\r\nWe also require that clients cannot forge tokens, as otherwise Privacy Pass would\r\nhave little value as an authorization protocol. This requirement is stated as follows.\r\n```",
              "createdAt": "2020-06-29T16:16:16Z",
              "updatedAt": "2020-07-08T09:49:33Z"
            },
            {
              "originalPosition": 103,
              "body": "Focusing on the clients may be overly generic. What if clients were de-anonymized by IP address, for example? Perhaps:\r\n\r\n```suggestion\r\n- A token issued by a server key and subsequently redeemed is indistinguishable from any other \r\n  token issued under the same key.\r\n```",
              "createdAt": "2020-06-29T16:18:32Z",
              "updatedAt": "2020-07-08T09:49:33Z"
            },
            {
              "originalPosition": 112,
              "body": "```suggestion\r\n{{sec-reqs}} elaborates on these protocol anonymity and security requirements.\r\n```",
              "createdAt": "2020-06-29T16:19:10Z",
              "updatedAt": "2020-07-08T09:49:33Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5MzMwOTA2",
          "commit": {
            "abbreviatedOid": "b1602cf"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-06-29T16:54:34Z",
          "updatedAt": "2020-06-29T16:57:54Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "Probably pointing at the WICG repo as the canonical one makes sense, though maybe point it at the web.dev post until I get around to updating the WICG with the spec.",
              "createdAt": "2020-06-29T16:54:34Z",
              "updatedAt": "2020-07-08T09:49:33Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyNDg0MjU0",
          "commit": {
            "abbreviatedOid": "b1602cf"
          },
          "author": "alxdavids",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-07-03T15:41:18Z",
          "updatedAt": "2020-07-03T15:41:18Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "I'll change it back, I think what is in the WICG repo works.",
              "createdAt": "2020-07-03T15:41:18Z",
              "updatedAt": "2020-07-08T09:49:33Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzNDQ5MDAx",
          "commit": {
            "abbreviatedOid": "c60ce8f"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-07-06T22:35:16Z",
          "updatedAt": "2020-07-06T22:41:06Z",
          "comments": [
            {
              "originalPosition": 80,
              "body": "```suggestion\r\nauthorization of Tor users. In particular, the protocol allows clients to reveal\r\n```",
              "createdAt": "2020-07-06T22:35:16Z",
              "updatedAt": "2020-07-08T09:49:33Z"
            },
            {
              "originalPosition": 86,
              "body": "```suggestion\r\nBeyond this use case, the Privacy Pass protocol has a number of use cases in practice. See\r\n```",
              "createdAt": "2020-07-06T22:38:25Z",
              "updatedAt": "2020-07-08T09:49:33Z"
            },
            {
              "originalPosition": 93,
              "body": "```suggestion\r\nPrivacy Pass provides anonymity-preserving authorization tokens for clients. \r\nThroughout this document, we use the terms\r\n```",
              "createdAt": "2020-07-06T22:39:00Z",
              "updatedAt": "2020-07-08T09:49:33Z"
            },
            {
              "originalPosition": 99,
              "body": "```suggestion\r\nsecurity guarantee of the protocol. Informally, this guarantee means that\r\nany token issued by a server key and subsequently redeemed is indistinguishable \r\nfrom any other token issued under the same key.\r\n```",
              "createdAt": "2020-07-06T22:40:02Z",
              "updatedAt": "2020-07-08T09:49:33Z"
            },
            {
              "originalPosition": 106,
              "body": "```suggestion\r\nPrivacy Pass also prohibits clients from forging tokens, as otherwise the protocol\r\nwould have little value as an authorization protocol. Informally, this means any client \r\nthat is issued `N` tokens under a given server key cannot redeem more than `N` valid \r\ntokens.\r\n```",
              "createdAt": "2020-07-06T22:41:02Z",
              "updatedAt": "2020-07-08T09:49:33Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzNDk5NTQ1",
          "commit": {
            "abbreviatedOid": "c60ce8f"
          },
          "author": "chelseakomlo",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "Looks good- overall I would recommend strengthening the intuition of what it means for tokens to be unlinkable (either in this document or where appropriate), as token unlinkability is the technique that achieves the end goal of Privacy Pass, which is indistinguishability of user access patterns to the server. ",
          "createdAt": "2020-07-07T01:18:51Z",
          "updatedAt": "2020-07-07T01:38:13Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "Somewhere in the document, it should specify that the anonymity guarantee of Privacy Pass assumes that client IP addresses are either 1) not monitored/stored by the server, even though the client has no mechanism to verify this (otherwise the server can trivially build a lookup table of client IP addresses to the tokens they have used), or 2) an underlying anonymity tool such as Tor is used to hide the client IP address from the server.  ",
              "createdAt": "2020-07-07T01:18:51Z",
              "updatedAt": "2020-07-08T09:49:33Z"
            },
            {
              "originalPosition": 99,
              "body": "Importantly, of course, this also requires that all clients are issued tokens under the same key for the same epoch when the key is valid (thereby actually ensuring the global anonymity set). ",
              "createdAt": "2020-07-07T01:27:12Z",
              "updatedAt": "2020-07-08T09:49:33Z"
            },
            {
              "originalPosition": 119,
              "body": "And of course that clients have a mechanism to verify their view of the Issuer public key is the same as all other clients.",
              "createdAt": "2020-07-07T01:30:17Z",
              "updatedAt": "2020-07-08T09:49:33Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzNzY0Njg1",
          "commit": {
            "abbreviatedOid": "7fbd61a"
          },
          "author": "alxdavids",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-07-07T10:30:48Z",
          "updatedAt": "2020-07-07T10:30:49Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "That's a good point, I've added a subsection to the assumptions we make on the Client as part of the ecosystem to discuss this.",
              "createdAt": "2020-07-07T10:30:48Z",
              "updatedAt": "2020-07-08T09:49:33Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzNzY0ODky",
          "commit": {
            "abbreviatedOid": "7fbd61a"
          },
          "author": "alxdavids",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-07-07T10:31:08Z",
          "updatedAt": "2020-07-07T10:31:08Z",
          "comments": [
            {
              "originalPosition": 119,
              "body": "Added a link to the discussion about this in the architecture doc.",
              "createdAt": "2020-07-07T10:31:08Z",
              "updatedAt": "2020-07-08T09:49:33Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0MTI3MTE0",
          "commit": {
            "abbreviatedOid": "4150b83"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-07-07T18:00:05Z",
          "updatedAt": "2020-07-07T18:00:06Z",
          "comments": [
            {
              "originalPosition": 34,
              "body": "```suggestion\r\n### Client identifying information {#client-ip}\r\n\r\nPrivacy properties of this protocol do not take into account other possibly identifying\r\ninformation available in an implementation, such as a client's IP address. Servers\r\nwhich monitor IP addresses may use this to track client redemption patterns over\r\ntime. Clients cannot check whether servers monitor such identifying information.\r\nThus, clients SHOULD minimize or remove identifying information where possible,\r\ne.g., by using anonymity-preserving tools such as Tor to interact with Servers.\r\n```",
              "createdAt": "2020-07-07T18:00:05Z",
              "updatedAt": "2020-07-08T09:49:33Z"
            }
          ]
        }
      ]
    },
    {
      "number": 35,
      "id": "MDExOlB1bGxSZXF1ZXN0NDQ0MTIzNTcx",
      "title": "Rework architecture document",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/35",
      "state": "MERGED",
      "author": "alxdavids",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "- Removes the interfaces that were previously used (put into HTTP API doc?)\r\n- Removes concrete key management framework in favour of general guidelines for key registry\r\n- Refer to server key pairs rather than configurations: mirrors changes in protocol doc.\r\n- Add public verifiability as a running mode\r\n- TODOs for sections not filled in yet.\r\n\r\ncc @chris-wood @dvorak42 : Probably some inconsistencies here, but this is what I currently have based on our prior conversations around key management advice. Let me know what you think.",
      "createdAt": "2020-07-03T16:04:58Z",
      "updatedAt": "2022-06-22T14:04:03Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "master",
      "baseRefOid": "cd9585cb8deb06d02bcf61309bd65137e8e6922d",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "alxdavids/arch-changes",
      "headRefOid": "c14b3464fa17723dd23f24d7b994069518aedaf2",
      "closedAt": "2020-07-09T10:13:26Z",
      "mergedAt": "2020-07-09T10:13:26Z",
      "mergedBy": "alxdavids",
      "mergeCommit": {
        "oid": "6cb05042b71d2e96dda09684b5bd61a5dadeb2cf"
      },
      "comments": [
        {
          "author": "alxdavids",
          "authorAssociation": "COLLABORATOR",
          "body": "I think this is probably ready for full reviews now, I've added some diagrams of the ecosystem and key management. They're pretty general so could maybe be a bit more specific.",
          "createdAt": "2020-07-07T13:07:41Z",
          "updatedAt": "2020-07-07T13:07:41Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzNDUyMzcw",
          "commit": {
            "abbreviatedOid": "1b111a2"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "First pass complete. Huge diff, but this is looking great! I very much like the removal of code from the architecture document. Some more figures will certainly help spell out the details more clearly.",
          "createdAt": "2020-07-06T22:44:31Z",
          "updatedAt": "2020-07-06T23:06:39Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "\u2764\ufe0f ",
              "createdAt": "2020-07-06T22:44:31Z",
              "updatedAt": "2020-07-08T10:02:41Z"
            },
            {
              "originalPosition": 84,
              "body": "```suggestion\r\n- How clients should evaluate Issuer trust relationships.\r\n- Security and privacy properties of the protocol.\r\n```",
              "createdAt": "2020-07-06T22:46:03Z",
              "updatedAt": "2020-07-08T10:01:53Z"
            },
            {
              "originalPosition": 172,
              "body": "I suspect this would contain, at a minimum, two clients and two issuers? What did you have in mind?",
              "createdAt": "2020-07-06T22:46:45Z",
              "updatedAt": "2020-07-08T10:01:53Z"
            },
            {
              "originalPosition": 219,
              "body": "We haven't defined \"monitored\" yet, right? Should we define or or use a different word?",
              "createdAt": "2020-07-06T22:47:26Z",
              "updatedAt": "2020-07-08T10:01:53Z"
            },
            {
              "originalPosition": 228,
              "body": "```suggestion\r\nto the protocol specification may allow public verification of tokens by \r\nentities which do not hold the secret Privacy Pass keying material. We highlight possible Client and\r\n```",
              "createdAt": "2020-07-06T22:49:51Z",
              "updatedAt": "2020-07-08T10:01:53Z"
            },
            {
              "originalPosition": 231,
              "body": "How do we enforce this availability requirement? Would it be better to simply say that servers have some unique identifier? (Also, how do we define \"globally\"?)",
              "createdAt": "2020-07-06T22:52:07Z",
              "updatedAt": "2020-07-08T10:01:53Z"
            },
            {
              "originalPosition": 819,
              "body": "```suggestion\r\nthat need to be satisfied for a key management system in a Privacy Pass ecosystem.\r\n```",
              "createdAt": "2020-07-06T22:52:51Z",
              "updatedAt": "2020-07-08T10:01:53Z"
            },
            {
              "originalPosition": 827,
              "body": "```suggestion\r\na registry and how it operates will be covered elsewhere.\r\n```",
              "createdAt": "2020-07-06T22:53:15Z",
              "updatedAt": "2020-07-08T10:01:53Z"
            },
            {
              "originalPosition": 825,
              "body": "```suggestion\r\noperating a public key registry in this document. Actual specification of such\r\n```",
              "createdAt": "2020-07-06T22:53:25Z",
              "updatedAt": "2020-07-08T10:01:53Z"
            },
            {
              "originalPosition": 838,
              "body": "We seem to flip flop between Server and Issuer. Should we pick one and be consistent with it?",
              "createdAt": "2020-07-06T22:53:46Z",
              "updatedAt": "2020-07-08T10:02:41Z"
            },
            {
              "originalPosition": 850,
              "body": "```suggestion\r\nIn particular, Server key material MUST be publicly available in a tamper-proof\r\ndata structure, which we refer to as a key registry. A registry must be globally \r\nconsistent. Clients using the same registry should coordinate in some way to \r\nensure they have a  consistent view of said registry. This can be done via gossiping\r\nor some other mechanism. The exact mechanism for this coordination will be described\r\nelsewhere. It is assumed there will be at least one such mechanism.\r\n```\r\n\r\n",
              "createdAt": "2020-07-06T22:57:06Z",
              "updatedAt": "2020-07-08T10:01:53Z"
            },
            {
              "originalPosition": 857,
              "body": "```suggestion\r\nIt is RECOMMENDED that each key registry is an append-only data structure, such as a Merkle Tree. \r\nThe key registry should be operated independently of any Issuer that publishes key material to the \r\nregistry. This ensures that any Client can make better judgements on whether to trust the registry \r\nand, transitively, each Server.\r\n```",
              "createdAt": "2020-07-06T22:58:14Z",
              "updatedAt": "2020-07-08T10:01:53Z"
            },
            {
              "originalPosition": 908,
              "body": "```suggestion\r\nissuing tokens at any given time. Servers may use two or more keys for redemption\r\nto allow Servers for seamless key rotation.\r\n```",
              "createdAt": "2020-07-06T22:59:38Z",
              "updatedAt": "2020-07-08T10:01:53Z"
            },
            {
              "originalPosition": 910,
              "body": "```suggestion\r\nKey rotations must be limited in frequency for similar reasons. See\r\n```",
              "createdAt": "2020-07-06T22:59:50Z",
              "updatedAt": "2020-07-08T10:01:53Z"
            },
            {
              "originalPosition": 917,
              "body": "```suggestion\r\nthis implies that only a single ciphersuite is allowed per issuance period. If\r\n```",
              "createdAt": "2020-07-06T23:00:21Z",
              "updatedAt": "2020-07-08T10:01:53Z"
            },
            {
              "originalPosition": 918,
              "body": "```suggestion\r\na Server wishes to change their ciphersuite, they MUST do so during a\r\n```",
              "createdAt": "2020-07-06T23:00:29Z",
              "updatedAt": "2020-07-08T10:01:53Z"
            },
            {
              "originalPosition": 921,
              "body": "I think we can axe this section, as it's covered by the text above.",
              "createdAt": "2020-07-06T23:01:07Z",
              "updatedAt": "2020-07-08T10:01:53Z"
            },
            {
              "originalPosition": 1017,
              "body": "nit:\r\n\r\n```suggestion\r\nactually processes issuance or redemption data. Finally, we also\r\n```",
              "createdAt": "2020-07-06T23:01:24Z",
              "updatedAt": "2020-07-08T10:01:53Z"
            },
            {
              "originalPosition": 1049,
              "body": "nit: Proxied-Verifier, maybe?",
              "createdAt": "2020-07-06T23:02:28Z",
              "updatedAt": "2020-07-08T10:01:53Z"
            },
            {
              "originalPosition": 1359,
              "body": "nit: bug in this sentence? \"that they only hold redemption tokens 4 Issuers\"",
              "createdAt": "2020-07-06T23:05:08Z",
              "updatedAt": "2020-07-08T10:01:53Z"
            },
            {
              "originalPosition": 1558,
              "body": "```suggestion\r\n[[OPEN ISSUE: explain potential and mitigations for Issuer centralization]]\r\n```",
              "createdAt": "2020-07-06T23:05:38Z",
              "updatedAt": "2020-07-08T10:01:53Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzNzcxMDI1",
          "commit": {
            "abbreviatedOid": "1b111a2"
          },
          "author": "alxdavids",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-07-07T10:40:44Z",
          "updatedAt": "2020-07-07T10:40:44Z",
          "comments": [
            {
              "originalPosition": 838,
              "body": "Yeah I agree, I'm not sure what the best path here is though. Perhaps we should just go with Server everywhere?",
              "createdAt": "2020-07-07T10:40:44Z",
              "updatedAt": "2020-07-08T10:02:41Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzNzkwODA3",
          "commit": {
            "abbreviatedOid": "80881c5"
          },
          "author": "alxdavids",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-07-07T11:12:26Z",
          "updatedAt": "2020-07-07T11:12:26Z",
          "comments": [
            {
              "originalPosition": 219,
              "body": "Changed to \"are publicly visible\"",
              "createdAt": "2020-07-07T11:12:26Z",
              "updatedAt": "2020-07-08T10:01:53Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzNzkzNDEz",
          "commit": {
            "abbreviatedOid": "80881c5"
          },
          "author": "alxdavids",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-07-07T11:16:41Z",
          "updatedAt": "2020-07-07T11:16:41Z",
          "comments": [
            {
              "originalPosition": 1049,
              "body": "Small conflict with abbreviation of public verifier. Would \"Delegated-Verifier\" work?",
              "createdAt": "2020-07-07T11:16:41Z",
              "updatedAt": "2020-07-08T10:01:53Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0MDgwNTY1",
          "commit": {
            "abbreviatedOid": "2d82fba"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-07-07T16:56:16Z",
          "updatedAt": "2020-07-07T16:56:16Z",
          "comments": [
            {
              "originalPosition": 38,
              "body": "```suggestion\r\nPrivacy Pass tokens from this Server. \r\n```",
              "createdAt": "2020-07-07T16:56:16Z",
              "updatedAt": "2020-07-08T10:01:53Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0MDg3MzQx",
          "commit": {
            "abbreviatedOid": "2d82fba"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-07-07T17:04:38Z",
          "updatedAt": "2020-07-07T17:04:40Z",
          "comments": [
            {
              "originalPosition": 95,
              "body": "```suggestion\r\n~~~\r\n+--------------------------------------------------------+\r\n|                                                        |\r\n| Ecosystem                            +---+             |\r\n|                                      | C |             |\r\n|  +--------------+ <------ pkS1 ----> +---+             |\r\n|  |  Registry 1  |                                      |\r\n|  ++-------------+ <-------------- pkS1 --------> +---+ |\r\n|   |                                              | C | |\r\n|   |   +--------------+ <--------- pkS3 --------> +---+ |\r\n|   |   |  Registry 2  |                                 |\r\n|  pkS1 +----^-------^-+ <--------- pkS2 --------> +---+ |\r\n|   |        |       |                             | C | |\r\n|   |       pkS2    pkS3                           +---+ |\r\n|   |        |       |                                   |\r\n|  ++---+  +-+--+  +-+--+                                |\r\n|  | S1 |  | S2 |  | S3 |                                |\r\n|  +----+  +----+  +----+                                |\r\n|                                                        |\r\n+--------------------------------------------------------+\r\n~~~\r\n```",
              "createdAt": "2020-07-07T17:04:38Z",
              "updatedAt": "2020-07-08T10:01:53Z"
            }
          ]
        }
      ]
    },
    {
      "number": 36,
      "id": "MDExOlB1bGxSZXF1ZXN0NDQ0ODg0ODU3",
      "title": "Protocol doc modifications after doing a full read-through",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/36",
      "state": "MERGED",
      "author": "alxdavids",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-07-06T16:37:12Z",
      "updatedAt": "2022-06-22T14:04:03Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "master",
      "baseRefOid": "6cb05042b71d2e96dda09684b5bd61a5dadeb2cf",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "alxdavids/protocol-mods",
      "headRefOid": "ed470e79bfe25f90b332ce337e48943549678060",
      "closedAt": "2020-07-09T10:19:52Z",
      "mergedAt": "2020-07-09T10:19:52Z",
      "mergedBy": "alxdavids",
      "mergeCommit": {
        "oid": "9a65207446f267ded879114d7e2750e2a79762d8"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzNDUxNzE3",
          "commit": {
            "abbreviatedOid": "d11fcf9"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "This is fine, though my suggestions in #33 will conflict if landed first.",
          "createdAt": "2020-07-06T22:42:42Z",
          "updatedAt": "2020-07-06T22:44:06Z",
          "comments": [
            {
              "originalPosition": 335,
              "body": "```suggestion\r\nServers SHOULD impose a hard ceiling on the number of\r\n```",
              "createdAt": "2020-07-06T22:42:42Z",
              "updatedAt": "2020-07-09T10:18:06Z"
            },
            {
              "originalPosition": 340,
              "body": "```suggestion\r\ntokens that can be issued in a single issuance phase to a Client. If\r\nthere is no limit, malicious clients could abuse this and cause excessive\r\ncomputation, leading to a Denial-of-Service attack.\r\n```",
              "createdAt": "2020-07-06T22:43:50Z",
              "updatedAt": "2020-07-09T10:18:06Z"
            }
          ]
        }
      ]
    },
    {
      "number": 37,
      "id": "MDExOlB1bGxSZXF1ZXN0NDQ1NDMzNjkx",
      "title": "Updates for HTTP API",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/37",
      "state": "MERGED",
      "author": "alxdavids",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "cc @dvorak42 for review. Mainly just removing the interfaces that were previously present and using the API functions from the protocol directly. I've also changed some of the wording around the key registry, and replaced client -> Client and server -> Server.\r\n\r\nLet me know if there is anything that you think I've missed.",
      "createdAt": "2020-07-07T14:00:33Z",
      "updatedAt": "2022-06-22T14:03:26Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "master",
      "baseRefOid": "b0d666b8fac64a745763f811bfd92a16c5be4576",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "alxdavids/http-api-update",
      "headRefOid": "3f22f29ce4c245f3a962376767fc25d1bcb330b3",
      "closedAt": "2020-07-07T16:58:37Z",
      "mergedAt": "2020-07-07T16:58:37Z",
      "mergedBy": "alxdavids",
      "mergeCommit": {
        "oid": "00e18a842eefe9568419616010f85656744e9dcd"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0MDMwNzIy",
          "commit": {
            "abbreviatedOid": "3f22f29"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-07-07T15:56:36Z",
          "updatedAt": "2020-07-07T15:56:36Z",
          "comments": []
        }
      ]
    },
    {
      "number": 38,
      "id": "MDExOlB1bGxSZXF1ZXN0NDQ3Mzk3Njc5",
      "title": "Common terminology across documents",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/38",
      "state": "MERGED",
      "author": "alxdavids",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "- Issuer -> Server\r\n- Decapitalize (client/server)\r\n- Message -> Request\r\n\r\ncc @chris-wood, @dvorak42 \r\n\r\nI think we should be in okay shape to submit new drafts following these changes.",
      "createdAt": "2020-07-10T11:55:45Z",
      "updatedAt": "2022-06-22T14:04:04Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "master",
      "baseRefOid": "9a65207446f267ded879114d7e2750e2a79762d8",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "alxdavids/consistent-wording",
      "headRefOid": "bb05056dd53f1e9884328af4ac8bb9478f4e81dc",
      "closedAt": "2020-07-10T14:59:52Z",
      "mergedAt": "2020-07-10T14:59:52Z",
      "mergedBy": "alxdavids",
      "mergeCommit": {
        "oid": "5fad78c77e02d6bbc848ed2154d8212f088dfb10"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2NDU4Mjc0",
          "commit": {
            "abbreviatedOid": "bb05056"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-07-10T14:41:30Z",
          "updatedAt": "2020-07-10T14:41:30Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2NDY5MDE1",
          "commit": {
            "abbreviatedOid": "bb05056"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-07-10T14:54:55Z",
          "updatedAt": "2020-07-10T14:54:55Z",
          "comments": []
        }
      ]
    },
    {
      "number": 41,
      "id": "MDExOlB1bGxSZXF1ZXN0NDQ3NTIxMzY1",
      "title": "Remove unnecessary key rotation section",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/41",
      "state": "MERGED",
      "author": "alxdavids",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "cc @dvorak42 @chris-wood ",
      "createdAt": "2020-07-10T16:04:14Z",
      "updatedAt": "2022-06-22T14:04:05Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "master",
      "baseRefOid": "5fad78c77e02d6bbc848ed2154d8212f088dfb10",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "alxdavids/small-edits",
      "headRefOid": "3d21868cd94f0930d242c17c0dfa60d6b75f4ad4",
      "closedAt": "2020-07-10T16:44:56Z",
      "mergedAt": "2020-07-10T16:44:56Z",
      "mergedBy": "alxdavids",
      "mergeCommit": {
        "oid": "a3e2e5307edebb819ce0509fe7608d82cb689df3"
      },
      "comments": [
        {
          "author": "alxdavids",
          "authorAssociation": "COLLABORATOR",
          "body": "> LGTM, 1 week might still be too small of a window for actively malicious servers, but I think that ties in to the open issue regarding malicious servers rather than the generic key rotation considerations.\r\n\r\nYeah, I agree. Something to bring up for discussion.",
          "createdAt": "2020-07-10T16:44:48Z",
          "updatedAt": "2020-07-10T16:44:48Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2NTI2NjAx",
          "commit": {
            "abbreviatedOid": "3d21868"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM, 1 week might still be too small of a window for actively malicious servers, but I think that ties in to the open issue regarding malicious servers rather than the generic key rotation considerations.",
          "createdAt": "2020-07-10T16:12:51Z",
          "updatedAt": "2020-07-10T16:12:51Z",
          "comments": []
        }
      ]
    },
    {
      "number": 43,
      "id": "MDExOlB1bGxSZXF1ZXN0NDQ4MTU3NTM2",
      "title": "Small changes for release-01",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/43",
      "state": "MERGED",
      "author": "alxdavids",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-07-13T10:15:06Z",
      "updatedAt": "2022-06-22T14:04:07Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "master",
      "baseRefOid": "a3e2e5307edebb819ce0509fe7608d82cb689df3",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "alxdavids/release-01",
      "headRefOid": "72f462b1f5f6208cbdea616ff552345e1170339f",
      "closedAt": "2020-10-16T07:47:05Z",
      "mergedAt": "2020-10-16T07:47:05Z",
      "mergedBy": "alxdavids",
      "mergeCommit": {
        "oid": "ead20a2bbd26aaedf1b2d3c63b565d6935a952f5"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 54,
      "id": "MDExOlB1bGxSZXF1ZXN0NTQ4Mzk1ODUx",
      "title": "Add Armando as a co-author",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/54",
      "state": "MERGED",
      "author": "armfazh",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Add Armando as a co-author",
      "createdAt": "2021-01-04T18:35:02Z",
      "updatedAt": "2021-01-05T10:19:30Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "master",
      "baseRefOid": "ead20a2bbd26aaedf1b2d3c63b565d6935a952f5",
      "headRepository": "armfazh/base-drafts",
      "headRefName": "patch-1",
      "headRefOid": "bec65575999cc11d620f86bd0633fa7590c6e9fb",
      "closedAt": "2021-01-05T10:19:30Z",
      "mergedAt": "2021-01-05T10:19:30Z",
      "mergedBy": "alxdavids",
      "mergeCommit": {
        "oid": "8aed93d50e0e709302e1b4ace204996c46f88ef8"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 55,
      "id": "MDExOlB1bGxSZXF1ZXN0NTQ4NTk0NzY5",
      "title": "Add Sof\u00eda Celi as author",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/55",
      "state": "MERGED",
      "author": "claucece",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-01-05T02:37:04Z",
      "updatedAt": "2021-01-05T10:24:09Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "master",
      "baseRefOid": "8aed93d50e0e709302e1b4ace204996c46f88ef8",
      "headRepository": "claucece/privacy-pass-ietf",
      "headRefName": "master",
      "headRefOid": "62eda1cb00110682e14c26e3d687c553f5c18b4b",
      "closedAt": "2021-01-05T10:23:02Z",
      "mergedAt": "2021-01-05T10:23:02Z",
      "mergedBy": "alxdavids",
      "mergeCommit": {
        "oid": "715ed91498a3aaa034fe5892d588a669b36d9c3c"
      },
      "comments": [
        {
          "author": "claucece",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Thank you @alxdavids !",
          "createdAt": "2021-01-05T10:24:08Z",
          "updatedAt": "2021-01-05T10:24:08Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxNjcyNDI0",
          "commit": {
            "abbreviatedOid": "62eda1c"
          },
          "author": "alxdavids",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Just resolved conflicts and alphabetised authors",
          "createdAt": "2021-01-05T10:22:56Z",
          "updatedAt": "2021-01-05T10:22:56Z",
          "comments": []
        }
      ]
    },
    {
      "number": 56,
      "id": "MDExOlB1bGxSZXF1ZXN0NTQ4ODg1MTUw",
      "title": "Rename drafts for adoption into WG",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/56",
      "state": "MERGED",
      "author": "alxdavids",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "- Also update CONTRIBUTING.md with correct links",
      "createdAt": "2021-01-05T10:41:03Z",
      "updatedAt": "2022-06-22T14:04:07Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "master",
      "baseRefOid": "715ed91498a3aaa034fe5892d588a669b36d9c3c",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "alxdavids/rename-drafts",
      "headRefOid": "cfcfe45ef5df21bac0c0b8287939cecc9444b03f",
      "closedAt": "2021-01-05T16:05:13Z",
      "mergedAt": "2021-01-05T16:05:13Z",
      "mergedBy": "bemasc",
      "mergeCommit": {
        "oid": "0f1ded4703f19a156b2fb35c37d6809152a38b6d"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxODI3MTI3",
          "commit": {
            "abbreviatedOid": "cfcfe45"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Looks reasonable. Once this lands we should see about hooking about the gh-pages generation and link to that.",
          "createdAt": "2021-01-05T14:22:49Z",
          "updatedAt": "2021-01-05T14:22:49Z",
          "comments": []
        }
      ]
    },
    {
      "number": 57,
      "id": "MDExOlB1bGxSZXF1ZXN0NTQ5MTY1NjQ1",
      "title": "Add github workflows",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/57",
      "state": "MERGED",
      "author": "dvorak42",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This should add it the id-template workflows to automatically generate GH pages.",
      "createdAt": "2021-01-05T15:21:13Z",
      "updatedAt": "2021-01-05T16:13:53Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "master",
      "baseRefOid": "715ed91498a3aaa034fe5892d588a669b36d9c3c",
      "headRepository": "dvorak42/privacy-pass-ietf",
      "headRefName": "add-gh-workflows",
      "headRefOid": "969b22b3041727fc3f198ef9b912d2ed4b3ef699",
      "closedAt": "2021-01-05T16:13:53Z",
      "mergedAt": "2021-01-05T16:13:52Z",
      "mergedBy": "bemasc",
      "mergeCommit": {
        "oid": "6b3e974cbce8c18ffac1bee7aae1afa5704b48f8"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxOTI1Nzc2",
          "commit": {
            "abbreviatedOid": "969b22b"
          },
          "author": "bemasc",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-01-05T16:13:40Z",
          "updatedAt": "2021-01-05T16:13:40Z",
          "comments": []
        }
      ]
    },
    {
      "number": 58,
      "id": "MDExOlB1bGxSZXF1ZXN0NTU2OTQ0NTIz",
      "title": "Align with voprf draft",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/58",
      "state": "MERGED",
      "author": "claucece",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "cc. @chris-wood @alxdavids ",
      "createdAt": "2021-01-18T17:14:31Z",
      "updatedAt": "2021-02-17T09:24:58Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "master",
      "baseRefOid": "ed5cd0df54a9204f8dc5b91f4fdbc234e2afe8e9",
      "headRepository": "claucece/privacy-pass-ietf",
      "headRefName": "master",
      "headRefOid": "82275a679dae9d08d92b28c67ee4a3c7dd31dde1",
      "closedAt": "2021-02-17T09:24:58Z",
      "mergedAt": "2021-02-17T09:24:58Z",
      "mergedBy": "alxdavids",
      "mergeCommit": {
        "oid": "0ff3a561f748cd722bc7ad128fe947264257df68"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTcxMDUxNzUy",
          "commit": {
            "abbreviatedOid": "82275a6"
          },
          "author": "alxdavids",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2021-01-19T09:28:10Z",
          "updatedAt": "2021-01-19T09:28:10Z",
          "comments": []
        }
      ]
    },
    {
      "number": 59,
      "id": "MDExOlB1bGxSZXF1ZXN0NTczODc4Njg1",
      "title": "Fix some issues with the notation",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/59",
      "state": "MERGED",
      "author": "claucece",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "cc./ @alxdavids @armfazh @chris-wood ",
      "createdAt": "2021-02-16T02:03:47Z",
      "updatedAt": "2021-02-17T09:25:39Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "master",
      "baseRefOid": "ed5cd0df54a9204f8dc5b91f4fdbc234e2afe8e9",
      "headRepository": "claucece/privacy-pass-ietf",
      "headRefName": "notation-fix",
      "headRefOid": "78d21082eb394c487d2011d976f6e2f87e5f3af0",
      "closedAt": "2021-02-17T09:25:39Z",
      "mergedAt": "2021-02-17T09:25:39Z",
      "mergedBy": "alxdavids",
      "mergeCommit": {
        "oid": "396c5683a1cab974111ced49dae6119e8d47031f"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkwOTA5NzE1",
          "commit": {
            "abbreviatedOid": "78d2108"
          },
          "author": "armfazh",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-02-16T06:14:01Z",
          "updatedAt": "2021-02-16T06:14:01Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkxOTg4NTU2",
          "commit": {
            "abbreviatedOid": "78d2108"
          },
          "author": "alxdavids",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-02-17T09:25:32Z",
          "updatedAt": "2021-02-17T09:25:32Z",
          "comments": []
        }
      ]
    },
    {
      "number": 60,
      "id": "MDExOlB1bGxSZXF1ZXN0NTc1ODUzNzQ0",
      "title": "Add metadata discussion.",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/60",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #51, to some extent.\r\n\r\ncc @alxdavids ",
      "createdAt": "2021-02-18T17:20:43Z",
      "updatedAt": "2021-02-18T17:56:04Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "master",
      "baseRefOid": "396c5683a1cab974111ced49dae6119e8d47031f",
      "headRepository": "chris-wood/privacy-pass-ietf",
      "headRefName": "caw/metadata-fix",
      "headRefOid": "c64510fbdf82e60172b55ab2b5e59d88ee700a58",
      "closedAt": "2021-02-18T17:56:04Z",
      "mergedAt": "2021-02-18T17:56:04Z",
      "mergedBy": "alxdavids",
      "mergeCommit": {
        "oid": "00bbf4dae86611c96ef1ca9dfec2de602102fd8b"
      },
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "@alxdavids updated with citations. I'll take #49, #48, and #47 next. (Trying to get these done before the upcoming deadline.)",
          "createdAt": "2021-02-18T17:51:30Z",
          "updatedAt": "2021-02-18T17:51:30Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkzNDY5NTk0",
          "commit": {
            "abbreviatedOid": "788366e"
          },
          "author": "alxdavids",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Thanks Chris, this looks great (and thanks for joining me! :D). I have a few comments to address. Also, I hadn't considered the differences between opaque and transparent public metadata, but there is an important distinction there so thanks for bringing it up.",
          "createdAt": "2021-02-18T17:27:07Z",
          "updatedAt": "2021-02-18T17:32:27Z",
          "comments": [
            {
              "originalPosition": 53,
              "body": "We probably need to update the refs to use the new WG versions.\r\n```suggestion\r\nissuance flow. In {{draft-ietf-privacypass-protocol}}, it is possible to include\r\n```",
              "createdAt": "2021-02-18T17:27:07Z",
              "updatedAt": "2021-02-18T17:49:22Z"
            },
            {
              "originalPosition": 58,
              "body": "It might be worth separating the last two paragraphs as they relate mostly to privacy considerations. What do you think?\r\n\r\n```suggestion\r\n\r\n## Client privacy implications\r\n\r\n```",
              "createdAt": "2021-02-18T17:28:57Z",
              "updatedAt": "2021-02-18T17:49:22Z"
            },
            {
              "originalPosition": 50,
              "body": "We may want to provide references to constructions that permit such metadata to be added (links to KLOS20 and the FB paper). However, it might just be better to wait for the CFRG drafts?",
              "createdAt": "2021-02-18T17:30:48Z",
              "updatedAt": "2021-02-18T17:49:22Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkzNDgxOTIz",
          "commit": {
            "abbreviatedOid": "fb97f57"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-18T17:40:02Z",
          "updatedAt": "2021-02-18T17:40:02Z",
          "comments": [
            {
              "originalPosition": 58,
              "body": "Yeah, good call :-) ",
              "createdAt": "2021-02-18T17:40:02Z",
              "updatedAt": "2021-02-18T17:49:22Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkzNDgyMjE3",
          "commit": {
            "abbreviatedOid": "d08a120"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-18T17:40:23Z",
          "updatedAt": "2021-02-18T17:40:24Z",
          "comments": [
            {
              "originalPosition": 50,
              "body": "Nah, citing them here is a good idea. Let me add them!",
              "createdAt": "2021-02-18T17:40:23Z",
              "updatedAt": "2021-02-18T17:49:22Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkzNDkwMzA2",
          "commit": {
            "abbreviatedOid": "c64510f"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-18T17:49:23Z",
          "updatedAt": "2021-02-18T17:49:24Z",
          "comments": [
            {
              "originalPosition": 50,
              "body": "Done!",
              "createdAt": "2021-02-18T17:49:23Z",
              "updatedAt": "2021-02-18T17:49:24Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkzNDk2MTQw",
          "commit": {
            "abbreviatedOid": "c64510f"
          },
          "author": "alxdavids",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM! I'll take some of the other issues.",
          "createdAt": "2021-02-18T17:55:54Z",
          "updatedAt": "2021-02-18T17:55:54Z",
          "comments": []
        }
      ]
    },
    {
      "number": 61,
      "id": "MDExOlB1bGxSZXF1ZXN0NTc1OTA1MDY1",
      "title": "Add token expiration discussion.",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/61",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Replace suggested registry with list of other options. The rationale is that a registry may be sufficient but not necessary. There are other options that might work. \r\n\r\nI suggest we work with @chelseakomlo on a draft describing these techniques in more detail.\r\n\r\ncc @alxdavids \r\n\r\nCloses #49.",
      "createdAt": "2021-02-18T18:45:56Z",
      "updatedAt": "2021-02-19T14:47:18Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "master",
      "baseRefOid": "00bbf4dae86611c96ef1ca9dfec2de602102fd8b",
      "headRepository": "chris-wood/privacy-pass-ietf",
      "headRefName": "caw/add-token-expiration",
      "headRefOid": "c28e39773a1b893162b4aa8eedb425627694badc",
      "closedAt": "2021-02-19T14:47:18Z",
      "mergedAt": "2021-02-19T14:47:18Z",
      "mergedBy": "alxdavids",
      "mergeCommit": {
        "oid": "9a5e8aaffd0cdf1c65d79135fa6ba822ff6b27dd"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk0MjU2ODQy",
          "commit": {
            "abbreviatedOid": "c28e397"
          },
          "author": "alxdavids",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "This LGTM. Agreed that working on a document that tackles these questions specifically would be worthwhile.",
          "createdAt": "2021-02-19T14:47:11Z",
          "updatedAt": "2021-02-19T14:47:11Z",
          "comments": []
        }
      ]
    },
    {
      "number": 62,
      "id": "MDExOlB1bGxSZXF1ZXN0NTc2NjIxODYx",
      "title": "First attempt at solving #50.",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/62",
      "state": "MERGED",
      "author": "alxdavids",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "- Add an extra round to the issuance phase\r\n- Specify whether commitments are required in ciphersuites\r\n- Allow possibility for null state values\r\n\r\ncc @claucece, @chris-wood, @dvorak42, @armfazh for review.   ",
      "createdAt": "2021-02-19T17:58:23Z",
      "updatedAt": "2022-06-22T14:04:08Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "master",
      "baseRefOid": "9a5e8aaffd0cdf1c65d79135fa6ba822ff6b27dd",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "alxdavids/50",
      "headRefOid": "5c749d6f7360d21595e75520e8883b2d095c7de7",
      "closedAt": "2021-02-22T08:33:13Z",
      "mergedAt": "2021-02-22T08:33:13Z",
      "mergedBy": "alxdavids",
      "mergeCommit": {
        "oid": "cdb894f95d7c3d3f4bf0e6a365be222d97763586"
      },
      "comments": [
        {
          "author": "alxdavids",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks @chris-wood, changes all look good. What do you think about the `GenerateState` algorithm? Maybe I can just add some text that leaves this up to the implementer?",
          "createdAt": "2021-02-20T13:10:40Z",
          "updatedAt": "2021-02-20T13:10:40Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "That's probably only a function that 3/4-message protocols need to implement, right? I wouldn't expect the VOPRF draft to implement it, since COMMIT=false for those suites.\n\nAlso, what do you think about renaming it to GenerateCommitment?",
          "createdAt": "2021-02-20T13:48:42Z",
          "updatedAt": "2021-02-20T13:48:42Z"
        },
        {
          "author": "alxdavids",
          "authorAssociation": "COLLABORATOR",
          "body": "> That's probably only a function that 3/4-message protocols need to implement, right? I wouldn't expect the VOPRF draft to implement it, since COMMIT=false for those suites.\r\n> \r\n> Also, what do you think about renaming it to GenerateCommitment?\r\n\r\nSounds good, I've also replaced `state` with `commitment` throughout to avoid mishaps. ",
          "createdAt": "2021-02-20T14:40:22Z",
          "updatedAt": "2021-02-20T14:40:22Z"
        },
        {
          "author": "claucece",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I like this ;) Thank you @alxdavids ! But, should the `CommitRequest` and `GenerateCommitment` should be added to the `API functions` sections, as `Generate` and others?",
          "createdAt": "2021-02-21T01:32:40Z",
          "updatedAt": "2021-02-21T13:21:05Z"
        },
        {
          "author": "alxdavids",
          "authorAssociation": "COLLABORATOR",
          "body": "> \r\n> \r\n> I like this ;) Thank you @alxdavids ! But, should the `CommitRequest and `GenerateCommitment`should be added to the`API functions`sections, as`Generate` and others?\r\n\r\nYeah I think you're right. I didn't add them as I wasn't exactly sure how they should be implemented, but I guess that we can leave that for the underlying ciphersuites to decide.",
          "createdAt": "2021-02-21T09:11:30Z",
          "updatedAt": "2021-02-21T09:11:30Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Yeah, maybe just leave an OPEN ISSUE noting that they should be defined? If you want something, maybe this would work? (I replaced server_id with metadata, though I wonder if client-provided metadata is best supplied during the commit flow or the issuance flow?) \r\n\r\n```\r\nPrepare\r\n\r\nA function run by the client to prepare for a commitment will used during the issuance flow of the Privacy Pass protocol.\r\n\r\nInputs:\r\n\r\ninfo: An opaque byte application-specific byte string.\r\n\r\nNone\r\n\r\nOutputs:\r\n\r\ncommit_req: A CommitRequest struct.\r\n\r\n\r\n\r\nCommit\r\n\r\nA function run by the server to commit to a Privacy Pass issuance flow.\r\n\r\nInputs:\r\n\r\npkS: A server PublicKey.\r\nskS: A server PrivateKey.\r\ncommit_req: A CommitRequest struct.\r\n\r\nOutputs:\r\n\r\ncommit_resp: A CommitResponse struct.\r\n```",
          "createdAt": "2021-02-21T14:57:37Z",
          "updatedAt": "2021-02-21T14:57:37Z"
        },
        {
          "author": "alxdavids",
          "authorAssociation": "COLLABORATOR",
          "body": "@chris-wood Thanks for the example, I've altered the PR to include this and @claucece's feedback.",
          "createdAt": "2021-02-21T16:01:38Z",
          "updatedAt": "2021-02-21T16:01:38Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Looks good! Shall we merge and the submit this and -architecture?\r\n",
          "createdAt": "2021-02-21T16:38:53Z",
          "updatedAt": "2021-02-21T16:38:53Z"
        },
        {
          "author": "alxdavids",
          "authorAssociation": "COLLABORATOR",
          "body": "> \r\n> \r\n> Looks good! Shall we merge and the submit this and -architecture?\r\n\r\nSGTM! I'm AFK for the rest of today, but I'll handle it tomorrow if that's okay with everyone else?",
          "createdAt": "2021-02-21T16:41:25Z",
          "updatedAt": "2021-02-21T16:41:25Z"
        },
        {
          "author": "claucece",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@alxdavids thank you! looking good ;)",
          "createdAt": "2021-02-21T20:41:17Z",
          "updatedAt": "2021-02-21T20:41:17Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk0NDQ0Njgy",
          "commit": {
            "abbreviatedOid": "162d6a0"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "This looks good! I think we can shift the presentation of the `st` value to be something about a reference to some state, rather than actual state itself. That allows the server to use it as a reference (a key in some database) or as state (encrypted cookie). ",
          "createdAt": "2021-02-19T18:17:35Z",
          "updatedAt": "2021-02-19T18:25:36Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "```suggestion\r\ncertain ciphersuites that require client and servers commit to some state. When such\r\n```",
              "createdAt": "2021-02-19T18:17:35Z",
              "updatedAt": "2021-02-21T16:24:11Z"
            },
            {
              "originalPosition": 43,
              "body": "```suggestion\r\n`st` with the `IssuanceRequest` message. The server MUST check that the\r\n```",
              "createdAt": "2021-02-19T18:17:51Z",
              "updatedAt": "2021-02-21T16:24:11Z"
            },
            {
              "originalPosition": 44,
              "body": "```suggestion\r\nstate corresponds to `st` that was previously committed. This\r\n```",
              "createdAt": "2021-02-19T18:18:51Z",
              "updatedAt": "2021-02-21T16:24:11Z"
            },
            {
              "originalPosition": 48,
              "body": "```suggestion\r\nrequires the commitment to either be a reference to some state on the server, \r\nor the commitment be an encrypted (and authenticated) blob that the server can\r\nuse to recover state. The mechanism by which servers handle this state is implementation\r\nspecific, and similar to how TLS session resumption state is managed; see {{RFC8446}}\r\nfor details.\r\n```",
              "createdAt": "2021-02-19T18:21:28Z",
              "updatedAt": "2021-02-21T16:24:11Z"
            },
            {
              "originalPosition": 54,
              "body": "```suggestion\r\ncInput = Generate(m, \"\")\r\n```",
              "createdAt": "2021-02-19T18:21:51Z",
              "updatedAt": "2021-02-21T16:24:11Z"
            },
            {
              "originalPosition": 57,
              "body": "```suggestion\r\nA server that is expecting some non-empty `st` to be passed must abort\r\n```",
              "createdAt": "2021-02-19T18:22:02Z",
              "updatedAt": "2021-02-21T16:24:11Z"
            },
            {
              "originalPosition": 58,
              "body": "```suggestion\r\nthe protocol on receiving a request containing an empty `st` value.\r\n```",
              "createdAt": "2021-02-19T18:22:10Z",
              "updatedAt": "2021-02-21T16:24:11Z"
            },
            {
              "originalPosition": 61,
              "body": "```suggestion\r\nempty state messages.\r\n```",
              "createdAt": "2021-02-19T18:22:22Z",
              "updatedAt": "2021-02-21T16:24:11Z"
            },
            {
              "originalPosition": 86,
              "body": "```suggestion\r\ncorrespond to some state that the server has generated. The structure\r\nand format of this value is implementation specific depending on whether\r\nthe server is stateful.\r\n```",
              "createdAt": "2021-02-19T18:23:12Z",
              "updatedAt": "2021-02-21T16:24:11Z"
            },
            {
              "originalPosition": 123,
              "body": "```suggestion\r\nphase of the protocol is necessary. When this is false, the client\r\n```",
              "createdAt": "2021-02-19T18:23:40Z",
              "updatedAt": "2021-02-21T16:24:11Z"
            },
            {
              "originalPosition": 125,
              "body": "```suggestion\r\nignores the first message and uses an empty value for the state parameter\r\nto `Generate`.\r\n```",
              "createdAt": "2021-02-19T18:24:14Z",
              "updatedAt": "2021-02-21T16:24:11Z"
            },
            {
              "originalPosition": 77,
              "body": "Interesting -- do we need this? Can it be empty?",
              "createdAt": "2021-02-19T18:24:42Z",
              "updatedAt": "2021-02-21T16:24:11Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk0NzUwOTY0",
          "commit": {
            "abbreviatedOid": "63d6bf4"
          },
          "author": "alxdavids",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-20T13:09:31Z",
          "updatedAt": "2021-02-20T13:09:32Z",
          "comments": [
            {
              "originalPosition": 77,
              "body": "I was allowing for the possibility that the client may only want to allow commitments for certain types (e.g. it may only want to allow server S with ciphersuite `c1`, rather than `c2`). The `server_id` was kind of a placeholder for that. However, it is pretty ugly right now, so I would be happy to remove it.",
              "createdAt": "2021-02-20T13:09:31Z",
              "updatedAt": "2021-02-21T16:24:11Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk0NzYwNzMw",
          "commit": {
            "abbreviatedOid": "90f28bd"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-20T15:20:48Z",
          "updatedAt": "2021-02-20T15:20:49Z",
          "comments": [
            {
              "originalPosition": 77,
              "body": "\ud83d\udc4d Eh, it's probably fine for now.",
              "createdAt": "2021-02-20T15:20:48Z",
              "updatedAt": "2021-02-21T16:24:11Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk0Nzk4NTQw",
          "commit": {
            "abbreviatedOid": "90f28bd"
          },
          "author": "claucece",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-21T01:31:52Z",
          "updatedAt": "2021-02-21T01:31:53Z",
          "comments": [
            {
              "originalPosition": 44,
              "body": "When the commitment does not correspond to `com` that was previously\r\ncommitted, should this define a specific error that we need to add to the `Error types`? ",
              "createdAt": "2021-02-21T01:31:52Z",
              "updatedAt": "2021-02-21T16:24:11Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk0ODIxMzUy",
          "commit": {
            "abbreviatedOid": "90f28bd"
          },
          "author": "alxdavids",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-21T09:10:35Z",
          "updatedAt": "2021-02-21T09:10:35Z",
          "comments": [
            {
              "originalPosition": 44,
              "body": "@claucece Good point! Yes it should be.",
              "createdAt": "2021-02-21T09:10:35Z",
              "updatedAt": "2021-02-21T16:24:11Z"
            }
          ]
        }
      ]
    },
    {
      "number": 64,
      "id": "MDExOlB1bGxSZXF1ZXN0NTc3NDUxMjI5",
      "title": "Fix minor typos before -01 release",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/64",
      "state": "MERGED",
      "author": "alxdavids",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-02-22T08:40:00Z",
      "updatedAt": "2022-06-22T14:04:09Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "master",
      "baseRefOid": "cdb894f95d7c3d3f4bf0e6a365be222d97763586",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "alxdavids/minor-change",
      "headRefOid": "c722abf664f78f9646d0bf0e0549c1c56e771aa5",
      "closedAt": "2021-03-05T09:33:44Z",
      "mergedAt": "2021-03-05T09:33:44Z",
      "mergedBy": "alxdavids",
      "mergeCommit": {
        "oid": "cde660567c79230d4ac514e2567445ae478b63e2"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk1NDI2OTg0",
          "commit": {
            "abbreviatedOid": "c807fb9"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM modulo the -latest change.",
          "createdAt": "2021-02-22T14:50:21Z",
          "updatedAt": "2021-02-22T14:50:40Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "This typically stays `latest` -- are you trying to build `-01`? If so, let's chat offline and I can help you figure it out!",
              "createdAt": "2021-02-22T14:50:21Z",
              "updatedAt": "2021-02-22T15:18:17Z"
            }
          ]
        }
      ]
    },
    {
      "number": 75,
      "id": "MDExOlB1bGxSZXF1ZXN0Njg2MTgxOTY2",
      "title": "Add redemption context discussion to architecture and HTTP API.",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/75",
      "state": "MERGED",
      "author": "dvorak42",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Initial work for fixing #66 .",
      "createdAt": "2021-07-08T16:58:43Z",
      "updatedAt": "2021-07-09T15:00:28Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "master",
      "baseRefOid": "cde660567c79230d4ac514e2567445ae478b63e2",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "redemption_context",
      "headRefOid": "96c4a340785c0af85acfb184ed260e7a4a3fd073",
      "closedAt": "2021-07-09T15:00:28Z",
      "mergedAt": "2021-07-09T15:00:28Z",
      "mergedBy": "dvorak42",
      "mergeCommit": {
        "oid": "644b2fe6855286cf90c7b54795f5045e1bfb952c"
      },
      "comments": [
        {
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "body": "@chris-wood ",
          "createdAt": "2021-07-08T16:59:43Z",
          "updatedAt": "2021-07-08T16:59:43Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzAyODAwNTM0",
          "commit": {
            "abbreviatedOid": "c58929d"
          },
          "author": "alxdavids",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Thanks @dvorak42! This looks good, I have mostly just a few nits to resolve. ",
          "createdAt": "2021-07-09T08:18:23Z",
          "updatedAt": "2021-07-09T08:24:15Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "```suggestion\r\nwhile preventing the joining of a number of different tokens is for the\r\n```",
              "createdAt": "2021-07-09T08:18:23Z",
              "updatedAt": "2021-07-09T08:24:06Z"
            },
            {
              "originalPosition": 8,
              "body": "```suggestion\r\nclient to maintain sharded \"redemption contexts\". This would allow the\r\n```",
              "createdAt": "2021-07-09T08:18:57Z",
              "updatedAt": "2021-07-09T08:24:06Z"
            },
            {
              "originalPosition": 43,
              "body": "To keep consistent with the other boolean checks\r\n```suggestion\r\n                               if resp.success {\r\n```",
              "createdAt": "2021-07-09T08:20:17Z",
              "updatedAt": "2021-07-09T08:24:06Z"
            },
            {
              "originalPosition": 62,
              "body": "Should we link back to the architecture doc here as well, just to reinforce the connection.\r\n```suggestion\r\nstorage. Generally this is the top-level origin. Any redemption context should be built following the principles outlined in {{draft-ietf-privacypass-architecture}} and later in {{privacy}}.\r\n```",
              "createdAt": "2021-07-09T08:21:34Z",
              "updatedAt": "2021-07-09T08:24:06Z"
            },
            {
              "originalPosition": 20,
              "body": "```suggestion\r\nagainst. An empty redemption is returned when the limit has been\r\n```",
              "createdAt": "2021-07-09T08:23:18Z",
              "updatedAt": "2021-07-09T08:24:06Z"
            }
          ]
        }
      ]
    },
    {
      "number": 76,
      "id": "MDExOlB1bGxSZXF1ZXN0Njg2ODEyNjgw",
      "title": "Awkward binding to blind RSA.",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/76",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This at least tries to show that such a mapping is possible. It's very far from perfect. There are a lot of rough edges in the protocol shape. I'll file separate issues to clean them up.\r\n\r\nOpening as a draft purely for _demonstration purposes_.",
      "createdAt": "2021-07-09T14:00:42Z",
      "updatedAt": "2021-10-29T17:08:56Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "master",
      "baseRefOid": "cde660567c79230d4ac514e2567445ae478b63e2",
      "headRepository": "chris-wood/privacy-pass-ietf",
      "headRefName": "caw/draft-rsa-binding",
      "headRefOid": "b8c13dd7ba14700afc128266a9df4b79e3766b28",
      "closedAt": "2021-10-29T17:08:56Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": []
    },
    {
      "number": 78,
      "id": "MDExOlB1bGxSZXF1ZXN0Njg2ODI2NTQx",
      "title": "Add metadata considerations #63",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/78",
      "state": "CLOSED",
      "author": "claucece",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-07-09T14:19:34Z",
      "updatedAt": "2022-01-31T20:32:52Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "master",
      "baseRefOid": "cde660567c79230d4ac514e2567445ae478b63e2",
      "headRepository": "claucece/privacy-pass-ietf",
      "headRefName": "master",
      "headRefOid": "8bc153a0e592dd71de5f551e31081a535df19126",
      "closedAt": "2022-01-31T20:32:52Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "claucece",
          "authorAssociation": "CONTRIBUTOR",
          "body": "cc.: @alxdavids @chris-wood @dvorak42 @armfazh ",
          "createdAt": "2021-07-23T14:25:16Z",
          "updatedAt": "2021-07-27T20:23:06Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing as overcome by events.",
          "createdAt": "2022-01-31T20:32:52Z",
          "updatedAt": "2022-01-31T20:32:52Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzE1MDY0MDU3",
          "commit": {
            "abbreviatedOid": "8999628"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "This looks to be in the right direction! I have some suggestions that aim to fix some editorial issues, reduce text, and simplify notation. We should note also that this assumes the VOPRF document will be extended to support metadata.",
          "createdAt": "2021-07-26T16:41:21Z",
          "updatedAt": "2021-07-26T16:56:20Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "I'd recommend removing this entire section and folding it into the second paragraph above. Specifically, I might note that a timestamp-based epoch or the client's ASN could be used as transparent public metadata. ",
              "createdAt": "2021-07-26T16:41:21Z",
              "updatedAt": "2021-07-26T16:56:20Z"
            },
            {
              "originalPosition": 46,
              "body": "This is a useful paragraph to keep. Perhaps by appending it to the last paragraph in the section above?",
              "createdAt": "2021-07-26T16:41:56Z",
              "updatedAt": "2021-07-26T16:56:20Z"
            },
            {
              "originalPosition": 18,
              "body": "```suggestion\r\n```",
              "createdAt": "2021-07-26T16:44:05Z",
              "updatedAt": "2021-07-26T16:56:20Z"
            },
            {
              "originalPosition": 47,
              "body": "Let's spell out these parameters? That is, `cMetadata` => `clientMetadata`.",
              "createdAt": "2021-07-26T16:45:17Z",
              "updatedAt": "2021-07-26T16:56:20Z"
            },
            {
              "originalPosition": 37,
              "body": "```suggestion\r\nis consistent across the entire ecosystem.\r\n```",
              "createdAt": "2021-07-26T16:45:33Z",
              "updatedAt": "2021-07-26T16:56:20Z"
            },
            {
              "originalPosition": 47,
              "body": "Also, shouldn't both parties have client and server metadata as input?",
              "createdAt": "2021-07-26T16:47:14Z",
              "updatedAt": "2021-07-26T16:56:20Z"
            },
            {
              "originalPosition": 132,
              "body": "```suggestion\r\nby the server or client.\r\n```",
              "createdAt": "2021-07-26T16:47:27Z",
              "updatedAt": "2021-07-26T16:56:20Z"
            },
            {
              "originalPosition": 135,
              "body": "This means that metadata is length-prefixed, which isn't the case as described in text above. Maybe we just say that it's an arbitrary-length byte string and leave it at that? Then we could delete this section entirely. (See the proposed suggestions below!)",
              "createdAt": "2021-07-26T16:47:59Z",
              "updatedAt": "2021-07-26T16:56:20Z"
            },
            {
              "originalPosition": 146,
              "body": "```suggestion\r\n- `sMetadata`: A optional server metadata, an arbitrary-length byte string.\r\n- `cMetadata`: A optional client metadata, an arbitrary-length byte string.\r\n```",
              "createdAt": "2021-07-26T16:48:44Z",
              "updatedAt": "2021-07-26T16:56:20Z"
            },
            {
              "originalPosition": 155,
              "body": "```suggestion\r\n- `sMetadata`: A optional server metadata, an arbitrary-length byte string.\r\n- `cMetadata`: A optional client metadata, an arbitrary-length byte string.\r\n```",
              "createdAt": "2021-07-26T16:48:57Z",
              "updatedAt": "2021-07-26T16:56:20Z"
            },
            {
              "originalPosition": 164,
              "body": "```suggestion\r\n- `sMetadata`: A optional server metadata, an arbitrary-length byte string.\r\n- `cMetadata`: A optional client metadata, an arbitrary-length byte string.\r\n```",
              "createdAt": "2021-07-26T16:49:05Z",
              "updatedAt": "2021-07-26T16:56:20Z"
            },
            {
              "originalPosition": 173,
              "body": "```suggestion\r\n- `sMetadata`: A optional server metadata, an arbitrary-length byte string.\r\n- `cMetadata`: A optional client metadata, an arbitrary-length byte string.\r\n```",
              "createdAt": "2021-07-26T16:49:14Z",
              "updatedAt": "2021-07-26T16:56:20Z"
            },
            {
              "originalPosition": 13,
              "body": "```suggestion\r\nThe client and server also agree on public metadata values used during the protocol.\r\nSee {{client-setup}} for more information about this metadata. This configuration must be available to all\r\n```",
              "createdAt": "2021-07-26T16:52:44Z",
              "updatedAt": "2021-07-26T16:56:20Z"
            },
            {
              "originalPosition": 33,
              "body": "```suggestion\r\nAs above, the client and server also agree on public metadata values used during the protocol.\r\nEach metadata value is an arbitrary-length byte string. The client picks an integer value `m > 0` of tokens to\r\n```",
              "createdAt": "2021-07-26T16:53:47Z",
              "updatedAt": "2021-07-26T16:56:20Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzE1Mzk4ODc3",
          "commit": {
            "abbreviatedOid": "c6df4ee"
          },
          "author": "claucece",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-07-27T01:10:40Z",
          "updatedAt": "2021-07-27T01:10:40Z",
          "comments": [
            {
              "originalPosition": 135,
              "body": "Yeah.. I didn't know how to make it as long as wanted in the TLS language. Changed now ;)",
              "createdAt": "2021-07-27T01:10:40Z",
              "updatedAt": "2021-07-27T01:10:40Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzE1Mzk4OTYy",
          "commit": {
            "abbreviatedOid": "8999628"
          },
          "author": "claucece",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-07-27T01:10:51Z",
          "updatedAt": "2021-07-27T01:10:51Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "Changed ;)",
              "createdAt": "2021-07-27T01:10:51Z",
              "updatedAt": "2021-07-27T01:10:51Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzE1Mzk5MTk3",
          "commit": {
            "abbreviatedOid": "c6df4ee"
          },
          "author": "claucece",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-07-27T01:11:29Z",
          "updatedAt": "2021-07-27T01:11:30Z",
          "comments": [
            {
              "originalPosition": 46,
              "body": "Changed.",
              "createdAt": "2021-07-27T01:11:30Z",
              "updatedAt": "2021-07-27T01:11:30Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzE1Mzk5MzAx",
          "commit": {
            "abbreviatedOid": "c6df4ee"
          },
          "author": "claucece",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-07-27T01:11:46Z",
          "updatedAt": "2021-07-27T01:11:47Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "Done ;)",
              "createdAt": "2021-07-27T01:11:47Z",
              "updatedAt": "2021-07-27T01:11:47Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzE1Mzk5Mzcy",
          "commit": {
            "abbreviatedOid": "c6df4ee"
          },
          "author": "claucece",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-07-27T01:11:59Z",
          "updatedAt": "2021-07-27T01:11:59Z",
          "comments": [
            {
              "originalPosition": 47,
              "body": "Yes! changed everywhere.",
              "createdAt": "2021-07-27T01:11:59Z",
              "updatedAt": "2021-07-27T01:11:59Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzE1Mzk5NDM0",
          "commit": {
            "abbreviatedOid": "c6df4ee"
          },
          "author": "claucece",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-07-27T01:12:10Z",
          "updatedAt": "2021-07-27T01:12:10Z",
          "comments": [
            {
              "originalPosition": 132,
              "body": "Done.",
              "createdAt": "2021-07-27T01:12:10Z",
              "updatedAt": "2021-07-27T01:12:10Z"
            }
          ]
        }
      ]
    },
    {
      "number": 79,
      "id": "MDExOlB1bGxSZXF1ZXN0NjkxNTQ2MzQw",
      "title": "Refactor to focus on protocol messages and interactions.",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/79",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Starting as a draft to demonstrate what I had in mind for #77.\r\n\r\nThis removes a lot of text, shifting the focus away from client and server implementation-specific APIs towards the protocol messages exchanged during issuance and redemption, and their encoding. This does seem to simplify a lot, as it encapsulates all of the special features of different underlying cryptographic protocols (public verifiability, metadata, etc) to those protocols. The result is just a thin wrapper around these schemes with logic specific to and necessary for privacy pass, i.e., generating nonces as token inputs, publishing server configurations, and so on.\r\n\r\nIt's not complete, but I wanted to throw it up early to get some preliminary feedback. ",
      "createdAt": "2021-07-16T14:46:31Z",
      "updatedAt": "2022-06-22T14:03:49Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "master",
      "baseRefOid": "920b6e608e2774837ae23487a4d772d6f7a2b5e3",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/protocol-message-focus",
      "headRefOid": "185a72131888bb35265137680bf2ae6df7d9c93c",
      "closedAt": "2021-10-29T17:09:03Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzA5NjE4MDU0",
          "commit": {
            "abbreviatedOid": "185a721"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-07-19T14:28:50Z",
          "updatedAt": "2021-07-19T14:55:30Z",
          "comments": [
            {
              "originalPosition": 86,
              "body": "Any chance we can add the p384_sha512 variant?",
              "createdAt": "2021-07-19T14:28:51Z",
              "updatedAt": "2021-07-19T14:55:30Z"
            },
            {
              "originalPosition": 503,
              "body": "Might be an issue with the current standard, but shouldn't the server have the ability to sign/evaluate fewer than the number of blinded_elements sent by the client?\r\n\r\n(and then we'll need a uint8 or length prefix in the IssuanceResponse for the client to be able to parse).",
              "createdAt": "2021-07-19T14:37:19Z",
              "updatedAt": "2021-07-19T14:55:30Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzA5NjY2NzAw",
          "commit": {
            "abbreviatedOid": "185a721"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-07-19T15:09:00Z",
          "updatedAt": "2021-07-19T15:09:00Z",
          "comments": [
            {
              "originalPosition": 86,
              "body": "Yeah, I was just getting one down to start.",
              "createdAt": "2021-07-19T15:09:00Z",
              "updatedAt": "2021-07-19T15:09:00Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzA5NjY5MDI0",
          "commit": {
            "abbreviatedOid": "185a721"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-07-19T15:10:58Z",
          "updatedAt": "2021-07-19T15:10:58Z",
          "comments": [
            {
              "originalPosition": 503,
              "body": "Yeah, good point. We should probably length prefix each of the element lists in request and response to make this easier to address later on.",
              "createdAt": "2021-07-19T15:10:58Z",
              "updatedAt": "2021-07-19T15:10:58Z"
            }
          ]
        }
      ]
    },
    {
      "number": 83,
      "id": "PR_kwDODeTEy84scsTn",
      "title": "Initial attempt at integration doc",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/83",
      "state": "CLOSED",
      "author": "alxdavids",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This is my first draft of an integration document for replacing the current protocol doc. I've tried to keep it as concise as possible. A few questions:\r\n\r\n- Would it be better to be more specific about how the POPRF algorithms are used? Or is this level of detail sufficient?\r\n- Can we leave considerations about how public keys are distributed and consumed to the HTTP API doc?\r\n- Is it reasonable to leave metadata-level considerations to the architecture doc.\r\n\r\nLet me know what you think so far, cc @chris-wood, @bemasc, @dvorak42, @jsalowey, @claucece, @armfazh ",
      "createdAt": "2021-09-29T13:00:43Z",
      "updatedAt": "2022-06-22T14:04:26Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "master",
      "baseRefOid": "920b6e608e2774837ae23487a4d772d6f7a2b5e3",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "alxdavids/integration-doc",
      "headRefOid": "eb5c07d7519af27d37b535a035a85f2dee1c0cb5",
      "closedAt": "2022-01-31T20:32:41Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "bemasc",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I think this doc might be the right place to declare an IANA registry of Privacy Pass ciphersuites, and explain how entries in that registry map to the VOPRF draft, and are represented in the HTTP API.",
          "createdAt": "2021-09-29T13:47:59Z",
          "updatedAt": "2021-09-29T13:47:59Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "@alxdavids, can you please review and respond to the comments above?",
          "createdAt": "2021-10-01T14:43:40Z",
          "updatedAt": "2021-10-01T14:43:40Z"
        },
        {
          "author": "alxdavids",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks @chris-wood @dvorak42 @bemasc for the review and suggestions. I've updated the draft with your changes (@chris-wood and @dvorak42 I've also added you as authors due to contributing concrete text). What do you think?\r\n\r\n@bemasc: Is the IANA considerations section that I've added sufficient? ",
          "createdAt": "2021-10-01T16:36:49Z",
          "updatedAt": "2021-10-01T16:36:49Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "> Thanks @chris-wood @dvorak42 @bemasc for the review and suggestions. I've updated the draft with your changes (@chris-wood and @dvorak42 I've also added you as authors due to contributing concrete text). What do you think?\r\n\r\nThe new text looks mostly good to me, modulo a couple more suggestions and a question about the ciphersuites. @alxdavids, why do we need PP suites when we have POPRF suites?",
          "createdAt": "2021-10-05T12:07:17Z",
          "updatedAt": "2021-10-05T12:07:17Z"
        },
        {
          "author": "claucece",
          "authorAssociation": "CONTRIBUTOR",
          "body": "It looks good @alxdavids !\r\n\r\n> Would it be better to be more specific about how the POPRF algorithms are used? Or is this level of detail sufficient?\r\n\r\nI think this level is sufficient ;)",
          "createdAt": "2021-10-05T13:00:57Z",
          "updatedAt": "2021-10-05T13:00:57Z"
        },
        {
          "author": "alxdavids",
          "authorAssociation": "COLLABORATOR",
          "body": "Removed the IANA registry for now following conversation with @chris-wood, @dvorak42, @claucece. Also locked the OPRF ciphersuite to P384. We can figure out how to define the appropriate IANA registries in the future. ",
          "createdAt": "2021-10-19T12:43:08Z",
          "updatedAt": "2021-10-19T12:43:08Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "This is missing IANA (empty) and security (ideally non-empty) considerations, as well as acknowledgements (though that's not necessary). Can we add those?",
          "createdAt": "2021-10-29T17:10:00Z",
          "updatedAt": "2021-10-29T17:10:12Z"
        },
        {
          "author": "alxdavids",
          "authorAssociation": "COLLABORATOR",
          "body": "@chris-wood I added the missing sections, is there anything else that needs addressing?",
          "createdAt": "2021-12-09T09:19:50Z",
          "updatedAt": "2021-12-09T09:19:50Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks, @alxdavids. It's good for now. We may need to update the issuance and redemption details to use the new HTTP-based authentication challenge being worked on in parallel, but the core of the issuance flow will remain the same. ",
          "createdAt": "2021-12-09T13:34:54Z",
          "updatedAt": "2021-12-09T13:34:54Z"
        },
        {
          "author": "alxdavids",
          "authorAssociation": "COLLABORATOR",
          "body": "> Thanks, @alxdavids. It's good for now. We may need to update the issuance and redemption details to use the new HTTP-based authentication challenge being worked on in parallel, but the core of the issuance flow will remain the same.\r\n\r\nSounds good, shall I merge this for now?",
          "createdAt": "2021-12-13T09:45:40Z",
          "updatedAt": "2021-12-13T09:45:40Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "I don't think we can merge this as-is. This being a new document would need to go through the adoption process (@bemasc can say more). Alternatively, we just replace the existing -protocol document with the contents in this PR.",
          "createdAt": "2021-12-13T12:56:13Z",
          "updatedAt": "2021-12-13T12:57:07Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "I did this alignment in #87. @alxdavids, please have a look!",
          "createdAt": "2021-12-14T00:18:50Z",
          "updatedAt": "2021-12-14T00:18:50Z"
        },
        {
          "author": "alxdavids",
          "authorAssociation": "COLLABORATOR",
          "body": "> I did this alignment in #87. @alxdavids, please have a look!\r\n\r\nSounds good, I will take a look at this tomorrow morning my time \ud83d\udc4d ",
          "createdAt": "2021-12-14T18:05:30Z",
          "updatedAt": "2021-12-14T18:05:30Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing as overcome by events.",
          "createdAt": "2022-01-31T20:32:41Z",
          "updatedAt": "2022-01-31T20:32:41Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy84tuqd6",
          "commit": {
            "abbreviatedOid": "3f89598"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "This more or less matches what I was thinking, but I think we can spell things a bit more specifically to enable interop.",
          "createdAt": "2021-09-29T21:30:33Z",
          "updatedAt": "2021-09-29T21:49:47Z",
          "comments": [
            {
              "originalPosition": 79,
              "body": "```suggestion\r\n```\r\n\r\nI don't think we need to define this?",
              "createdAt": "2021-09-29T21:30:33Z",
              "updatedAt": "2021-09-29T21:49:47Z"
            },
            {
              "originalPosition": 47,
              "body": "```suggestion\r\ncreated by a given server in the past\r\n```",
              "createdAt": "2021-09-29T21:30:56Z",
              "updatedAt": "2021-09-29T21:49:47Z"
            },
            {
              "originalPosition": 53,
              "body": "```suggestion\r\nshow how this integration allows public metadata to be introduced to\r\n```",
              "createdAt": "2021-09-29T21:31:21Z",
              "updatedAt": "2021-09-29T21:49:47Z"
            },
            {
              "originalPosition": 90,
              "body": "```suggestion\r\na key configuration in a way that clients can retrieve it. This configuration consists\r\nof the server's public key and configuration information for the underlying POPRF.\r\n\r\n~~~\r\nstruct {\r\n   uint8 version;\r\n   uint16 suite;\r\n   uint8 public_key[Ne];\r\n} KeyConfig;\r\n~~~\r\n\r\nKeyConfig.suite corresponds to a POPRF ciphersuite from {{I-D.irtf-cfrg-voprf, Section 4}},\r\nand KeyConfig.public_key corresponds to a serialized public key of length `Ne` bytes \r\n(denoted as a `SerializedElement` in {{I-D.irtf-cfrg-voprf, Section 2}}).\r\n```",
              "createdAt": "2021-09-29T21:34:33Z",
              "updatedAt": "2021-09-29T21:49:47Z"
            },
            {
              "originalPosition": 90,
              "body": "It's hard to interop if we don't describe how configurations are represented, I think.",
              "createdAt": "2021-09-29T21:36:58Z",
              "updatedAt": "2021-09-29T21:49:47Z"
            },
            {
              "originalPosition": 92,
              "body": "I would spell this differently. For example, I might literally frame it in terms of the POPRF protocol, like so:\r\n\r\n```\r\nThe issuance phase proceeds as follows. Let `info` be the agreed upon metadata between client\r\nand server, and let `config` be the server's chosen key configuration.\r\n\r\nFirst, a client configures its verifiable context using `config`:\r\n\r\n~~~\r\nclient_context = SetupVerifiableClient(config.suite, config.public_key)\r\n~~~\r\n\r\nLikewise, the server creates its own context using `config` and the corresponding private key `key`:\r\n\r\n~~~\r\nserver_context = SetupVerifiableServer(config.suite, key, config.public_key)\r\n~~~\r\n\r\nThe client then creates an issuance request as follows:\r\n\r\n~~~\r\nnonce = random(32)\r\nblind, blindedElement = context. Blind(nonce)\r\n~~~\r\n\r\nThe client then sends blindedElement to the server. The server, upon receipt, evaluates the request:\r\n\r\n~~~\r\nevaluatedElement, proof = server_context.Evaluate(key, config.public_key, blindedElement, info)\r\n~~~\r\n\r\nThe server sends both `evaluatedElement` and `proof` to the client. These are concatenated together. As the length of both is fixed, there is no ambiguity in parsing the result.\r\n\r\nThe client then completes issuance as follows:\r\n\r\n~~~\r\noutput = client_context.Finalize(nonce, blind, evaluatedElement, info):\r\n~~~\r\n\r\nThis procedure may fail with an error (`VerifyError` or `DeserializeError`), in which case the issuance is said to have failed. The output of the issuance protocol is the concatenation of `nonce` and `output`, denoted as `token`:\r\n\r\n~~~\r\nstruct {\r\n   uint8 nonce[32];\r\n   uint8 output[Nh]; // Nh is as defined in {{I-D.irtf-cfrg-voprf}}\r\n} Token;\r\n~~~\r\n\r\nIn the redemption phase, the client sends the Token to the server to verify locally. In particular, the server verifies the Token as follows:\r\n\r\n~~~\r\nvalid = server_context.VerifyFinalize(key, token.nonce, token.output, info)\r\n~~~\r\n\r\nRedemption is considered successful if `valid` is true.\r\n```",
              "createdAt": "2021-09-29T21:46:02Z",
              "updatedAt": "2021-09-29T21:49:47Z"
            },
            {
              "originalPosition": 112,
              "body": "I would remove this section entirely.",
              "createdAt": "2021-09-29T21:46:18Z",
              "updatedAt": "2021-09-29T21:49:47Z"
            },
            {
              "originalPosition": 143,
              "body": "Negotiation is a bit odd here, since nothing's negotiated. Maybe this should say that ciphersuites are determined by the server's choice of configuration?",
              "createdAt": "2021-09-29T21:47:00Z",
              "updatedAt": "2021-09-29T21:49:47Z"
            },
            {
              "originalPosition": 90,
              "body": "We should probably also indicate how the server knows which KeyConfig to use for a given request. I don't think this needs to be part of the protocol here, as it may vary. Instead, I'd recommend coming up with a unique way to identify a KeyConfig, e.g., id = SHA256(KeyConfig), and then saying that the wrapper protocol around Privacy Pass can send this to the server if needed for the given application.",
              "createdAt": "2021-09-29T21:49:18Z",
              "updatedAt": "2021-09-29T21:49:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84txjg7",
          "commit": {
            "abbreviatedOid": "3f89598"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-09-30T14:45:11Z",
          "updatedAt": "2021-09-30T15:08:13Z",
          "comments": [
            {
              "originalPosition": 90,
              "body": "What's the version intended to be? Key version?",
              "createdAt": "2021-09-30T14:45:11Z",
              "updatedAt": "2021-09-30T15:08:13Z"
            },
            {
              "originalPosition": 101,
              "body": "Wonder if we should just refer to the triple as the token, and not have to have the client keep a concept of the separate parts? (constructions where the output of issuance ends up just being one bound blob, rather than disparate pieces) Though we can also hide that in the higher level APIs.",
              "createdAt": "2021-09-30T14:47:50Z",
              "updatedAt": "2021-09-30T15:08:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84tx05M",
          "commit": {
            "abbreviatedOid": "3f89598"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-09-30T15:40:25Z",
          "updatedAt": "2021-09-30T15:40:26Z",
          "comments": [
            {
              "originalPosition": 90,
              "body": "Version of this key config, so it should probably also include a length of the struct? \ud83e\udd37 ",
              "createdAt": "2021-09-30T15:40:25Z",
              "updatedAt": "2021-09-30T15:40:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84tx1MB",
          "commit": {
            "abbreviatedOid": "3f89598"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-09-30T15:41:25Z",
          "updatedAt": "2021-09-30T15:41:25Z",
          "comments": [
            {
              "originalPosition": 101,
              "body": "Yeah, the API should probably just expose a single blob as the token, rather than separate parts. ",
              "createdAt": "2021-09-30T15:41:25Z",
              "updatedAt": "2021-09-30T15:41:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84t2WWs",
          "commit": {
            "abbreviatedOid": "db0af02"
          },
          "author": "bemasc",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-01T17:32:00Z",
          "updatedAt": "2021-10-01T17:32:00Z",
          "comments": [
            {
              "originalPosition": 211,
              "body": "In general the form is: \"This specification creates a new page named X in the Y category containing a registry named Z, with the following fields:\".\r\n\r\nIn this case, maybe X = Privacy Pass, Y = Privacy Pass, Z = \"Cipher Suites\".\r\n\r\nAlso think about whether your cipher suites need a numeric identifier, or whether it is sufficient to give them strings.",
              "createdAt": "2021-10-01T17:32:00Z",
              "updatedAt": "2021-10-05T14:32:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84t-dB8",
          "commit": {
            "abbreviatedOid": "db0af02"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-05T12:01:56Z",
          "updatedAt": "2021-10-05T12:05:49Z",
          "comments": [
            {
              "originalPosition": 157,
              "body": "```suggestion\r\nblind, blindedElement = client_context.Blind(nonce)\r\n```",
              "createdAt": "2021-10-05T12:01:56Z",
              "updatedAt": "2021-10-05T12:05:49Z"
            },
            {
              "originalPosition": 110,
              "body": "```suggestion\r\n```",
              "createdAt": "2021-10-05T12:04:46Z",
              "updatedAt": "2021-10-05T12:05:49Z"
            },
            {
              "originalPosition": 110,
              "body": "I guess one can version above this, so maybe it's not necessary here.",
              "createdAt": "2021-10-05T12:05:01Z",
              "updatedAt": "2021-10-05T12:05:49Z"
            },
            {
              "originalPosition": 118,
              "body": "```suggestion\r\n```",
              "createdAt": "2021-10-05T12:05:12Z",
              "updatedAt": "2021-10-05T12:05:49Z"
            },
            {
              "originalPosition": 211,
              "body": "Why do we need these ciphersuites at all? Aren't they redundant with the POPRF suite? ",
              "createdAt": "2021-10-05T12:05:47Z",
              "updatedAt": "2021-10-05T12:05:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84t_M55",
          "commit": {
            "abbreviatedOid": "db0af02"
          },
          "author": "bemasc",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-05T14:38:46Z",
          "updatedAt": "2021-10-05T14:38:46Z",
          "comments": [
            {
              "originalPosition": 211,
              "body": "I think we do need a new IANA registry.  Without a registry, we would have to Update one or more RFCs every time we want to add a ciphersuite, which is laborious to execute and confusing to read.\r\n\r\nWhere that registry should be created depends on its intended contents.  If all future VOPRF suites as conceived in the VOPRF draft will continue to be exactly what you want for Privacy Pass, then the VOPRF draft can open the registry.  Otherwise (e.g. if we envision extending Privacy Pass to publicly verifiable ciphersuites), we'll need to define it here.\r\n\r\nAt the moment, the latter seems more likely.",
              "createdAt": "2021-10-05T14:38:46Z",
              "updatedAt": "2021-10-05T14:38:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84t_S_R",
          "commit": {
            "abbreviatedOid": "db0af02"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-05T14:57:07Z",
          "updatedAt": "2021-10-05T14:57:08Z",
          "comments": [
            {
              "originalPosition": 211,
              "body": "Yeah, for example in a future world where we have a Blind BLS suite and a POPRF suite, it seems like we'll want some containing ciphersuite that refers to one or the other.",
              "createdAt": "2021-10-05T14:57:08Z",
              "updatedAt": "2021-10-05T14:57:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84t_TIq",
          "commit": {
            "abbreviatedOid": "db0af02"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-05T14:57:36Z",
          "updatedAt": "2021-10-05T14:57:50Z",
          "comments": [
            {
              "originalPosition": 219,
              "body": "Assuming we want to do a separate IANA registry, we might want to pare down the ones that are initially defined?",
              "createdAt": "2021-10-05T14:57:36Z",
              "updatedAt": "2021-10-05T14:57:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84t__x6",
          "commit": {
            "abbreviatedOid": "db0af02"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-05T17:38:50Z",
          "updatedAt": "2021-10-05T17:38:50Z",
          "comments": [
            {
              "originalPosition": 211,
              "body": "Sorry, I don't really follow. Why would those things be in the same registry? This document is really just a thin wrapper around the POPRF, and no updates would be needed if new POPRF suites were added. In other words, the POPRF document owns the registry for POPRF suites. \r\n\r\nPrivacy Pass variants based on blind signatures would be thin wrappers around some future blind signature protocol, that itself would have its own registry (or that variant of Privacy Pass would have its own registry). Either way, it seems unnecessary here.",
              "createdAt": "2021-10-05T17:38:50Z",
              "updatedAt": "2021-10-05T17:39:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84uABvu",
          "commit": {
            "abbreviatedOid": "db0af02"
          },
          "author": "bemasc",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-05T17:47:18Z",
          "updatedAt": "2021-10-05T17:47:18Z",
          "comments": [
            {
              "originalPosition": 211,
              "body": "Perhaps PMBTokens (an alternative to VOPRF that also matches the synchronous model) is a clearer example than Blind Signatures (which can also be made to fit into the synchronous model, but perhaps less elegantly).",
              "createdAt": "2021-10-05T17:47:18Z",
              "updatedAt": "2021-10-05T17:47:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84uADGT",
          "commit": {
            "abbreviatedOid": "db0af02"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-05T17:51:13Z",
          "updatedAt": "2021-10-05T17:51:14Z",
          "comments": [
            {
              "originalPosition": 211,
              "body": "I see your point, but it's not clear to me we actually want a single registry to list different \"modes\" of privacy pass, e.g., one without private metadata (POPRF) and one with private metadata (PMBTokens). Why not just make that a separate thing altogether? What's the value of merging these things?",
              "createdAt": "2021-10-05T17:51:13Z",
              "updatedAt": "2021-10-05T17:51:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84uATo2",
          "commit": {
            "abbreviatedOid": "db0af02"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-05T18:20:26Z",
          "updatedAt": "2021-10-05T18:20:26Z",
          "comments": [
            {
              "originalPosition": 211,
              "body": "At some layer we need to indicate what protocol is being used for a web/HTTP API. Be it PrivacyPassVOPRFP521 or PrivacyPassCoolPostQuantum or PrivacyPassBLS. Seems like something that the PrivacyPass WG should define somewhere as things that higher level things point to, though maybe we don't have that in the Integration doc and put it somewhere else?",
              "createdAt": "2021-10-05T18:20:26Z",
              "updatedAt": "2021-10-05T18:20:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84uAekO",
          "commit": {
            "abbreviatedOid": "db0af02"
          },
          "author": "bemasc",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-05T19:02:52Z",
          "updatedAt": "2021-10-05T19:02:53Z",
          "comments": [
            {
              "originalPosition": 211,
              "body": "The goal mentioned in the proposed schedule is to support ecosystems containing a mixture of clients and issuers that support POPRF and non-POPRF ciphersuites.  That means one way or another, different ciphersuite families need to be accessible from the same server identity.\r\n\r\nFor clarity, it might be more helpful to frame this question in terms of the specific structs in the HTTP API draft.",
              "createdAt": "2021-10-05T19:02:52Z",
              "updatedAt": "2021-10-05T19:02:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84uAfOq",
          "commit": {
            "abbreviatedOid": "db0af02"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-05T19:05:52Z",
          "updatedAt": "2021-10-05T19:05:53Z",
          "comments": [
            {
              "originalPosition": 211,
              "body": "> The goal mentioned in the proposed schedule is to support ecosystems containing a mixture of clients and issuers that support POPRF and non-POPRF ciphersuites. That means one way or another, different ciphersuite families need to be accessible from the same server identity.\r\n\r\nSure, but they could so by using separate types of key configurations or otherwise making this decision at the application layer. The goal of the schedule doesn't seem to require that a joint registry be created.\r\n\r\n> For clarity, it might be more helpful to frame this question in terms of the specific structs in the HTTP API draft.\r\n\r\nI'm not sure. I expect many users of Privacy Pass to just use the wire formats described in this doc.",
              "createdAt": "2021-10-05T19:05:53Z",
              "updatedAt": "2021-10-05T19:05:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84uEpIi",
          "commit": {
            "abbreviatedOid": "db0af02"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-06T16:29:28Z",
          "updatedAt": "2021-10-06T16:29:28Z",
          "comments": [
            {
              "originalPosition": 211,
              "body": "> Be it PrivacyPassVOPRFP521 or PrivacyPassCoolPostQuantum or PrivacyPassBLS. Seems like something that the PrivacyPass WG should define somewhere as things that higher level things point to\r\n\r\n@dvorak42 I guess what gives me pause is that putting everything behind a single registry implies that all values in that registry have similar properties, but that's not the case here. In contrast to, say, TLS algorithm registries, which are really just different algorithms with the same set of features. The things we're considering merging here have fundamentally different features (or at least they do in my opinion), so it's not clear to me that merging them is appropriate. (Sorry if I'm not making my thinking clear!)",
              "createdAt": "2021-10-06T16:29:28Z",
              "updatedAt": "2021-10-06T16:29:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84uZ18X",
          "commit": {
            "abbreviatedOid": "db0af02"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-13T12:49:51Z",
          "updatedAt": "2021-10-13T12:49:51Z",
          "comments": [
            {
              "originalPosition": 211,
              "body": "Bump?",
              "createdAt": "2021-10-13T12:49:51Z",
              "updatedAt": "2021-10-13T12:49:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84ugJqF",
          "commit": {
            "abbreviatedOid": "db0af02"
          },
          "author": "bemasc",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-14T19:45:23Z",
          "updatedAt": "2021-10-14T19:45:23Z",
          "comments": [
            {
              "originalPosition": 211,
              "body": "@chris-wood Maybe you could send a PR that updates draft-ietf-privacypass-http-api in the way you're thinking?",
              "createdAt": "2021-10-14T19:45:23Z",
              "updatedAt": "2021-10-14T19:45:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84ugL4n",
          "commit": {
            "abbreviatedOid": "db0af02"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-14T19:55:50Z",
          "updatedAt": "2021-10-14T19:55:51Z",
          "comments": [
            {
              "originalPosition": 211,
              "body": "Sure: https://github.com/ietf-wg-privacypass/base-drafts/pull/85",
              "createdAt": "2021-10-14T19:55:50Z",
              "updatedAt": "2021-10-14T19:55:51Z"
            }
          ]
        }
      ]
    },
    {
      "number": 85,
      "id": "PR_kwDODeTEy84tOCWS",
      "title": "Example integration into HTTP doc",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/85",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This versions at the application layer. We could have a way for servers to advertise the variants they support if needed, which would be another simple resource to add. ",
      "createdAt": "2021-10-14T19:55:43Z",
      "updatedAt": "2022-06-22T14:03:49Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "master",
      "baseRefOid": "920b6e608e2774837ae23487a4d772d6f7a2b5e3",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/example-usage",
      "headRefOid": "e92e07ad03f4ca5163b81106f4f08e94a0efc493",
      "closedAt": "2021-12-14T00:18:21Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "alxdavids",
          "authorAssociation": "COLLABORATOR",
          "body": "FWIW, this looks good to me, except that we probably want to reference the P384 ciphersuite following the recent change in #83.",
          "createdAt": "2021-10-19T12:44:25Z",
          "updatedAt": "2021-10-19T12:44:25Z"
        },
        {
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "body": "Is this ready to be merged? Looks like it's only listed as a draft?\r\n\r\nAny reason for the change to the endpoints from being a single endpoint to per-stage? I wonder if we need to specify that much or let the server configuration dictate what endpoint(s) to hit.",
          "createdAt": "2021-10-19T13:32:24Z",
          "updatedAt": "2021-10-19T13:32:24Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 86,
      "id": "PR_kwDODeTEy84vxx2f",
      "title": "Refactor architecture document into PAT-like protocols and entities",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/86",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This reshuffles quite a bit to frame Privacy Pass as two protocols -- issuance and redemption -- run between Clients, Mediators, Issuers, and Origins. \r\n\r\nFirst draft, so there may be things we want to rephrase or reflow. \r\n\r\nRendered view of this PR [is here](https://ietf-wg-privacypass.github.io/base-drafts/caw/arch-refactor/draft-ietf-privacypass-architecture.html).",
      "createdAt": "2021-12-13T19:12:16Z",
      "updatedAt": "2022-06-22T14:03:47Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "master",
      "baseRefOid": "920b6e608e2774837ae23487a4d772d6f7a2b5e3",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/arch-refactor",
      "headRefOid": "b9f4685549adfea4ead4cc67421f74953cc22a06",
      "closedAt": "2022-01-31T18:18:03Z",
      "mergedAt": "2022-01-31T18:18:03Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "99589afc196039fa7907877bf2ab0288c115b84b"
      },
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "Whitespace errors?\r\n```\r\ndraft-ietf-privacypass-architecture.md contains trailing whitespace\r\n48\r\n*** Run 'make fix-lint' to automatically fix some errors\r\n49\r\nmake: *** [lib/main.mk:205: lint-whitespace] Error 1\r\n```",
          "createdAt": "2021-12-17T19:00:50Z",
          "updatedAt": "2021-12-17T19:00:50Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "@tfpauly fixed!",
          "createdAt": "2021-12-17T19:02:01Z",
          "updatedAt": "2021-12-17T19:02:01Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Merging this per the discussion during the interim meeting today. ",
          "createdAt": "2022-01-31T18:17:56Z",
          "updatedAt": "2022-01-31T18:17:56Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy84xgvC7",
          "commit": {
            "abbreviatedOid": "c44ed07"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-12-13T19:30:12Z",
          "updatedAt": "2021-12-13T19:41:40Z",
          "comments": [
            {
              "originalPosition": 56,
              "body": "```suggestion\r\nsuch as through the use of long-term cookies, are not privacy-friendly\r\n```",
              "createdAt": "2021-12-13T19:30:12Z",
              "updatedAt": "2021-12-13T19:41:40Z"
            },
            {
              "originalPosition": 63,
              "body": "Does this need to say \"original\"?\r\n\r\n```suggestion\r\nThe most basic Privacy Pass protocol provides a set of cross-origin\r\n```",
              "createdAt": "2021-12-13T19:31:20Z",
              "updatedAt": "2021-12-13T19:41:40Z"
            },
            {
              "originalPosition": 73,
              "body": "I think we should mention that the issuer/mediator can be combined as one entity. Perhaps, say these are three functions, rather than three entities?",
              "createdAt": "2021-12-13T19:32:35Z",
              "updatedAt": "2021-12-13T19:41:40Z"
            },
            {
              "originalPosition": 99,
              "body": "Perhaps the Client -> Mediator flow should indicate a first authentication/validation step?",
              "createdAt": "2021-12-13T19:33:26Z",
              "updatedAt": "2021-12-13T19:41:40Z"
            },
            {
              "originalPosition": 189,
              "body": "Maybe call this Issuer identity? And maybe list it as the second item?",
              "createdAt": "2021-12-13T19:34:30Z",
              "updatedAt": "2021-12-13T19:41:40Z"
            },
            {
              "originalPosition": 99,
              "body": "I like the later diagram that has \"attest\"",
              "createdAt": "2021-12-13T19:35:02Z",
              "updatedAt": "2021-12-13T19:41:40Z"
            },
            {
              "originalPosition": 73,
              "body": "We can also bike shed on the \"mediator\" name. I do like the \"attest\" verb you are using elsewhere. \"Attestor\"?",
              "createdAt": "2021-12-13T19:35:39Z",
              "updatedAt": "2021-12-13T19:41:40Z"
            },
            {
              "originalPosition": 391,
              "body": "This should be noted as optional, if it's part of the description at all. I'd be tempted to not mention it as a top-level responsibility, but rather say that the mediator can attest to more than just validity of client, but can attest based on state it knows.",
              "createdAt": "2021-12-13T19:37:17Z",
              "updatedAt": "2021-12-13T19:41:40Z"
            },
            {
              "originalPosition": 394,
              "body": "```suggestion\r\nsome issuance protocols that enforce rate limits. For example, the Issuer may\r\n```",
              "createdAt": "2021-12-13T19:37:23Z",
              "updatedAt": "2021-12-13T19:41:40Z"
            },
            {
              "originalPosition": 965,
              "body": "I think we should be clear that this is only need for non-interactive passes.",
              "createdAt": "2021-12-13T19:39:41Z",
              "updatedAt": "2021-12-13T19:41:40Z"
            },
            {
              "originalPosition": 980,
              "body": "We should mention tokens being scoped to an origin here, or being interactive, as a way to avoid this.",
              "createdAt": "2021-12-13T19:40:20Z",
              "updatedAt": "2021-12-13T19:41:40Z"
            },
            {
              "originalPosition": 1003,
              "body": "AV and SRR are no longer defined in the document.",
              "createdAt": "2021-12-13T19:40:45Z",
              "updatedAt": "2021-12-13T19:41:40Z"
            },
            {
              "originalPosition": 1091,
              "body": "I do like the approach of having clients limit the number of non-interactive cross-origin tokens they're willing to maintain from different Issuers.",
              "createdAt": "2021-12-13T19:41:30Z",
              "updatedAt": "2021-12-13T19:41:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84xg3iS",
          "commit": {
            "abbreviatedOid": "4055e17"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-12-13T20:03:57Z",
          "updatedAt": "2021-12-13T20:03:57Z",
          "comments": [
            {
              "originalPosition": 189,
              "body": "Yep, that's better \ud83d\udc4d ",
              "createdAt": "2021-12-13T20:03:57Z",
              "updatedAt": "2021-12-13T20:03:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84xg-SR",
          "commit": {
            "abbreviatedOid": "4055e17"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-12-13T20:34:42Z",
          "updatedAt": "2021-12-13T20:34:43Z",
          "comments": [
            {
              "originalPosition": 106,
              "body": "```suggestion\r\n Client        Attestor          Issuer          Origin\r\n\r\n    <---------------------------------------- Challenge \\\r\n                                                        |\r\n+--------------------------------------------\\          |\r\n| Attest --->                          |          |\r\n| TokenRequest ------------------>       |          |\r\n|                                 (validate) | Issuance | Redemption\r\n|                                 (evaluate) |   Flow   |   Flow\r\n|   <------------ TokenResponse      |          |\r\n---------------------------------------------/          |\r\n                                                        |\r\n```",
              "createdAt": "2021-12-13T20:34:43Z",
              "updatedAt": "2021-12-13T20:34:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84xg_7i",
          "commit": {
            "abbreviatedOid": "4055e17"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-12-13T20:42:08Z",
          "updatedAt": "2021-12-13T20:42:08Z",
          "comments": [
            {
              "originalPosition": 354,
              "body": "Can we call this Attester, have only one function, and talk about how the attester can attest to other attributes than client identity/legitimacy. For example, this could be geolocation or client state/rate limiting.",
              "createdAt": "2021-12-13T20:42:08Z",
              "updatedAt": "2021-12-13T20:42:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84xiV5b",
          "commit": {
            "abbreviatedOid": "4055e17"
          },
          "author": "janaiyengar",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "A few comments, but this is a great cut! Thanks, Chris!",
          "createdAt": "2021-12-14T07:08:17Z",
          "updatedAt": "2021-12-14T07:51:36Z",
          "comments": [
            {
              "originalPosition": 106,
              "body": "I definitely like this new figure better.",
              "createdAt": "2021-12-14T07:08:18Z",
              "updatedAt": "2021-12-14T07:51:36Z"
            },
            {
              "originalPosition": 119,
              "body": "This and the following points all seem unnecessary in the Intro, given the preceding sentence that says that the document will describe ecosystem considerations.",
              "createdAt": "2021-12-14T07:13:32Z",
              "updatedAt": "2021-12-14T07:51:36Z"
            },
            {
              "originalPosition": 339,
              "body": "```suggestion\r\nDepending on the use case, issuance may require some form of Client\r\n```",
              "createdAt": "2021-12-14T07:20:58Z",
              "updatedAt": "2021-12-14T07:51:36Z"
            },
            {
              "originalPosition": 362,
              "body": "```suggestion\r\nAttestation is the process by which the Clients bear witness, confirm, or\r\n```",
              "createdAt": "2021-12-14T07:22:48Z",
              "updatedAt": "2021-12-14T07:51:36Z"
            },
            {
              "originalPosition": 417,
              "body": "This is the first time \"Privacy Pass key pair\" is mentioned. Given that this key pair is described below, perhaps rename the section \"Privacy Pass Keys\"?\r\n\r\nAlso, server public key should be Issuer public key, right?",
              "createdAt": "2021-12-14T07:25:56Z",
              "updatedAt": "2021-12-14T07:51:36Z"
            },
            {
              "originalPosition": 420,
              "body": "unclear: for ensuring what?",
              "createdAt": "2021-12-14T07:29:59Z",
              "updatedAt": "2021-12-14T07:51:36Z"
            },
            {
              "originalPosition": 594,
              "body": "```suggestion\r\nreceptive to extensions that expand the current set of functionalities.\r\n```",
              "createdAt": "2021-12-14T07:31:49Z",
              "updatedAt": "2021-12-14T07:51:36Z"
            },
            {
              "originalPosition": 596,
              "body": "I don't understand this requirement -- why SHOULD extensions modify this document? Also, there's a Redemption protocol and an Issuance protocol -- there is no mention of the Privacy Pass protocol so far in this doc.",
              "createdAt": "2021-12-14T07:32:40Z",
              "updatedAt": "2021-12-14T07:51:36Z"
            },
            {
              "originalPosition": 607,
              "body": "```suggestion\r\nthat can easily measure and maximize the relative anonymity of any\r\n```",
              "createdAt": "2021-12-14T07:37:04Z",
              "updatedAt": "2021-12-14T07:51:36Z"
            },
            {
              "originalPosition": 711,
              "body": "```suggestion\r\nIssuers SHOULD invoke key rotation for\r\na period of time between 1 and 12 weeks. Key rotations\r\n```\r\nRECOMMENDED and SHOULD have the same semantic, and SHOULD seems more direct here. Also, if there's a SHOULD, the recommendation should be clear.",
              "createdAt": "2021-12-14T07:42:03Z",
              "updatedAt": "2021-12-14T07:51:36Z"
            },
            {
              "originalPosition": 716,
              "body": "```suggestion\r\nregular cycle to reduce the harmfulness of an Issuer key\r\n```",
              "createdAt": "2021-12-14T07:42:46Z",
              "updatedAt": "2021-12-14T07:51:36Z"
            },
            {
              "originalPosition": 741,
              "body": "```suggestion\r\nWith a large number of Clients, a minimum of one week gives a large enough window for\r\nClients to participate in the Issuance protocol and thus enjoy the\r\nanonymity guarantees of being part of a larger group. A maximum of\r\n```",
              "createdAt": "2021-12-14T07:44:04Z",
              "updatedAt": "2021-12-14T07:51:36Z"
            },
            {
              "originalPosition": 742,
              "body": "```suggestion\r\n12 weeks limits the damage caused by a key compromise. If an Issuer\r\n```",
              "createdAt": "2021-12-14T07:45:14Z",
              "updatedAt": "2021-12-14T07:51:36Z"
            },
            {
              "originalPosition": 752,
              "body": "```suggestion\r\na Client for a token from each Issuer, Origins can learn information about\r\n```",
              "createdAt": "2021-12-14T07:47:45Z",
              "updatedAt": "2021-12-14T07:51:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84xkK2n",
          "commit": {
            "abbreviatedOid": "9ecd592"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-12-14T14:20:57Z",
          "updatedAt": "2021-12-14T14:20:57Z",
          "comments": [
            {
              "originalPosition": 420,
              "body": "I'm not sure -- this is leftover text, so I'll just remove it.",
              "createdAt": "2021-12-14T14:20:57Z",
              "updatedAt": "2021-12-14T14:20:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84xkNjQ",
          "commit": {
            "abbreviatedOid": "9ecd592"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-12-14T14:28:42Z",
          "updatedAt": "2021-12-14T14:28:42Z",
          "comments": [
            {
              "originalPosition": 596,
              "body": "Rephrased!",
              "createdAt": "2021-12-14T14:28:42Z",
              "updatedAt": "2021-12-14T14:28:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84xlm22",
          "commit": {
            "abbreviatedOid": "c02812e"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-12-14T19:24:54Z",
          "updatedAt": "2021-12-14T19:24:56Z",
          "comments": [
            {
              "originalPosition": 101,
              "body": "```suggestion\r\nAt a high level, Privacy Pass is composed of two protocols: issuance\r\nand redemption.\r\n\r\nIssuance is a protocol between a Client and two functions: Attester and Issuer.\r\nThe Attester and Issuer can be functions operated by the same protocol participant,\r\nbut can also be implemented separately. The Issuer is responsible for issuing tokens\r\nin response to requests from Clients. The Attester is responsible for attesting\r\nproperties about the Client for which tokens are issued. The Issuer needs to be\r\ntrusted by the server that later redeems the token. The Attester needs to either be\r\noperated by the Issuer, or be operated by an entity the Issuer trusts to perform valid\r\nattestation. Clients might prefer to select different Attesters, separate from the\r\nIssuer, to be able to use preferred authentication methods or improve privacy by\r\nnot directly communicating with an Issuer. Depending on the information being attested, Attesters may also store state about individual Clients, such as the number of\r\noverall tokens issued thus far. As an example of an Issuance protocol, in the\r\noriginal Privacy Pass protocol {{PPSRV}}, tokens were only issued to Clients\r\nthat solved CAPTCHAs. In this context, the Attester attested that some client\r\nsolved a CAPTCHA and the resulting token produced by the Issuer was proof of\r\nthis fact.\r\n```",
              "createdAt": "2021-12-14T19:24:54Z",
              "updatedAt": "2021-12-14T19:24:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84xmFDu",
          "commit": {
            "abbreviatedOid": "33fbe78"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-12-14T21:33:57Z",
          "updatedAt": "2021-12-14T21:33:57Z",
          "comments": [
            {
              "originalPosition": 101,
              "body": "Applied with some tweaks",
              "createdAt": "2021-12-14T21:33:57Z",
              "updatedAt": "2021-12-14T21:33:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84xnC9R",
          "commit": {
            "abbreviatedOid": "33fbe78"
          },
          "author": "janaiyengar",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "A few comments; thanks for the quick turnaround!",
          "createdAt": "2021-12-15T05:46:57Z",
          "updatedAt": "2021-12-15T06:09:52Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "```suggestion\r\nand redemption.\r\n\r\nThe issuance protocol runs between a Client and two network functions in the Privacy \r\nPass architecture: Attestation and Issuance. These two network functions can be\r\nimplemented by the\r\n```",
              "createdAt": "2021-12-15T05:46:57Z",
              "updatedAt": "2021-12-15T06:09:52Z"
            },
            {
              "originalPosition": 19,
              "body": "Move these descriptions of Issuer and Attester to right after they are introducted above (after `two network functions: Attester and Issuer`).\r\n\r\nAlso, s/server/Origin",
              "createdAt": "2021-12-15T05:48:28Z",
              "updatedAt": "2021-12-15T06:09:52Z"
            },
            {
              "originalPosition": 21,
              "body": "```suggestion\r\nredeems the token. Attestation can be performed by the Issuer or by an\r\nAttester that is trusted by the Issuer.\r\n```",
              "createdAt": "2021-12-15T05:54:10Z",
              "updatedAt": "2021-12-15T06:09:52Z"
            },
            {
              "originalPosition": 24,
              "body": "```suggestion\r\nto be able to use preferred authentication methods or to improve privacy by communicating\r\nindirectly with an Issuer, proxied or mediated through an Attester. Depending on the information being\r\n```",
              "createdAt": "2021-12-15T05:56:33Z",
              "updatedAt": "2021-12-15T06:09:52Z"
            },
            {
              "originalPosition": 25,
              "body": "```suggestion\r\ndirectly communicating with an Issuer. Depending on the attestation,\r\nAttesters can store state about a Client, such as the\r\n```",
              "createdAt": "2021-12-15T06:01:06Z",
              "updatedAt": "2021-12-15T06:09:52Z"
            },
            {
              "originalPosition": 91,
              "body": "```suggestion\r\n  attested to by the Attester.\r\n```",
              "createdAt": "2021-12-15T06:02:19Z",
              "updatedAt": "2021-12-15T06:09:52Z"
            },
            {
              "originalPosition": 93,
              "body": "```suggestion\r\n- Attester: An entity that attests to properties of Client for the\r\n  purposes of token issuance.\r\n```\r\n```suggestion\r\n- Attester: An entity that attests to the properties of a Client required by an Issuer\r\n  for token issuance.\r\n```",
              "createdAt": "2021-12-15T06:04:15Z",
              "updatedAt": "2021-12-15T06:09:52Z"
            },
            {
              "originalPosition": 167,
              "body": "`bear witness` seems strange. What can a Client bearing witness to about itself? Maybe this should be `by which an Attester bears witness to, confirms, or authenticates a Client so as to verify a property about the Client that is required for Issuance.`",
              "createdAt": "2021-12-15T06:07:19Z",
              "updatedAt": "2021-12-15T06:09:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84xpVHB",
          "commit": {
            "abbreviatedOid": "83feb75"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-12-15T14:47:03Z",
          "updatedAt": "2021-12-15T14:47:03Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "As discussed, I don't think we should describe the Attester as a proxy.",
              "createdAt": "2021-12-15T14:47:03Z",
              "updatedAt": "2021-12-15T14:47:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84xpWhT",
          "commit": {
            "abbreviatedOid": "7700fd4"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-12-15T14:51:03Z",
          "updatedAt": "2021-12-15T14:51:03Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "The descriptions of these roles _are_ right after they're introduced, so I'm not sure what this looking for here. Leave a suggestion?",
              "createdAt": "2021-12-15T14:51:03Z",
              "updatedAt": "2021-12-15T14:51:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84xpXAl",
          "commit": {
            "abbreviatedOid": "ba8d3ab"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-12-15T14:52:24Z",
          "updatedAt": "2021-12-15T14:52:24Z",
          "comments": [
            {
              "originalPosition": 167,
              "body": "Yeah, that's better!",
              "createdAt": "2021-12-15T14:52:24Z",
              "updatedAt": "2021-12-15T14:52:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84xqEi6",
          "commit": {
            "abbreviatedOid": "ba8d3ab"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-12-15T17:16:34Z",
          "updatedAt": "2021-12-15T17:26:57Z",
          "comments": [
            {
              "originalPosition": 361,
              "body": "Maybe later on, but should it be explicitly called out that some forms of the protocol might collapse this into another role?",
              "createdAt": "2021-12-15T17:16:34Z",
              "updatedAt": "2021-12-15T17:26:57Z"
            },
            {
              "originalPosition": 390,
              "body": "nit: than the",
              "createdAt": "2021-12-15T17:22:01Z",
              "updatedAt": "2021-12-15T17:26:57Z"
            },
            {
              "originalPosition": 372,
              "body": "Maybe worth splitting out client identity and client issuance state?",
              "createdAt": "2021-12-15T17:24:38Z",
              "updatedAt": "2021-12-15T17:26:57Z"
            },
            {
              "originalPosition": 122,
              "body": "Maybe worth moving Origin to the left to match the other figures?",
              "createdAt": "2021-12-15T17:25:09Z",
              "updatedAt": "2021-12-15T17:26:57Z"
            },
            {
              "originalPosition": 82,
              "body": "cross-origin is a little odd now, since the per-origin tokens aren't quite \"cross-origin\" in the traditional sense versus cross between Origin and Issuer.",
              "createdAt": "2021-12-15T17:26:33Z",
              "updatedAt": "2021-12-15T17:26:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84xqJPP",
          "commit": {
            "abbreviatedOid": "ba8d3ab"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-12-15T17:33:43Z",
          "updatedAt": "2021-12-15T17:33:44Z",
          "comments": [
            {
              "originalPosition": 82,
              "body": "Hmm, I don't follow. Can you elaborate?",
              "createdAt": "2021-12-15T17:33:43Z",
              "updatedAt": "2021-12-15T17:33:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84xqJRw",
          "commit": {
            "abbreviatedOid": "ba8d3ab"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-12-15T17:33:52Z",
          "updatedAt": "2021-12-15T17:33:53Z",
          "comments": [
            {
              "originalPosition": 122,
              "body": "Sure, I'll play with it and see what works.",
              "createdAt": "2021-12-15T17:33:52Z",
              "updatedAt": "2021-12-15T17:33:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84xzYZQ",
          "commit": {
            "abbreviatedOid": "b39ceb8"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-12-17T19:01:02Z",
          "updatedAt": "2021-12-17T19:01:02Z",
          "comments": []
        }
      ]
    },
    {
      "number": 87,
      "id": "PR_kwDODeTEy84vymk_",
      "title": "Aligned issuance protocol",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/87",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Built on the [latest architecture change](#86) and [HTTP-auth mechanism](https://github.com/tfpauly/privacy-proxy/blob/main/draft-pauly-privacypass-auth-scheme.md), and building on #83 as the opinionated approach. This includes both the POPRF variant and RSA variants.",
      "createdAt": "2021-12-13T23:09:55Z",
      "updatedAt": "2022-06-22T14:03:46Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "master",
      "baseRefOid": "920b6e608e2774837ae23487a4d772d6f7a2b5e3",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/pp-issuance",
      "headRefOid": "aec91490d961d6ffb446769d1939e69511586d51",
      "closedAt": "2022-01-31T20:32:57Z",
      "mergedAt": "2022-01-31T20:32:57Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "ca578b74eebf8372fc5d75f1d325c9f670b30afb"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy84xhiXE",
          "commit": {
            "abbreviatedOid": "5ccc88b"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-12-13T23:44:26Z",
          "updatedAt": "2021-12-14T00:44:10Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nabbrev: PP Issuance\r\n```",
              "createdAt": "2021-12-13T23:44:27Z",
              "updatedAt": "2021-12-14T00:44:10Z"
            },
            {
              "originalPosition": 1121,
              "body": "This would be a different token type, right?\r\n```suggestion\r\n    uint16_t token_type = 0x0002\r\n```",
              "createdAt": "2021-12-14T00:42:43Z",
              "updatedAt": "2021-12-14T00:44:10Z"
            },
            {
              "originalPosition": 180,
              "body": "```suggestion\r\n{{!BLINDRSA=I-D.irtf-cfrg-rsa-blind-signatures}}.\r\n```",
              "createdAt": "2021-12-14T00:44:07Z",
              "updatedAt": "2021-12-14T00:44:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84xnNCN",
          "commit": {
            "abbreviatedOid": "26f381d"
          },
          "author": "janaiyengar",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "LGTM, a couple of nits.",
          "createdAt": "2021-12-15T06:37:51Z",
          "updatedAt": "2021-12-15T06:39:07Z",
          "comments": [
            {
              "originalPosition": 1184,
              "body": "```suggestion\r\nThis document outlines how to instantiate the Issuance protocol\r\n```",
              "createdAt": "2021-12-15T06:37:52Z",
              "updatedAt": "2021-12-15T06:39:07Z"
            },
            {
              "originalPosition": 1188,
              "body": "```suggestion\r\nconcerns in a multi-Client and multi-Issuer setting are deferred to the\r\n```",
              "createdAt": "2021-12-15T06:38:09Z",
              "updatedAt": "2021-12-15T06:39:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84xpnk7",
          "commit": {
            "abbreviatedOid": "e435a2e"
          },
          "author": "alxdavids",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "It looks fine to me \ud83d\udc4d ",
          "createdAt": "2021-12-15T15:40:48Z",
          "updatedAt": "2021-12-15T15:41:53Z",
          "comments": [
            {
              "originalPosition": 1185,
              "body": "Should these considerations also ref the blind RSA doc?",
              "createdAt": "2021-12-15T15:40:49Z",
              "updatedAt": "2021-12-15T15:41:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84xprnJ",
          "commit": {
            "abbreviatedOid": "e435a2e"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-12-15T15:53:49Z",
          "updatedAt": "2021-12-15T15:53:49Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODeTEy84xqCof",
          "commit": {
            "abbreviatedOid": "e435a2e"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-12-15T17:09:53Z",
          "updatedAt": "2021-12-15T17:13:38Z",
          "comments": [
            {
              "originalPosition": 459,
              "body": "Should this be token_type or the struct updated up above?",
              "createdAt": "2021-12-15T17:09:53Z",
              "updatedAt": "2021-12-15T17:13:38Z"
            },
            {
              "originalPosition": 893,
              "body": "nit: Same as above.",
              "createdAt": "2021-12-15T17:11:59Z",
              "updatedAt": "2021-12-15T17:13:38Z"
            },
            {
              "originalPosition": 1234,
              "body": "Public -> Publicly Verifiable since we have a  Public Metadata column now?",
              "createdAt": "2021-12-15T17:13:24Z",
              "updatedAt": "2021-12-15T17:13:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84xqFuC",
          "commit": {
            "abbreviatedOid": "e435a2e"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-12-15T17:20:46Z",
          "updatedAt": "2021-12-15T17:20:46Z",
          "comments": [
            {
              "originalPosition": 459,
              "body": "Yep!",
              "createdAt": "2021-12-15T17:20:46Z",
              "updatedAt": "2021-12-15T17:20:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84xqFz1",
          "commit": {
            "abbreviatedOid": "e435a2e"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-12-15T17:21:06Z",
          "updatedAt": "2021-12-15T17:21:06Z",
          "comments": [
            {
              "originalPosition": 1234,
              "body": "Yep, good suggestion.",
              "createdAt": "2021-12-15T17:21:06Z",
              "updatedAt": "2021-12-15T17:21:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84xrQHR",
          "commit": {
            "abbreviatedOid": "f87c7f9"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-12-15T21:27:44Z",
          "updatedAt": "2021-12-15T21:27:44Z",
          "comments": [
            {
              "originalPosition": 1196,
              "body": "```suggestion\r\n## Token Type\r\n\r\nThis document updates the \"Token Type\" Registry with the following values.\r\n```",
              "createdAt": "2021-12-15T21:27:44Z",
              "updatedAt": "2021-12-15T21:27:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84xrQYo",
          "commit": {
            "abbreviatedOid": "f87c7f9"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-12-15T21:29:04Z",
          "updatedAt": "2021-12-15T21:29:10Z",
          "comments": [
            {
              "originalPosition": 1236,
              "body": "```suggestion\r\n{: #aeadid-values title=\"Token Types\"}\r\n\r\n## Media Types\r\n\r\nThis specification defines the following protocol messages, along with their\r\ncorresponding media types:\r\n\r\n- TokenRequest: \"message/token-request\"\r\n- TokenResponse: \"message/token-response\"\r\n\r\nThe definition for each media type is in the following subsections.\r\n\r\n### \"message/token-request\" media type\r\n\r\nType name:\r\n\r\n: message\r\n\r\nSubtype name:\r\n\r\n: token-request\r\n\r\nRequired parameters:\r\n\r\n: N/A\r\n\r\nOptional parameters:\r\n\r\n: None\r\n\r\nEncoding considerations:\r\n\r\n: only \"8bit\" or \"binary\" is permitted\r\n\r\nSecurity considerations:\r\n\r\n: see {{issuance}}\r\n\r\nInteroperability considerations:\r\n\r\n: N/A\r\n\r\nPublished specification:\r\n\r\n: this specification\r\n\r\nApplications that use this media type:\r\n\r\n: N/A\r\n\r\nFragment identifier considerations:\r\n\r\n: N/A\r\n\r\nAdditional information:\r\n\r\n: <dl>\r\n  <dt>Magic number(s):</dt><dd>N/A</dd>\r\n  <dt>Deprecated alias names for this type:</dt><dd>N/A</dd>\r\n  <dt>File extension(s):</dt><dd>N/A</dd>\r\n  <dt>Macintosh file type code(s):</dt><dd>N/A</dd>\r\n  </dl>\r\n\r\nPerson and email address to contact for further information:\r\n\r\n: see Authors' Addresses section\r\n\r\nIntended usage:\r\n\r\n: COMMON\r\n\r\nRestrictions on usage:\r\n\r\n: N/A\r\n\r\nAuthor:\r\n\r\n: see Authors' Addresses section\r\n\r\nChange controller:\r\n\r\n: IESG\r\n\r\n### \"message/token-response\" media type\r\n\r\nType name:\r\n\r\n: message\r\n\r\nSubtype name:\r\n\r\n: access-token-response\r\n\r\nRequired parameters:\r\n\r\n: N/A\r\n\r\nOptional parameters:\r\n\r\n: None\r\n\r\nEncoding considerations:\r\n\r\n: only \"8bit\" or \"binary\" is permitted\r\n\r\nSecurity considerations:\r\n\r\n: see {{issuance}}\r\n\r\nInteroperability considerations:\r\n\r\n: N/A\r\n\r\nPublished specification:\r\n\r\n: this specification\r\n\r\nApplications that use this media type:\r\n\r\n: N/A\r\n\r\nFragment identifier considerations:\r\n\r\n: N/A\r\n\r\nAdditional information:\r\n\r\n: <dl>\r\n  <dt>Magic number(s):</dt><dd>N/A</dd>\r\n  <dt>Deprecated alias names for this type:</dt><dd>N/A</dd>\r\n  <dt>File extension(s):</dt><dd>N/A</dd>\r\n  <dt>Macintosh file type code(s):</dt><dd>N/A</dd>\r\n  </dl>\r\n\r\nPerson and email address to contact for further information:\r\n\r\n: see Authors' Addresses section\r\n\r\nIntended usage:\r\n\r\n: COMMON\r\n\r\nRestrictions on usage:\r\n\r\n: N/A\r\n\r\nAuthor:\r\n\r\n: see Authors' Addresses section\r\n\r\nChange controller:\r\n\r\n: IESG\r\n```",
              "createdAt": "2021-12-15T21:29:04Z",
              "updatedAt": "2021-12-15T21:29:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84xriUY",
          "commit": {
            "abbreviatedOid": "f8f0748"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-12-15T23:08:31Z",
          "updatedAt": "2021-12-15T23:08:32Z",
          "comments": [
            {
              "originalPosition": 730,
              "body": "```suggestion\r\n- \"token_type\" is a 2-octet integer, which matches the type in the challenge.\r\n```",
              "createdAt": "2021-12-15T23:08:32Z",
              "updatedAt": "2021-12-15T23:08:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84xriYP",
          "commit": {
            "abbreviatedOid": "f8f0748"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-12-15T23:08:56Z",
          "updatedAt": "2021-12-15T23:08:56Z",
          "comments": [
            {
              "originalPosition": 506,
              "body": "Does it make sense to refer to versions here?",
              "createdAt": "2021-12-15T23:08:56Z",
              "updatedAt": "2021-12-15T23:08:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84xriay",
          "commit": {
            "abbreviatedOid": "f8f0748"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-12-15T23:09:10Z",
          "updatedAt": "2021-12-15T23:09:10Z",
          "comments": [
            {
              "originalPosition": 768,
              "body": "Same question about version",
              "createdAt": "2021-12-15T23:09:10Z",
              "updatedAt": "2021-12-15T23:09:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84xrigj",
          "commit": {
            "abbreviatedOid": "f8f0748"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-12-15T23:09:46Z",
          "updatedAt": "2021-12-15T23:10:18Z",
          "comments": [
            {
              "originalPosition": 850,
              "body": "```suggestion\r\n# Security considerations {#security-considerations}\r\n\r\n```",
              "createdAt": "2021-12-15T23:09:46Z",
              "updatedAt": "2021-12-15T23:10:18Z"
            },
            {
              "originalPosition": 938,
              "body": "```suggestion\r\n: see {{security-considerations}}\r\n```",
              "createdAt": "2021-12-15T23:09:53Z",
              "updatedAt": "2021-12-15T23:10:18Z"
            },
            {
              "originalPosition": 1213,
              "body": "```suggestion\r\n: see {{security-considerations}}\r\n```",
              "createdAt": "2021-12-15T23:10:06Z",
              "updatedAt": "2021-12-15T23:10:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84xrlIV",
          "commit": {
            "abbreviatedOid": "87c941f"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Aligning terminology...",
          "createdAt": "2021-12-15T23:29:01Z",
          "updatedAt": "2021-12-15T23:32:26Z",
          "comments": [
            {
              "originalPosition": 440,
              "body": "```suggestion\r\n   uint8_t issuer_key_id;\r\n```",
              "createdAt": "2021-12-15T23:29:02Z",
              "updatedAt": "2021-12-15T23:32:27Z"
            },
            {
              "originalPosition": 466,
              "body": "```suggestion\r\n- \"issuer_key_id\" is the least significant byte of the `key_id`.\r\n```",
              "createdAt": "2021-12-15T23:29:36Z",
              "updatedAt": "2021-12-15T23:32:27Z"
            },
            {
              "originalPosition": 506,
              "body": "```suggestion\r\n- The TokenRequest contains a supported token_type\r\n- The TokenRequest.issuer_key_id corresponds to a key ID of a Public Key owned by the issuer.\r\n- The TokenRequest.blinded_msg is of the correct size\r\n```",
              "createdAt": "2021-12-15T23:30:40Z",
              "updatedAt": "2021-12-15T23:32:27Z"
            },
            {
              "originalPosition": 705,
              "body": "```suggestion\r\nblinded_msg, blind_inv = rsabssa_blind(Issuer Key, message)\r\n```",
              "createdAt": "2021-12-15T23:31:09Z",
              "updatedAt": "2021-12-15T23:32:27Z"
            },
            {
              "originalPosition": 720,
              "body": "```suggestion\r\n   uint8_t issuer_key_id;\r\n```",
              "createdAt": "2021-12-15T23:31:22Z",
              "updatedAt": "2021-12-15T23:32:27Z"
            },
            {
              "originalPosition": 733,
              "body": "```suggestion\r\n- \"issuer_key_id\" is the least significant byte of the `key_id`.\r\n```",
              "createdAt": "2021-12-15T23:31:29Z",
              "updatedAt": "2021-12-15T23:32:27Z"
            },
            {
              "originalPosition": 768,
              "body": "```suggestion\r\n- The TokenRequest contains a supported token_type.\r\n- The TokenRequest.issuer_key_id corresponds to a key ID of a Public Key owned by the issuer.\r\n- The TokenRequest.blinded_msg is of the correct size.\r\n```",
              "createdAt": "2021-12-15T23:32:06Z",
              "updatedAt": "2021-12-15T23:32:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84yPxou",
          "commit": {
            "abbreviatedOid": "375a304"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-01-03T19:46:45Z",
          "updatedAt": "2022-01-03T19:46:46Z",
          "comments": [
            {
              "originalPosition": 664,
              "body": "This reference is wrong, since it's pointing to the VOPRF text.",
              "createdAt": "2022-01-03T19:46:46Z",
              "updatedAt": "2022-01-03T19:46:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84yQLEm",
          "commit": {
            "abbreviatedOid": "375a304"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-01-03T23:13:40Z",
          "updatedAt": "2022-01-03T23:13:40Z",
          "comments": [
            {
              "originalPosition": 695,
              "body": "@chris-wood should this be the following?\r\n\r\n```suggestion\r\nblinded_msg, blind_inv = rsabssa_blind(pkI, token_input)\r\n```",
              "createdAt": "2022-01-03T23:13:40Z",
              "updatedAt": "2022-01-03T23:13:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84yQLTp",
          "commit": {
            "abbreviatedOid": "375a304"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-01-03T23:16:26Z",
          "updatedAt": "2022-01-03T23:16:27Z",
          "comments": [
            {
              "originalPosition": 664,
              "body": "```suggestion\r\n  described in {{public-issuer-configuration}}.\r\n```",
              "createdAt": "2022-01-03T23:16:26Z",
              "updatedAt": "2022-01-03T23:16:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84yQLdh",
          "commit": {
            "abbreviatedOid": "4bfd0b6"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-01-03T23:18:13Z",
          "updatedAt": "2022-01-03T23:18:14Z",
          "comments": [
            {
              "originalPosition": 664,
              "body": "Fixed \ud83d\udc4d ",
              "createdAt": "2022-01-03T23:18:13Z",
              "updatedAt": "2022-01-03T23:18:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84zqh-d",
          "commit": {
            "abbreviatedOid": "4bfd0b6"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-01-28T23:11:19Z",
          "updatedAt": "2022-01-28T23:12:46Z",
          "comments": [
            {
              "originalPosition": 431,
              "body": "```suggestion\r\n   uint8_t token_key_id;\r\n```",
              "createdAt": "2022-01-28T23:11:20Z",
              "updatedAt": "2022-01-28T23:12:46Z"
            },
            {
              "originalPosition": 453,
              "body": "```suggestion\r\n- \"token_key_id\" is the least significant byte of the `key_id`.\r\n```",
              "createdAt": "2022-01-28T23:11:38Z",
              "updatedAt": "2022-01-28T23:12:47Z"
            },
            {
              "originalPosition": 495,
              "body": "```suggestion\r\n- The TokenRequest.token_key_id corresponds to a key ID of a Public Key owned by the issuer.\r\n```",
              "createdAt": "2022-01-28T23:11:53Z",
              "updatedAt": "2022-01-28T23:12:47Z"
            },
            {
              "originalPosition": 710,
              "body": "```suggestion\r\n   uint8_t token_key_id;\r\n```",
              "createdAt": "2022-01-28T23:12:11Z",
              "updatedAt": "2022-01-28T23:12:47Z"
            },
            {
              "originalPosition": 756,
              "body": "```suggestion\r\n- The TokenRequest.token_key_id corresponds to a key ID of a Public Key owned by the issuer.\r\n```",
              "createdAt": "2022-01-28T23:12:41Z",
              "updatedAt": "2022-01-28T23:12:47Z"
            },
            {
              "originalPosition": 723,
              "body": "```suggestion\r\n- \"token_key_id\" is the least significant byte of the `key_id`.\r\n```",
              "createdAt": "2022-01-28T23:12:42Z",
              "updatedAt": "2022-01-28T23:12:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84zqi_p",
          "commit": {
            "abbreviatedOid": "4ff79ca"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-01-28T23:20:59Z",
          "updatedAt": "2022-01-28T23:20:59Z",
          "comments": [
            {
              "originalPosition": 625,
              "body": "```suggestion\r\nkey_id = SHA256(0x0001 || SerializeElement(pkI))\r\n```",
              "createdAt": "2022-01-28T23:20:59Z",
              "updatedAt": "2022-01-28T23:20:59Z"
            }
          ]
        }
      ]
    },
    {
      "number": 88,
      "id": "PR_kwDODeTEy84v-iDg",
      "title": "Clarify large issuer quantity case",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/88",
      "state": "MERGED",
      "author": "smhendrickson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-12-16T23:50:56Z",
      "updatedAt": "2021-12-17T13:20:02Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "caw/arch-refactor",
      "baseRefOid": "fba055ff97aab05d36849d5a1fee5bd50183a47d",
      "headRepository": "smhendrickson/base-drafts",
      "headRefName": "patch-1",
      "headRefOid": "a788a5d9df70926bb3423a92534749f9ba1766e5",
      "closedAt": "2021-12-17T13:20:02Z",
      "mergedAt": "2021-12-17T13:20:02Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "b39ceb8ac02abba737b1bb17737a46a6c632f768"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy84xyHtp",
          "commit": {
            "abbreviatedOid": "61806bc"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-12-17T13:19:41Z",
          "updatedAt": "2021-12-17T13:19:41Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "```suggestion\r\nare a large number of Issuers and Origins accept all of them segregation \r\n```",
              "createdAt": "2021-12-17T13:19:41Z",
              "updatedAt": "2021-12-17T13:19:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84xyHvu",
          "commit": {
            "abbreviatedOid": "61806bc"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-12-17T13:19:50Z",
          "updatedAt": "2021-12-17T13:19:50Z",
          "comments": []
        }
      ]
    },
    {
      "number": 91,
      "id": "PR_kwDODeTEy84x3mw7",
      "title": "Align POPRF issuance with the latest VOPRF draft",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/91",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "draft-irtf-cfrg-voprf-09 went out today, and this just aligns the basic issuance protocol on top of those changes. \r\n\r\ncc @armfazh ",
      "createdAt": "2022-01-31T23:10:56Z",
      "updatedAt": "2022-06-22T14:03:46Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "master",
      "baseRefOid": "80dac5d600b7ba250d5b3f30b75a560df59ee31a",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/align-poprf",
      "headRefOid": "9db25e1d3eeaf49ac52c9d68d775215496ed8360",
      "closedAt": "2022-01-31T23:33:38Z",
      "mergedAt": "2022-01-31T23:33:38Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "a3f9004e932831a6284723fa74209e260c6500be"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy84zxKb5",
          "commit": {
            "abbreviatedOid": "25792e3"
          },
          "author": "armfazh",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-01-31T23:17:12Z",
          "updatedAt": "2022-01-31T23:19:14Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "```suggestion\r\nThe Client first creates a context as follows:\r\n```",
              "createdAt": "2022-01-31T23:17:12Z",
              "updatedAt": "2022-01-31T23:19:14Z"
            }
          ]
        }
      ]
    },
    {
      "number": 92,
      "id": "PR_kwDODeTEy84x62Vm",
      "title": "Address correlation attacks",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/92",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Drafty draft that addresses #90. I tried to generalize the problem and focus on correlation via either the _source_ for an event, like the client IP address or whatever, and the _context_ of an event, like the timestamp at which it occurs or the origin associated with the event. It is not a tremendous problem if two things are correlated via context so long as the clients are not linkable. (This is the argument with things like ODoH, where we can't link any two requests to the same client, but we can link two requests as being related.) What's most important here, I think, is source correlation, and clients can control this by working _through_ an attester or some other proxy.\r\n\r\nWhat do folks think?\r\n\r\nStarting as a draft while we work on the presentation.\r\n\r\nCloses #90.",
      "createdAt": "2022-02-01T17:33:56Z",
      "updatedAt": "2022-06-22T14:03:44Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "master",
      "baseRefOid": "a3f9004e932831a6284723fa74209e260c6500be",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/correlation",
      "headRefOid": "817ee205851e084604d336fdbd45ccacc24bd47e",
      "closedAt": "2022-03-02T17:11:03Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "@tfpauly @dvorak42 @alxdavids ready for review now. @janaiyengar, please have a look, too!",
          "createdAt": "2022-02-02T19:28:08Z",
          "updatedAt": "2022-02-02T19:28:08Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing in favor of #100.",
          "createdAt": "2022-03-02T17:11:03Z",
          "updatedAt": "2022-03-02T17:11:03Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy84z1Dd8",
          "commit": {
            "abbreviatedOid": "465c3c8"
          },
          "author": "bemasc",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-01T17:43:26Z",
          "updatedAt": "2022-02-01T17:55:34Z",
          "comments": [
            {
              "originalPosition": 46,
              "body": "I don't think this is in scope unless we are also going to discuss architectures and protocols for (safe?) client-to-client token sharing.",
              "createdAt": "2022-02-01T17:43:26Z",
              "updatedAt": "2022-02-01T17:55:34Z"
            },
            {
              "originalPosition": 50,
              "body": "If the issuer doesn't know the client's identity, then it seems to me that the client doesn't need to use blind signatures at all. If this use case is in-scope, I think it would be clearer to offer a very simple Issuance Algorithm that is well-suited for it (e.g. plain ECDSA).",
              "createdAt": "2022-02-01T17:50:22Z",
              "updatedAt": "2022-02-01T17:55:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84z1Mbz",
          "commit": {
            "abbreviatedOid": "465c3c8"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-01T18:02:53Z",
          "updatedAt": "2022-02-01T18:02:54Z",
          "comments": [
            {
              "originalPosition": 46,
              "body": "This is noting that clients _can_ be transferred.",
              "createdAt": "2022-02-01T18:02:53Z",
              "updatedAt": "2022-02-01T18:02:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84z1Lnf",
          "commit": {
            "abbreviatedOid": "465c3c8"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-01T18:00:56Z",
          "updatedAt": "2022-02-01T18:03:16Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "Maybe I'm mixing up terminology, but with per-origin tokens, the issuance context is still the mediator/issuer, while the redemption context is the origin you're getting tokens for?\r\n\r\nWhich means you can still have a malicious entity try linking your mediator-specific state with a particular redemption even with per-origin tokens?",
              "createdAt": "2022-02-01T18:00:57Z",
              "updatedAt": "2022-02-01T18:03:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84z1Mo4",
          "commit": {
            "abbreviatedOid": "465c3c8"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-01T18:03:20Z",
          "updatedAt": "2022-02-01T18:03:20Z",
          "comments": [
            {
              "originalPosition": 50,
              "body": "Sure -- this is why we have the registry of issuance protocols. =)",
              "createdAt": "2022-02-01T18:03:20Z",
              "updatedAt": "2022-02-01T18:03:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84z1Owz",
          "commit": {
            "abbreviatedOid": "465c3c8"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-01T18:08:09Z",
          "updatedAt": "2022-02-01T18:08:09Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "> Maybe I'm mixing up terminology, but with per-origin tokens, the issuance context is still the mediator/issuer, while the redemption context is the origin you're getting tokens for?\r\n\r\nIt depends on the issuance protocol. For per-origin rate-limited tokens, for example, the issuer learns the origin, so the issuance context would include the origin. \r\n\r\nI didn't get into whether or not the attester and issuer are lumped together here.\r\n\r\n> Which means you can still have a malicious entity try linking your mediator-specific state with a particular redemption even with per-origin tokens?\r\n\r\nIf I understand correctly, this is true. Attester state, as in the rate limited case, could possibly be used for linking. We could somehow note that?",
              "createdAt": "2022-02-01T18:08:09Z",
              "updatedAt": "2022-02-01T18:08:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84z1q2q",
          "commit": {
            "abbreviatedOid": "465c3c8"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-01T19:20:14Z",
          "updatedAt": "2022-02-01T19:20:17Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "Maybe just a quick sentence about it, and then expand on it once we discuss the rate limited case where the attester has actual state that could be linked? Though maybe waiting until then is okay.",
              "createdAt": "2022-02-01T19:20:14Z",
              "updatedAt": "2022-02-01T19:20:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84z2NFB",
          "commit": {
            "abbreviatedOid": "465c3c8"
          },
          "author": "bemasc",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-01T21:27:50Z",
          "updatedAt": "2022-02-01T21:49:39Z",
          "comments": [
            {
              "originalPosition": 46,
              "body": "I don't think we can hang our privacy safety claim on a client behavior that is never otherwise standardized, recommended, or even discussed.  Also, this kind of sharing is unsafe in general, and seems unlikely to occur in practice without substantial changes to Privacy Pass.\r\n\r\nIf you want to open this can of worms, I think you have to open it all the way.",
              "createdAt": "2022-02-01T21:27:50Z",
              "updatedAt": "2022-02-01T21:49:39Z"
            },
            {
              "originalPosition": 50,
              "body": "If this architecture  and protocol are intended to cover that use case, then we have an interesting charter discussion, because the charter says: \"An Issuer cannot link a redeemed token to one of N previously created tokens\r\nusing the same key\".\r\n\r\nIf we are covering use cases that have very small effective `N`, even `N=1`, I think that needs to be made very clear to the working group.  Defining a non-blinded token algorithm now could be a good way to focus that discussion.",
              "createdAt": "2022-02-01T21:35:49Z",
              "updatedAt": "2022-02-01T21:49:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84z2V3s",
          "commit": {
            "abbreviatedOid": "465c3c8"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-01T22:08:33Z",
          "updatedAt": "2022-02-01T22:08:33Z",
          "comments": [
            {
              "originalPosition": 46,
              "body": "I think there's a misunderstanding here. Per the charter, a goal of this protocol is to \"specify an extensible protocol for creating and redeeming anonymous and transferrable tokens.\" The key word is _transferrable_. This paragraph is simply acknowledging that tokens _can_ in fact be transferred amongst clients -- by design! It is by no means encouraging this behavior. The can of worms is already open.",
              "createdAt": "2022-02-01T22:08:33Z",
              "updatedAt": "2022-02-01T22:08:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84z2WGq",
          "commit": {
            "abbreviatedOid": "465c3c8"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-01T22:09:39Z",
          "updatedAt": "2022-02-01T22:09:39Z",
          "comments": [
            {
              "originalPosition": 50,
              "body": "> If we are covering use cases that have very small effective N, even N=1, I think that needs to be made very clear to the working group. Defining a non-blinded token algorithm now could be a good way to focus that discussion.\r\n\r\nI disagree. The value of N is _entirely_ deployment specific. It cannot be addressed in the protocol, without an incredibly different design. ",
              "createdAt": "2022-02-01T22:09:39Z",
              "updatedAt": "2022-02-01T22:09:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84z2WM_",
          "commit": {
            "abbreviatedOid": "465c3c8"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-01T22:10:10Z",
          "updatedAt": "2022-02-01T22:10:10Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "A sentence would be good, yeah, noting that issuance protocol state can be used for linking. ",
              "createdAt": "2022-02-01T22:10:10Z",
              "updatedAt": "2022-02-01T22:10:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84z6e7G",
          "commit": {
            "abbreviatedOid": "465c3c8"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-02T18:43:30Z",
          "updatedAt": "2022-02-02T18:49:59Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "```suggestion\r\nis that it needs to provide unconditional input secrecy. This means that an issuance event\r\n```",
              "createdAt": "2022-02-02T18:43:30Z",
              "updatedAt": "2022-02-02T18:49:59Z"
            },
            {
              "originalPosition": 9,
              "body": "```suggestion\r\nand its corresponding redemption event are unlinkable using the contents of\r\n```",
              "createdAt": "2022-02-02T18:44:09Z",
              "updatedAt": "2022-02-02T18:49:59Z"
            },
            {
              "originalPosition": 18,
              "body": "```suggestion\r\nbar.example are related. In contrast, per-origin token contexts are limited a single origin,\r\n```",
              "createdAt": "2022-02-02T18:45:04Z",
              "updatedAt": "2022-02-02T18:49:59Z"
            },
            {
              "originalPosition": 46,
              "body": "How realistic is the handing-off tokens case? If it's not very common, it doesn't seem like a strong mitigation.",
              "createdAt": "2022-02-02T18:46:31Z",
              "updatedAt": "2022-02-02T18:49:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84z6hNE",
          "commit": {
            "abbreviatedOid": "465c3c8"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-02T18:51:23Z",
          "updatedAt": "2022-02-02T18:51:23Z",
          "comments": [
            {
              "originalPosition": 46,
              "body": "This isn't meant to suggest it as a mitigation. It's merely meant to say that an origin cannot guarantee that the same client which went through issuance is the same client which redeemed a token, because they're transferrable. (What part of the text suggests this is a mitigation?)",
              "createdAt": "2022-02-02T18:51:23Z",
              "updatedAt": "2022-02-02T19:02:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84z6iNA",
          "commit": {
            "abbreviatedOid": "3af875b"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-02T18:54:11Z",
          "updatedAt": "2022-02-02T18:54:11Z",
          "comments": [
            {
              "originalPosition": 46,
              "body": "It doesn't directly say it's a mitigation, I was just inferring that.",
              "createdAt": "2022-02-02T18:54:11Z",
              "updatedAt": "2022-02-02T18:54:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84z6i0W",
          "commit": {
            "abbreviatedOid": "3af875b"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-02T18:55:54Z",
          "updatedAt": "2022-02-02T18:55:54Z",
          "comments": [
            {
              "originalPosition": 46,
              "body": "Ah, okay, is there any way we could clarify? (@bemasc zeroed in on this as well, so surely the text could be improved.)",
              "createdAt": "2022-02-02T18:55:54Z",
              "updatedAt": "2022-02-02T18:55:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84z6otL",
          "commit": {
            "abbreviatedOid": "3af875b"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-02T19:27:26Z",
          "updatedAt": "2022-02-02T19:27:26Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "@dvorak42 added state example!",
              "createdAt": "2022-02-02T19:27:26Z",
              "updatedAt": "2022-02-02T19:27:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy840AX-C",
          "commit": {
            "abbreviatedOid": "817ee20"
          },
          "author": "janaiyengar",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-03T23:07:14Z",
          "updatedAt": "2022-02-03T23:07:14Z",
          "comments": [
            {
              "originalPosition": 46,
              "body": "Do we need this paragraph?",
              "createdAt": "2022-02-03T23:07:14Z",
              "updatedAt": "2022-02-03T23:07:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy840AYA7",
          "commit": {
            "abbreviatedOid": "817ee20"
          },
          "author": "janaiyengar",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "One comment, else looks good!",
          "createdAt": "2022-02-03T23:07:35Z",
          "updatedAt": "2022-02-03T23:07:35Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODeTEy840AYL2",
          "commit": {
            "abbreviatedOid": "817ee20"
          },
          "author": "janaiyengar",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-03T23:08:41Z",
          "updatedAt": "2022-02-03T23:08:42Z",
          "comments": [
            {
              "originalPosition": 46,
              "body": "I had the same read as tfpauly -- that this suggests a mitigation, but you're right that it doesn't. If it's not a common use case, why use this example? And I'm then wondering if removing it entirely removes anything importnat -- it seems to me that it doesnt.",
              "createdAt": "2022-02-03T23:08:41Z",
              "updatedAt": "2022-02-03T23:08:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy840AYoI",
          "commit": {
            "abbreviatedOid": "817ee20"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-03T23:11:27Z",
          "updatedAt": "2022-02-03T23:11:27Z",
          "comments": [
            {
              "originalPosition": 46,
              "body": "I think this paragraph is important because it notes that linking issuance and redemption together may not constitute an actual attack. Token transfer is a fundamental property of this protocol. This text acknowledges that property.",
              "createdAt": "2022-02-03T23:11:27Z",
              "updatedAt": "2022-02-03T23:11:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy840AY7A",
          "commit": {
            "abbreviatedOid": "817ee20"
          },
          "author": "janaiyengar",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "ok, sounds good -- thanks for working on this, @chris-wood !",
          "createdAt": "2022-02-03T23:13:20Z",
          "updatedAt": "2022-02-03T23:13:20Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODeTEy840DMII",
          "commit": {
            "abbreviatedOid": "817ee20"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-02-04T15:42:01Z",
          "updatedAt": "2022-02-04T15:42:01Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODeTEy840D6cg",
          "commit": {
            "abbreviatedOid": "817ee20"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-02-04T18:33:49Z",
          "updatedAt": "2022-02-04T18:33:49Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODeTEy840D_sf",
          "commit": {
            "abbreviatedOid": "817ee20"
          },
          "author": "bemasc",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-04T18:54:08Z",
          "updatedAt": "2022-02-04T18:54:09Z",
          "comments": [
            {
              "originalPosition": 46,
              "body": "I still don't think this text is helpful.  Most digital identification systems have this transferability property.  Passwords, private keys, even hardware tokens are all transferable between people.  Transferability is trivial unless there's a reason to expect it will be unusually common.\r\n\r\nThis text seems to be arguing against the strawman position that correlation _always_ harms privacy.  In general, I don't think that there is any technical action that _always_ harms privacy.  The important question is whether there is some real use case where an otherwise-dangerous thing becomes safe.  I would prefer to see the focus there.",
              "createdAt": "2022-02-04T18:54:08Z",
              "updatedAt": "2022-02-04T18:54:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy840EKJI",
          "commit": {
            "abbreviatedOid": "817ee20"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-04T19:41:21Z",
          "updatedAt": "2022-02-04T19:41:21Z",
          "comments": [
            {
              "originalPosition": 46,
              "body": "> I still don't think this text is helpful. Most digital identification systems have this transferability property. Passwords, private keys, even hardware tokens are all transferable between people. Transferability is trivial unless there's a reason to expect it will be unusually common.\r\n> \r\n> This text seems to be arguing against the strawman position that correlation always harms privacy. In general, I don't think that there is any technical action that always harms privacy. The important question is whether there is some real use case where an otherwise-dangerous thing becomes safe. I would prefer to see the focus there.\r\n\r\nI'm trying to understand you but am failing to do so. Surely there are technical actions that always harm privacy. For example, never using HTTPS is harmful, revealing your IP address and other fingerprinting information to an origin is harmful, allowing third-party cookies to track you is harmful, etc. \r\n\r\nIs your objection to the phrasing \"privacy violation\"? If not, what is it?",
              "createdAt": "2022-02-04T19:41:21Z",
              "updatedAt": "2022-02-04T19:41:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy840EPtC",
          "commit": {
            "abbreviatedOid": "817ee20"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-04T20:05:21Z",
          "updatedAt": "2022-02-04T20:05:21Z",
          "comments": [
            {
              "originalPosition": 46,
              "body": "In an attempt to find a compromise, here's a proposed rephrasing of the text:\r\n\r\n~~~\r\nContext correlation between two events may not constitute a privacy violation if \r\nthere is no source correlation between those two events. For example, if issuance\r\nfor a visit to foo.example was correlated to redemption of a visit to bar.example,\r\nyet the source for these two events was uncorrelated, then one only learns that these\r\ntwo events are related and might be associated with the same source (Client). In\r\ncontrast, if the source of these two events were correlated, then one learns that \r\nthe two visits correspond to the same source (Client), thereby leaking browsing history.\r\n~~~\r\n\r\n@tfpauly, @janaiyengar, @bemasc, is this an improvement?",
              "createdAt": "2022-02-04T20:05:21Z",
              "updatedAt": "2022-02-04T20:05:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy840ERI5",
          "commit": {
            "abbreviatedOid": "817ee20"
          },
          "author": "bemasc",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-04T20:12:42Z",
          "updatedAt": "2022-02-04T20:12:42Z",
          "comments": [
            {
              "originalPosition": 46,
              "body": "One way to frame the problem is that this text describes a \"scenario\" involving multiple clients (an \"acquiring client\" and \"redeeming client\"), but this scenario is not contemplated in Section 3, which defines the scope of this design as involving only 4 communicating parties.  We shouldn't be performing security analysis based on scenarios that aren't in scope.\r\n\r\nIt seems like this section inverts the ordinary logic of security analysis.  Instead of asking \"is there any strange situation where this could be dangerous?\", it asks \"is there any strange situation where this could be safe?\".\r\n\r\n> For example, never using HTTPS is harmful\r\n\r\nYes, and this text is like \"Depending on the content used, insecure HTTPS may not be a privacy violation.  In particular, because the HTTP payload may already be encrypted using HPKE, ...\".  This is true, but it's not helpful unless that is a relevant, reasonably common use case.",
              "createdAt": "2022-02-04T20:12:42Z",
              "updatedAt": "2022-02-04T20:12:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy840ERo5",
          "commit": {
            "abbreviatedOid": "817ee20"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-04T20:15:14Z",
          "updatedAt": "2022-02-04T20:15:15Z",
          "comments": [
            {
              "originalPosition": 46,
              "body": "> One way to frame the problem is that this text describes a \"scenario\" involving multiple clients (an \"acquiring client\" and \"redeeming client\"), but this scenario is not contemplated in Section 3, which defines the scope of this design as involving only 4 communicating parties. We shouldn't be performing security analysis based on scenarios that aren't in scope.\r\n\r\nI very strongly disagree with this statement! The protocol is defined in terms of 4 parties, but security and privacy need to account for multiple instances of each. This is fairly common practice.",
              "createdAt": "2022-02-04T20:15:14Z",
              "updatedAt": "2022-02-04T20:15:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy840ESC0",
          "commit": {
            "abbreviatedOid": "817ee20"
          },
          "author": "bemasc",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-04T20:17:18Z",
          "updatedAt": "2022-02-04T20:17:18Z",
          "comments": [
            {
              "originalPosition": 50,
              "body": "Yes, it cannot be addressed in the protocol, but it can be addressed in the architecture documentation, and already is, in section 6.  That section's analysis is invalidated by these changes, and needs to be updated.",
              "createdAt": "2022-02-04T20:17:18Z",
              "updatedAt": "2022-02-04T20:17:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy840ESNw",
          "commit": {
            "abbreviatedOid": "817ee20"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-04T20:18:12Z",
          "updatedAt": "2022-02-04T20:18:12Z",
          "comments": [
            {
              "originalPosition": 50,
              "body": "~~Sure. Separate PR.~~\r\n\r\nActually, I take that back. I don't think this invalidates Section 6, as that section is already somewhat meaningless. I'm going to propose updating that section in a separate change.",
              "createdAt": "2022-02-04T20:18:12Z",
              "updatedAt": "2022-02-04T20:21:58Z"
            }
          ]
        }
      ]
    },
    {
      "number": 94,
      "id": "PR_kwDODeTEy84yGyI8",
      "title": "Point to OPRF and blind RSA function definitions",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/94",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "It's not obvious where to find these things!\r\n\r\ncc @armfazh ",
      "createdAt": "2022-02-04T21:49:49Z",
      "updatedAt": "2022-06-22T14:03:44Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "master",
      "baseRefOid": "a3f9004e932831a6284723fa74209e260c6500be",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/function-pointers",
      "headRefOid": "e364bf0f8e6fefe81eae0c28d1506e320b725e99",
      "closedAt": "2022-02-07T21:14:17Z",
      "mergedAt": "2022-02-07T21:14:17Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "cd845fbac27f1bbddccaa9079856f6d7b530bfac"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy840KnIA",
          "commit": {
            "abbreviatedOid": "e364bf0"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-02-07T20:13:48Z",
          "updatedAt": "2022-02-07T20:13:48Z",
          "comments": []
        }
      ]
    },
    {
      "number": 99,
      "id": "PR_kwDODeTEy84zvU7e",
      "title": "Add configuration parameters",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/99",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #96.\r\n\r\ncc @mnot, @tfpauly ",
      "createdAt": "2022-03-01T16:26:51Z",
      "updatedAt": "2022-06-22T14:03:40Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "master",
      "baseRefOid": "cd845fbac27f1bbddccaa9079856f6d7b530bfac",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/configuration",
      "headRefOid": "4790e89b3e7c1fbd067783fcc9a09dc9f8655a5e",
      "closedAt": "2022-03-02T17:11:12Z",
      "mergedAt": "2022-03-02T17:11:12Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "9cb46ee740b9e88707935753951efa99150dc15d"
      },
      "comments": [
        {
          "author": "mnot",
          "authorAssociation": "NONE",
          "body": "This is fine, but why are you using a well-known location? It seems like it's just adding a RT so that people can avoid using a full URI for configuration. ",
          "createdAt": "2022-03-03T22:54:25Z",
          "updatedAt": "2022-03-03T22:54:25Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "@mnot can you help us understand what would be the preferred alternative? At the end of the day, if I'm an origin or client and need to get this information from an issuer, and all I have is the issuer name, what am I left with?",
          "createdAt": "2022-03-03T22:56:48Z",
          "updatedAt": "2022-03-03T22:56:48Z"
        },
        {
          "author": "mnot",
          "authorAssociation": "NONE",
          "body": "So that's the question -- what does the person using the service have to start with? \r\n\r\nE.g., if I know that the service I want to work with is \"cloudflare\", I still have to discover something more specific, even with the current `.well-known` approach -- I need a hostname (and possibly a port). It might be `cloudflare.com`, but it equally could be `api.cloudflare.com` or `privacypass-inititate.cloudflare.com`.\r\n\r\nSo I have to find it somewhere, probably in documentation. Given that I have to go through that process as a consumer of this API, what's the advantage of configuring with just a hostname, vs. a full URL -- allowing you to skip the .well-known location?\r\n\r\nSkipping the .well-known saves latency and also avoids some caching issues (i.e., how long can you trust the information in it for? How do you manage change?)\r\n\r\nThere are reasons that this would be the case -- e.g., if there's a lot more configuration information to convey (that hasn't made it into the spec yet), the indirection is actually desirable for operational purposes, or that the hostname _can_ be inferred / discovered automatically (e.g., with a DNS record for the registrable domain name). I'm not deep enough into this protocol to know whether any of this is the case.\r\n\r\n",
          "createdAt": "2022-03-03T23:09:19Z",
          "updatedAt": "2022-03-03T23:09:19Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "> E.g., if I know that the service I want to work with is \"cloudflare\", I still have to discover something more specific, even with the current .well-known approach -- I need a hostname (and possibly a port). It might be cloudflare.com, but it equally could be api.cloudflare.com or privacypass-inititate.cloudflare.com.\r\n\r\nI would expect a common practice to be that folks are configured with the full authority (`issuer.example` and the implied :443 port). And [following best practices](https://www.ietf.org/id/draft-ietf-httpbis-bcp56bis-15.html#name-discovering-an-applications), they could then use to this discover additional information using a registered .well-known. \r\n\r\nBut, to your point, if they're configured this way, it's probably reasonable to require them to simply be configured with the full URL used to obtain the configuration dictionary. That is, instead of configuring them `issuer.example`, configure them with `https://issuer.example/my-special-configuraiton-url/`. \r\n\r\nI'm not sure we have enough experience yet to know which of these would be preferred. It's probably worth splitting this off into a separate issue to track as things progress. @tfpauly, thoughts?",
          "createdAt": "2022-03-03T23:39:44Z",
          "updatedAt": "2022-03-03T23:39:44Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy841cBNK",
          "commit": {
            "abbreviatedOid": "8bef0cb"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-03-01T16:28:19Z",
          "updatedAt": "2022-03-01T16:28:19Z",
          "comments": []
        }
      ]
    },
    {
      "number": 100,
      "id": "PR_kwDODeTEy84z19ca",
      "title": "Add deployment models and considerations",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/100",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #90.\r\n\r\ncc @janaiyengar, @tfpauly, @smhendrickson, @dvorak42 ",
      "createdAt": "2022-03-02T17:10:30Z",
      "updatedAt": "2022-03-05T16:50:03Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "master",
      "baseRefOid": "cd845fbac27f1bbddccaa9079856f6d7b530bfac",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/deployment-and-privacy",
      "headRefOid": "984620cf4b116aa7fdd830441259d39a29542257",
      "closedAt": "2022-03-05T16:49:13Z",
      "mergedAt": "2022-03-05T16:49:12Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "4ab8b9dcc090f7114541c9da81866ff4db3db774"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy841hW3p",
          "commit": {
            "abbreviatedOid": "4acf0e3"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-03-02T17:47:35Z",
          "updatedAt": "2022-03-02T17:47:42Z",
          "comments": [
            {
              "originalPosition": 207,
              "body": "It may be good to point out that this model is less useful if there's only one origin for the issuer \u2014 since then the attester knows exactly what the origin is. In that case, some token types aren't advisable.",
              "createdAt": "2022-03-02T17:47:35Z",
              "updatedAt": "2022-03-02T17:47:42Z"
            },
            {
              "originalPosition": 86,
              "body": "Should we mention at all how the client knows which entities are separate? If that's out of scope, can we say so or make a reference?",
              "createdAt": "2022-03-02T17:47:38Z",
              "updatedAt": "2022-03-02T17:47:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy841hZc5",
          "commit": {
            "abbreviatedOid": "4acf0e3"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-03-02T17:52:35Z",
          "updatedAt": "2022-03-02T17:52:35Z",
          "comments": [
            {
              "originalPosition": 86,
              "body": "Hmm, I don't think clients can know they're separate or not colluding. So we could probably just say, \"Mechanisms for enforcing non-collusion are out of scope for this architecture.\"?",
              "createdAt": "2022-03-02T17:52:35Z",
              "updatedAt": "2022-03-02T17:52:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy841haKk",
          "commit": {
            "abbreviatedOid": "4acf0e3"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-03-02T17:53:55Z",
          "updatedAt": "2022-03-02T17:53:55Z",
          "comments": [
            {
              "originalPosition": 207,
              "body": "Indeed, per-origin tokens challenged by a single origin seem useless, though I'm not sure we need to explicitly call it out. Curious to hear what others think!",
              "createdAt": "2022-03-02T17:53:55Z",
              "updatedAt": "2022-03-02T17:53:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy841hbnK",
          "commit": {
            "abbreviatedOid": "4acf0e3"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-03-02T17:56:29Z",
          "updatedAt": "2022-03-02T17:56:29Z",
          "comments": [
            {
              "originalPosition": 86,
              "body": "Yup, that would be good to add.",
              "createdAt": "2022-03-02T17:56:29Z",
              "updatedAt": "2022-03-02T17:56:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy841hcMa",
          "commit": {
            "abbreviatedOid": "4acf0e3"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-03-02T17:57:23Z",
          "updatedAt": "2022-03-02T17:57:23Z",
          "comments": [
            {
              "originalPosition": 207,
              "body": "I think it's important to call out, since it reduces the applicability of this deployment model. If my origin is small (only one real origin), then I should know that this probably isn't the right choice for me.",
              "createdAt": "2022-03-02T17:57:23Z",
              "updatedAt": "2022-03-02T17:57:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy841hdwS",
          "commit": {
            "abbreviatedOid": "4acf0e3"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-03-02T18:02:36Z",
          "updatedAt": "2022-03-02T18:02:36Z",
          "comments": [
            {
              "originalPosition": 207,
              "body": "I don't really agree, but also don't feel strongly, so I'll add it.",
              "createdAt": "2022-03-02T18:02:36Z",
              "updatedAt": "2022-03-02T18:02:36Z"
            }
          ]
        }
      ]
    },
    {
      "number": 101,
      "id": "PR_kwDODeTEy84z-aw5",
      "title": "Add test vectors for basic issuance",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/101",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #93. Generated from [this PR](https://github.com/cloudflare/pat-go/pull/5).\r\n\r\ncc @tfpauly, @armfazh, @claucece ",
      "createdAt": "2022-03-04T20:44:11Z",
      "updatedAt": "2022-06-22T14:03:39Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "master",
      "baseRefOid": "8056406cb686fed8f509c864cac895c1a6076967",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/test-vectors",
      "headRefOid": "51336450d55e900ec71f18472eec472c53505bc7",
      "closedAt": "2022-03-07T15:27:08Z",
      "mergedAt": "2022-03-07T15:27:08Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "5f7ca4bd744afeb2f39d8d377a87b0498a153acd"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy841r6k8",
          "commit": {
            "abbreviatedOid": "156b494"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-03-04T20:47:02Z",
          "updatedAt": "2022-03-04T20:47:03Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "```suggestion\r\nThis is encoded and transmitted to the client in the following TokenResponse structure:\r\n```\r\n```suggestion\r\nThis is encoded an transmitted to the client in the following TokenResponse structure:\r\n```",
              "createdAt": "2022-03-04T20:47:02Z",
              "updatedAt": "2022-03-04T20:47:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy841r7El",
          "commit": {
            "abbreviatedOid": "5133645"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-03-04T20:49:42Z",
          "updatedAt": "2022-03-04T20:49:42Z",
          "comments": []
        }
      ]
    },
    {
      "number": 105,
      "id": "PR_kwDODeTEy840U1i4",
      "title": "Rename redemption_nonce to redemption_context",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/105",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #103 ",
      "createdAt": "2022-03-11T22:35:54Z",
      "updatedAt": "2022-06-22T14:04:27Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "master",
      "baseRefOid": "5f7ca4bd744afeb2f39d8d377a87b0498a153acd",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "tfp/redemption_context",
      "headRefOid": "f5157d12f18ea33e92ea4ead16b74b2fad42d071",
      "closedAt": "2022-03-14T18:08:37Z",
      "mergedAt": "2022-03-14T18:08:37Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "079d020a283ff89e2ede31084574560b7faf245f"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy842HQnS",
          "commit": {
            "abbreviatedOid": "09cd643"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-03-11T23:01:46Z",
          "updatedAt": "2022-03-11T23:03:35Z",
          "comments": [
            {
              "originalPosition": 90,
              "body": "```suggestion\r\nissuer and issuance protocol, and may be additionally bound to a specific context or origin name.\r\n```",
              "createdAt": "2022-03-11T23:01:47Z",
              "updatedAt": "2022-03-11T23:03:35Z"
            },
            {
              "originalPosition": 115,
              "body": "```suggestion\r\nto reusing tokens that were fetched for other contexts. When present, this value\r\n```",
              "createdAt": "2022-03-11T23:02:04Z",
              "updatedAt": "2022-03-11T23:03:35Z"
            },
            {
              "originalPosition": 116,
              "body": "```suggestion\r\nis a 32-byte context generated by the origin. This value can be a unique\r\n```\r\n\r\nIt doesn't need to be \"fresh\" since one can compute it deterministically.",
              "createdAt": "2022-03-11T23:02:30Z",
              "updatedAt": "2022-03-11T23:03:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy842LUnk",
          "commit": {
            "abbreviatedOid": "f5157d1"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-03-14T15:04:30Z",
          "updatedAt": "2022-03-14T15:04:30Z",
          "comments": []
        }
      ]
    },
    {
      "number": 106,
      "id": "PR_kwDODeTEy840d7vV",
      "title": "Explain length field in TokenChallenge",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/106",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "tfpauly"
      ],
      "labels": [
        "auth-scheme"
      ],
      "body": "For anyone unfamiliar with TLS struct notation, spell out the length fields in the text.",
      "createdAt": "2022-03-15T14:40:07Z",
      "updatedAt": "2022-06-22T14:04:28Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "master",
      "baseRefOid": "079d020a283ff89e2ede31084574560b7faf245f",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "tfpauly-patch-1",
      "headRefOid": "d266e192ca4639808714f3a3617039627312dcb8",
      "closedAt": "2022-03-15T15:19:56Z",
      "mergedAt": "2022-03-15T15:19:56Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "53aad1254dfd127e8200824423b07d8ecfd1df7f"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy842QmaW",
          "commit": {
            "abbreviatedOid": "d161f9c"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-03-15T14:40:57Z",
          "updatedAt": "2022-03-15T14:40:58Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "```suggestion\r\nnon-origin-specific token can be redeemed.\r\n```",
              "createdAt": "2022-03-15T14:40:57Z",
              "updatedAt": "2022-03-15T14:40:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy842Qn5b",
          "commit": {
            "abbreviatedOid": "d266e19"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-03-15T14:44:34Z",
          "updatedAt": "2022-03-15T14:44:34Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODeTEy842Q2V6",
          "commit": {
            "abbreviatedOid": "d266e19"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-03-15T15:19:51Z",
          "updatedAt": "2022-03-15T15:19:51Z",
          "comments": []
        }
      ]
    },
    {
      "number": 107,
      "id": "PR_kwDODeTEy840eCYr",
      "title": "Explain when to flush context-bound tokens",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/107",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "tfpauly"
      ],
      "labels": [
        "auth-scheme"
      ],
      "body": "Closes #102",
      "createdAt": "2022-03-15T15:03:54Z",
      "updatedAt": "2022-06-22T14:04:28Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "master",
      "baseRefOid": "079d020a283ff89e2ede31084574560b7faf245f",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "tfpauly-patch-2",
      "headRefOid": "0124db3aaeb98fcac1682ceda405fa598ac8114f",
      "closedAt": "2022-03-15T20:15:16Z",
      "mergedAt": "2022-03-15T20:15:16Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "8e2999c4b16b23ce3903a1b4ac7e882de6f338fa"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy842QwvW",
          "commit": {
            "abbreviatedOid": "35f1029"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-03-15T15:05:48Z",
          "updatedAt": "2022-03-15T15:05:50Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "```suggestion\r\nUsing these tokens in a context that otherwise would not be linkable to the\r\noriginal context could allow the Origin to recognize a Client.\r\n\r\n```",
              "createdAt": "2022-03-15T15:05:48Z",
              "updatedAt": "2022-03-15T15:05:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy842RHyM",
          "commit": {
            "abbreviatedOid": "0124db3"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-03-15T16:03:27Z",
          "updatedAt": "2022-03-15T16:03:27Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODeTEy844SQ_h",
          "commit": {
            "abbreviatedOid": "0124db3"
          },
          "author": "Viosuna",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-04-18T11:26:16Z",
          "updatedAt": "2022-04-18T11:26:16Z",
          "comments": []
        }
      ]
    },
    {
      "number": 109,
      "id": "PR_kwDODeTEy841Lk-L",
      "title": "Support multiple origin names",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/109",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "tfpauly"
      ],
      "labels": [
        "auth-scheme"
      ],
      "body": "Closes #108 ",
      "createdAt": "2022-03-28T19:58:09Z",
      "updatedAt": "2022-06-22T14:03:57Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "master",
      "baseRefOid": "8e2999c4b16b23ce3903a1b4ac7e882de6f338fa",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "tfp/multiple-origin-names",
      "headRefOid": "976e492ffa2a4c0f76fda9c0dc219a3e338247d2",
      "closedAt": "2022-03-30T21:33:59Z",
      "mergedAt": "2022-03-30T21:33:59Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "247cf93f20be88029fa733cffe773300b40da9fa"
      },
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "@dvorak42 please have a look!",
          "createdAt": "2022-03-30T16:30:36Z",
          "updatedAt": "2022-03-30T16:30:36Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy843Nqbe",
          "commit": {
            "abbreviatedOid": "8b3898d"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2022-03-30T15:34:05Z",
          "updatedAt": "2022-03-30T15:36:42Z",
          "comments": [
            {
              "originalPosition": 57,
              "body": "```suggestion\r\norigin_info field, the client MUST validate that the name of the origin\r\nthat issued the authentication challenge is included in the list of origin\r\nnames. Clients MAY have further restrictions and requirements around\r\nvalidating when a challenge is considered acceptable or valid. For example,\r\nclients can choose to reject challenges that list origin names for which \r\ncurrent connection is not authoritative (according to the TLS certificate).\r\n```\r\n\r\nI don't think a SHOULD is strong enough here. If it's not required, then a client can skip this step, and an origin could abuse it to probe the client for tokens issued to other origins of its choosing. For example:\r\n\r\n- Client visits A.com, gets two token challenges that specify A.com in origin_info, and gets two tokens.\r\n- Client visits B.com, which challenges the client for an A.com token, and it happily redeems the A.com token.\r\n\r\nThis is not the same as a cross-origin token, since no origin name is specified there.",
              "createdAt": "2022-03-30T15:34:05Z",
              "updatedAt": "2022-03-30T15:36:42Z"
            },
            {
              "originalPosition": 57,
              "body": "Also, in moving to a MUST, we should add text to the security considerations which explain why this effectively means origins must \"cross sign\" each other (by using the same origin_info) in order for tokens to be spent across origins.",
              "createdAt": "2022-03-30T15:36:39Z",
              "updatedAt": "2022-03-30T15:36:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy843N9pk",
          "commit": {
            "abbreviatedOid": "8b3898d"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-03-30T16:28:27Z",
          "updatedAt": "2022-03-30T16:28:28Z",
          "comments": [
            {
              "originalPosition": 57,
              "body": "@chris-wood added text to security considerations, please check",
              "createdAt": "2022-03-30T16:28:28Z",
              "updatedAt": "2022-03-30T16:28:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy843N-CF",
          "commit": {
            "abbreviatedOid": "976e492"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "\ud83c\udf89 perfect!",
          "createdAt": "2022-03-30T16:29:38Z",
          "updatedAt": "2022-03-30T16:29:38Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODeTEy843O-hA",
          "commit": {
            "abbreviatedOid": "976e492"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-03-30T20:18:29Z",
          "updatedAt": "2022-03-30T20:18:29Z",
          "comments": []
        }
      ]
    },
    {
      "number": 110,
      "id": "PR_kwDODeTEy841Uv_Z",
      "title": "Include examples for context construction",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/110",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Based on examples from IETF 113. ",
      "createdAt": "2022-03-30T16:03:05Z",
      "updatedAt": "2022-06-22T14:03:38Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "master",
      "baseRefOid": "8e2999c4b16b23ce3903a1b4ac7e882de6f338fa",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/context-examples",
      "headRefOid": "dcfa10960b646d7c3acb555f6b725cc2afb99cbc",
      "closedAt": "2022-03-30T16:30:22Z",
      "mergedAt": "2022-03-30T16:30:22Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "43938c89da2b087f6c60d1ee5e282abd090d5972"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy843N965",
          "commit": {
            "abbreviatedOid": "43cca89"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-03-30T16:29:16Z",
          "updatedAt": "2022-03-30T16:29:39Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "```suggestion\r\n- Context bound to a given time window: Construct redemption context as\r\n```",
              "createdAt": "2022-03-30T16:29:17Z",
              "updatedAt": "2022-03-30T16:29:39Z"
            },
            {
              "originalPosition": 33,
              "body": "```suggestion\r\n- Context bound to a client location: Construct redemption context as\r\n```",
              "createdAt": "2022-03-30T16:29:24Z",
              "updatedAt": "2022-03-30T16:29:39Z"
            },
            {
              "originalPosition": 35,
              "body": "```suggestion\r\n- Context bound to a given time window and location: Construct redemption\r\n```",
              "createdAt": "2022-03-30T16:29:34Z",
              "updatedAt": "2022-03-30T16:29:39Z"
            }
          ]
        }
      ]
    },
    {
      "number": 111,
      "id": "PR_kwDODeTEy841VaDc",
      "title": "Revert back to VOPRF for basic private issuance",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/111",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "protocol"
      ],
      "body": "Since metadata can be bound to tokens via TokenChallenge.redemption_context, and the origin is ultimately the one who determines what metadata is supported, there's no more real need for the _issuer_ to supply this metadata. So let's go with the simpler VOPRF protocol instead!\r\n\r\nTest vectors generated from the code here: https://github.com/cloudflare/pat-go/pull/7\r\n\r\ncc @armfazh, @claucece, @dvorak42 ",
      "createdAt": "2022-03-30T19:07:55Z",
      "updatedAt": "2022-06-22T14:03:37Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "master",
      "baseRefOid": "43938c89da2b087f6c60d1ee5e282abd090d5972",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/back-to-voprf",
      "headRefOid": "07e2de33a12ca555e502a78678af64a94a7b036a",
      "closedAt": "2022-04-05T13:15:50Z",
      "mergedAt": "2022-04-05T13:15:50Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "a7c0bd43c91fd7bed940d4076d95a58b4f0b051a"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy843O0dL",
          "commit": {
            "abbreviatedOid": "07e2de3"
          },
          "author": "armfazh",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2022-03-30T19:37:54Z",
          "updatedAt": "2022-03-30T19:37:54Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODeTEy843O9g9",
          "commit": {
            "abbreviatedOid": "07e2de3"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-03-30T20:14:29Z",
          "updatedAt": "2022-03-30T20:14:29Z",
          "comments": []
        }
      ]
    },
    {
      "number": 112,
      "id": "PR_kwDODeTEy841hFXa",
      "title": "Move HTTP API to retired, align abbreviated names",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/112",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Just some housekeeping",
      "createdAt": "2022-04-01T22:33:57Z",
      "updatedAt": "2022-06-22T14:03:56Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "master",
      "baseRefOid": "247cf93f20be88029fa733cffe773300b40da9fa",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "tfp/cleanup",
      "headRefOid": "7130c7bd327a5da29948c3e2163eff9413b33d9b",
      "closedAt": "2022-04-01T23:15:20Z",
      "mergedAt": "2022-04-01T23:15:19Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "a5ad65f457fdf55cd133a9807454eb99ce671979"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy843ZrRL",
          "commit": {
            "abbreviatedOid": "7130c7b"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-04-01T23:03:54Z",
          "updatedAt": "2022-04-01T23:03:54Z",
          "comments": []
        }
      ]
    },
    {
      "number": 114,
      "id": "PR_kwDODeTEy841nGqF",
      "title": "Editorial: describe origin and client behavior more clearly",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/114",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "tfpauly"
      ],
      "labels": [
        "auth-scheme"
      ],
      "body": "- Spell out origin steps more clearly\r\n- Split token caching into its own section\r\n\r\nI tried having an overall \"origin\" and \"client\" section, but it didn't flow as well.",
      "createdAt": "2022-04-04T20:14:30Z",
      "updatedAt": "2022-06-22T14:03:55Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "master",
      "baseRefOid": "a5ad65f457fdf55cd133a9807454eb99ce671979",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "tfp/auth-scheme-editorial",
      "headRefOid": "b75176428cbddc711a5e3a2c68b745cf3f103908",
      "closedAt": "2022-04-04T23:16:21Z",
      "mergedAt": "2022-04-04T23:16:21Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "d6408e444427d01ced745cac17cf14f64701500f"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy843fdYi",
          "commit": {
            "abbreviatedOid": "fc0a5ee"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-04-04T21:55:29Z",
          "updatedAt": "2022-04-04T22:00:25Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "```suggestion\r\n1. Select which issuer to use, and configure the issuer name and token-key to\r\n```\r\n\r\nFetch might make folks think of `fetch()`, whereas really this is a configuration task.",
              "createdAt": "2022-04-04T21:55:30Z",
              "updatedAt": "2022-04-04T22:00:25Z"
            },
            {
              "originalPosition": 10,
              "body": "```suggestion\r\n1. Determine a redemption context construction to include in the TokenChallenge, as\r\n```\r\n\r\nSelect made me think that the context value was done once for everyone, but I think the intent here was to say \"figure out how you'll build redemption contexts\"?",
              "createdAt": "2022-04-04T21:56:22Z",
              "updatedAt": "2022-04-04T22:00:25Z"
            },
            {
              "originalPosition": 55,
              "body": "```suggestion\r\nPreventing double spending on tokens requires the origin to keep state associated\r\nwith the redemption context. The size of this state varies based on the size of the\r\nredemption context. For example, double spend state for unique, per-request redemption\r\ncontexts does only needs to exist within the scope of the request connection or session.\r\nIn contrast, double spend state for empty redemption contexts must be stored and shared\r\nacross all requests until token-key expiration or rotation.\r\n```",
              "createdAt": "2022-04-04T21:59:43Z",
              "updatedAt": "2022-04-04T22:00:25Z"
            }
          ]
        }
      ]
    },
    {
      "number": 115,
      "id": "PR_kwDODeTEy841veUT",
      "title": "Remove issuance protocol requirements",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/115",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "These are covered in the architecture.",
      "createdAt": "2022-04-06T15:16:02Z",
      "updatedAt": "2022-06-22T14:03:36Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "master",
      "baseRefOid": "a7c0bd43c91fd7bed940d4076d95a58b4f0b051a",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/remove-issuance-requirements",
      "headRefOid": "98d70c5e68a4317e414096f14bf0ff13f3fd24c8",
      "closedAt": "2022-04-11T15:04:57Z",
      "mergedAt": "2022-04-11T15:04:57Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "e67114b94229ae902c89f55ac5b07406b21c3a0f"
      },
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Bump @tfpauly @dvorak42!",
          "createdAt": "2022-04-11T14:32:20Z",
          "updatedAt": "2022-04-11T14:32:20Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy8436yO3",
          "commit": {
            "abbreviatedOid": "98d70c5"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-04-11T15:04:52Z",
          "updatedAt": "2022-04-11T15:04:52Z",
          "comments": []
        }
      ]
    },
    {
      "number": 116,
      "id": "PR_kwDODeTEy841vhAh",
      "title": "Add challenge and redemption test vectors",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/116",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "We could omit the authenticator value and just focus on how Token is constructed based on TokenChallenge, but it seems reasonable to include the authenticator so folks can also test that they're computing the token key ID correctly.\r\n\r\nGenerated from [this change](https://github.com/cloudflare/pat-go/pull/8).",
      "createdAt": "2022-04-06T15:26:21Z",
      "updatedAt": "2022-06-22T14:03:35Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "master",
      "baseRefOid": "a7c0bd43c91fd7bed940d4076d95a58b4f0b051a",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/auth-test-vectors",
      "headRefOid": "a53d1cbe5c3a2f9d06ad35fdc7f52ea5054ba28f",
      "closedAt": "2022-04-11T14:32:01Z",
      "mergedAt": "2022-04-11T14:32:01Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "830e16f2e57c2c3a545123c7decde438035129ab"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy843pvug",
          "commit": {
            "abbreviatedOid": "baf2043"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-04-06T15:29:18Z",
          "updatedAt": "2022-04-06T15:29:19Z",
          "comments": [
            {
              "originalPosition": 39,
              "body": "Should we reference the protocol doc and specifically call out that these are for the RSA blind signature variant?",
              "createdAt": "2022-04-06T15:29:18Z",
              "updatedAt": "2022-04-06T15:29:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy843pwPR",
          "commit": {
            "abbreviatedOid": "baf2043"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-04-06T15:30:46Z",
          "updatedAt": "2022-04-06T15:30:46Z",
          "comments": [
            {
              "originalPosition": 39,
              "body": "Done (but up above).",
              "createdAt": "2022-04-06T15:30:46Z",
              "updatedAt": "2022-04-06T15:30:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy843p4sa",
          "commit": {
            "abbreviatedOid": "a53d1cb"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-04-06T15:54:24Z",
          "updatedAt": "2022-04-06T15:54:24Z",
          "comments": []
        }
      ]
    },
    {
      "number": 122,
      "id": "PR_kwDODeTEy842oZl6",
      "title": "Pin down RSA details",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/122",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This is a breaking change since it updates the value of the code points. Starting as a draft until I'm able to produce matching test vectors. \r\n\r\nCloses #120.",
      "createdAt": "2022-04-22T15:14:47Z",
      "updatedAt": "2022-06-22T14:03:20Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "master",
      "baseRefOid": "e67114b94229ae902c89f55ac5b07406b21c3a0f",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/pin-rsa",
      "headRefOid": "2b08bb53aa75868fc33f69647b8ee4fc46145180",
      "closedAt": "2022-04-26T02:55:11Z",
      "mergedAt": "2022-04-26T02:55:11Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "e9e0efca4533c4d0ac7f8d7063a68f467b437d94"
      },
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "Hm, I was thinking we'd just fully specify the types 1 and 2 right now, rather than trying to define a bunch of different combinations up front. Is there a benefit to listing all of the combinations out? Since for interop we want convergence on types, why not just have a very standard 1 and 2?",
          "createdAt": "2022-04-22T15:43:53Z",
          "updatedAt": "2022-04-22T15:43:53Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Convergence seems orthogonal to the values here, no? Implementations could just pick a common type, as we've done for ECH, HPKE, etc. It seems important to offer flexibility here for applications that might need it.",
          "createdAt": "2022-04-22T16:00:15Z",
          "updatedAt": "2022-04-22T16:00:15Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "For the common web cases, where we have websites that want to work with the wide range of clients, I'd prefer to see a very clear option of what to use by default \u2014 with one for privately verifiable, and one for publicly verifiable. If people have use cases that can't use these algorithms (like we've seen for IOT use cases, etc, for other protocols), I'd rather see those defined when there's a profile that has a driving use case. For example, we could end up defining a full matrix of different SHA lengths and key sizes (they're all 4096 right now for RSA, but we could have others) and that seems unnecessary.",
          "createdAt": "2022-04-22T16:13:57Z",
          "updatedAt": "2022-04-22T16:13:57Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": ">  If people have use cases that can't use these algorithms (like we've seen for IOT use cases, etc, for other protocols), I'd rather see those defined when there's a profile that has a driving use case.\r\n\r\nWell, we can RECOMMEND issuance protocols for common use cases, as we've done for ECH. ",
          "createdAt": "2022-04-22T16:16:24Z",
          "updatedAt": "2022-04-22T16:16:24Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Reverted type2 change!",
          "createdAt": "2022-04-22T16:33:54Z",
          "updatedAt": "2022-04-22T16:33:54Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "@tfpauly this is good to go now -- please have a look!",
          "createdAt": "2022-04-26T00:50:27Z",
          "updatedAt": "2022-04-26T00:50:27Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy844pOfD",
          "commit": {
            "abbreviatedOid": "20b6700"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-04-22T16:32:37Z",
          "updatedAt": "2022-04-22T16:32:38Z",
          "comments": [
            {
              "originalPosition": 30,
              "body": "I think you mean 0x0002 here \u2014 but I'd also like to keep 2 as the default blind RSA type",
              "createdAt": "2022-04-22T16:32:37Z",
              "updatedAt": "2022-04-22T16:32:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy844yIaS",
          "commit": {
            "abbreviatedOid": "39ee88a"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-04-26T02:35:14Z",
          "updatedAt": "2022-04-26T02:35:14Z",
          "comments": []
        }
      ]
    },
    {
      "number": 123,
      "id": "PR_kwDODeTEy842oaE7",
      "title": "Be more specific about the key ID",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/123",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #121.",
      "createdAt": "2022-04-22T15:16:57Z",
      "updatedAt": "2022-06-22T14:03:20Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "master",
      "baseRefOid": "e67114b94229ae902c89f55ac5b07406b21c3a0f",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "chris-wood-patch-1",
      "headRefOid": "62fc07fc2d194ea931bd909bcc90edac7f88e48e",
      "closedAt": "2022-04-26T02:47:20Z",
      "mergedAt": "2022-04-26T02:47:20Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "b428c5184870eee12fe0bec11dddd7fae620c889"
      },
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "Is this the most exact way to put this? For byte arrays like a hash, I generally don't think of it as being network- or host- byte order. Do we have other docs that refer to stuff like this that we can crib from?",
          "createdAt": "2022-04-22T15:41:11Z",
          "updatedAt": "2022-04-22T15:41:11Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Nothing comes to mind right now, but I'm happy to look at alternatives.",
          "createdAt": "2022-04-22T15:46:37Z",
          "updatedAt": "2022-04-22T15:46:37Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Works for me =) ",
          "createdAt": "2022-04-26T02:46:54Z",
          "updatedAt": "2022-04-26T02:46:54Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy844pK3n",
          "commit": {
            "abbreviatedOid": "ec5b046"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-04-22T16:19:40Z",
          "updatedAt": "2022-04-22T16:19:41Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\n- \"token_key_id\" is the least significant byte of the `key_id` in network byte order (in other words, the last 8 bits of `key_id`).\r\n```",
              "createdAt": "2022-04-22T16:19:40Z",
              "updatedAt": "2022-04-22T16:19:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy844pK6B",
          "commit": {
            "abbreviatedOid": "ec5b046"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-04-22T16:19:50Z",
          "updatedAt": "2022-04-22T16:19:51Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "```suggestion\r\n- \"token_key_id\" is the least significant byte of the `key_id` in network byte order (in other words, the last 8 bits of `key_id`).\r\n```",
              "createdAt": "2022-04-22T16:19:50Z",
              "updatedAt": "2022-04-22T16:19:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy844pLAh",
          "commit": {
            "abbreviatedOid": "ec5b046"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Here's an attempt at saying this in other words to be extra clear?",
          "createdAt": "2022-04-22T16:20:15Z",
          "updatedAt": "2022-04-22T16:20:15Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODeTEy844yJqz",
          "commit": {
            "abbreviatedOid": "ec5b046"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-04-26T02:46:36Z",
          "updatedAt": "2022-04-26T02:46:36Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "\ud83d\udc4d Great!",
              "createdAt": "2022-04-26T02:46:36Z",
              "updatedAt": "2022-04-26T02:46:36Z"
            }
          ]
        }
      ]
    },
    {
      "number": 125,
      "id": "PR_kwDODeTEy845lhY1",
      "title": "Define reserved greasing values",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/125",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "tfpauly"
      ],
      "labels": [
        "auth-scheme"
      ],
      "body": "Closes #113",
      "createdAt": "2022-06-13T20:05:44Z",
      "updatedAt": "2022-06-22T14:03:22Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "master",
      "baseRefOid": "e9e0efca4533c4d0ac7f8d7063a68f467b437d94",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "tfpauly-patch-3",
      "headRefOid": "68e6bafdee33b352773deaec91bc993d77fd1b19",
      "closedAt": "2022-06-21T21:26:41Z",
      "mergedAt": "2022-06-21T21:26:41Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "6bc0b20975edef1da84eec1827dd47ef8299c780"
      },
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "Updated to use random values",
          "createdAt": "2022-06-13T20:34:56Z",
          "updatedAt": "2022-06-13T20:34:56Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "@dvorak42 please take a look!",
          "createdAt": "2022-06-14T10:46:16Z",
          "updatedAt": "2022-06-14T10:46:16Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy8475Rwq",
          "commit": {
            "abbreviatedOid": "3e7d0c9"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Thanks! This seems good, though I'd likely make the reserved allocations a bit more random (and not the `0xXAXA` pattern).",
          "createdAt": "2022-06-13T20:07:21Z",
          "updatedAt": "2022-06-13T20:07:21Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODeTEy8478N_F",
          "commit": {
            "abbreviatedOid": "68e6baf"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-06-14T10:46:09Z",
          "updatedAt": "2022-06-14T10:46:09Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODeTEy848dEFK",
          "commit": {
            "abbreviatedOid": "68e6baf"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-06-21T21:11:42Z",
          "updatedAt": "2022-06-21T21:11:42Z",
          "comments": []
        }
      ]
    },
    {
      "number": 126,
      "id": "PR_kwDODeTEy845mreB",
      "title": "change protocol to token",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/126",
      "state": "MERGED",
      "author": "jsalowey",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "The wording seems wrong, I think you meant token.",
      "createdAt": "2022-06-14T04:45:01Z",
      "updatedAt": "2022-06-22T14:03:19Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "master",
      "baseRefOid": "e9e0efca4533c4d0ac7f8d7063a68f467b437d94",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "jsalowey-patch-1",
      "headRefOid": "dbab69b533b293819a17abb6c8d7b3601bed0d1a",
      "closedAt": "2022-06-14T10:45:58Z",
      "mergedAt": "2022-06-14T10:45:58Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "4efc90719bab26d98af00ca3f552202d599a2b2b"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy8478B-2",
          "commit": {
            "abbreviatedOid": "e1e77c7"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-06-14T10:07:39Z",
          "updatedAt": "2022-06-14T10:07:39Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODeTEy8478NCg",
          "commit": {
            "abbreviatedOid": "e1e77c7"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-06-14T10:42:47Z",
          "updatedAt": "2022-06-14T10:42:48Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\nthe purposes of determining which private key to use in producing the token.\r\n```",
              "createdAt": "2022-06-14T10:42:47Z",
              "updatedAt": "2022-06-14T10:42:48Z"
            }
          ]
        }
      ]
    },
    {
      "number": 127,
      "id": "PR_kwDODeTEy845pGmV",
      "title": "Advertise token-key values in the issuer configuration dictionary",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/127",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "protocol"
      ],
      "body": "This is both a convenience for origins, as well as a way to support key rotation.",
      "createdAt": "2022-06-14T15:18:54Z",
      "updatedAt": "2022-06-22T14:03:17Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "master",
      "baseRefOid": "4efc90719bab26d98af00ca3f552202d599a2b2b",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/token-key-in-config",
      "headRefOid": "5be0451d8ffa5421f4efcc081eb70cd1e59d6ac8",
      "closedAt": "2022-06-20T12:10:03Z",
      "mergedAt": "2022-06-20T12:10:03Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "734961fe5ec2baf9eb8b12c37b01b5f2897c149f"
      },
      "comments": [
        {
          "author": "jfoote",
          "authorAssociation": "NONE",
          "body": "Thanks for this.\r\n\r\nIIUC the key rotation interval for non-rate-limited token issuance may be ambiguous. Since there is not necessarily a policy window defined in that case. Is that right?\r\n\r\nThis would be manageable be convention; and trivial when a single entity controls both the issuer and origin.",
          "createdAt": "2022-06-15T13:40:26Z",
          "updatedAt": "2022-06-15T13:40:26Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "> IIUC the key rotation interval for non-rate-limited token issuance may be ambiguous. Since there is not necessarily a policy window defined in that case. Is that right?\r\n\r\nCorrect. The rotation window is currently not specified. Omitting that seems reasonable for this case. Origins can simply check in with issuers at some regular cadence as they deem fit. ",
          "createdAt": "2022-06-15T13:51:22Z",
          "updatedAt": "2022-06-15T13:51:22Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy847926h",
          "commit": {
            "abbreviatedOid": "a01f0b0"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-06-14T15:20:27Z",
          "updatedAt": "2022-06-14T15:20:28Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "What's the version field?",
              "createdAt": "2022-06-14T15:20:27Z",
              "updatedAt": "2022-06-14T15:20:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84794yc",
          "commit": {
            "abbreviatedOid": "a01f0b0"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-06-14T15:25:16Z",
          "updatedAt": "2022-06-14T15:25:17Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "Moved to order-based preference.",
              "createdAt": "2022-06-14T15:25:17Z",
              "updatedAt": "2022-06-14T15:25:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84795D9",
          "commit": {
            "abbreviatedOid": "5be0451"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-06-14T15:25:59Z",
          "updatedAt": "2022-06-14T15:25:59Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODeTEy848GeKB",
          "commit": {
            "abbreviatedOid": "5be0451"
          },
          "author": "armfazh",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-06-15T23:54:59Z",
          "updatedAt": "2022-06-15T23:55:44Z",
          "comments": [
            {
              "originalPosition": 52,
              "body": "```suggestion\r\n    \"issuance-keys\": [\r\n      {\r\n        \"token-type\": 2,\r\n        \"token-keys\": [ \"MI...AB\", \"MI...AQ\" ],\r\n      },\r\n      {\r\n        \"token-type\": 3,\r\n        \"token-keys\": [\"MI...AW\"],\r\n      }\r\n    ]\r\n```\r\n\r\nMay I suggest to group keys by token-type? The advantages are at parsing this information.",
              "createdAt": "2022-06-15T23:54:59Z",
              "updatedAt": "2022-06-15T23:55:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy848JAKz",
          "commit": {
            "abbreviatedOid": "5be0451"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-06-16T12:52:40Z",
          "updatedAt": "2022-06-16T12:52:40Z",
          "comments": [
            {
              "originalPosition": 52,
              "body": "Hmm, how does this help with parsing? With the current scheme, one can implement a function like `CreateTokenKeyFromJSON(...)` using each token-key object. With the proposal, that would be something like `CreateTokenKeyListFromJSON(...)`, returning a list of items. The former seems like it'd yield simpler implementations. \r\n\r\n@jfoote, thoughts?",
              "createdAt": "2022-06-16T12:52:40Z",
              "updatedAt": "2022-06-16T12:52:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy848LfWe",
          "commit": {
            "abbreviatedOid": "5be0451"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-06-16T20:19:01Z",
          "updatedAt": "2022-06-16T20:19:01Z",
          "comments": [
            {
              "originalPosition": 52,
              "body": "Also, for the origin consuming this, they should look for the first config using the token type they support, and use that key. So that seems like a simple heuristic?",
              "createdAt": "2022-06-16T20:19:01Z",
              "updatedAt": "2022-06-16T20:19:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy848Ly6U",
          "commit": {
            "abbreviatedOid": "5be0451"
          },
          "author": "jfoote",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-06-16T21:34:26Z",
          "updatedAt": "2022-06-16T21:34:27Z",
          "comments": [
            {
              "originalPosition": 52,
              "body": "I agree with @chris-wood.",
              "createdAt": "2022-06-16T21:34:27Z",
              "updatedAt": "2022-06-16T21:34:27Z"
            }
          ]
        }
      ]
    },
    {
      "number": 128,
      "id": "PR_kwDODeTEy846cMXn",
      "title": "Update text around Issuer public key discovery and consistency checks",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/128",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #124.\r\n\r\ncc @janaiyengar ",
      "createdAt": "2022-06-27T19:53:28Z",
      "updatedAt": "2022-07-01T18:45:41Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "6bc0b20975edef1da84eec1827dd47ef8299c780",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/issuer-public-key-discovery-and-check",
      "headRefOid": "7fd7d5671fc6a611002763862f1103f2e8b154c9",
      "closedAt": "2022-07-01T18:45:41Z",
      "mergedAt": "2022-07-01T18:45:40Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "e852ed80dc5bc5df38241f3c922d9d8e8e099ce7"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy8481t3h",
          "commit": {
            "abbreviatedOid": "7fd7d56"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-06-27T20:01:33Z",
          "updatedAt": "2022-06-27T20:01:33Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODeTEy8481veX",
          "commit": {
            "abbreviatedOid": "7fd7d56"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-06-27T20:07:45Z",
          "updatedAt": "2022-06-27T20:07:45Z",
          "comments": []
        }
      ]
    },
    {
      "number": 129,
      "id": "PR_kwDODeTEy846cMuD",
      "title": "Offline forgeries are bad",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/129",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #119.",
      "createdAt": "2022-06-27T19:55:06Z",
      "updatedAt": "2022-06-27T21:16:17Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "6bc0b20975edef1da84eec1827dd47ef8299c780",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/forgery-defn",
      "headRefOid": "cebad8de0c1cb3f4598b0b078fb65be395e3a2de",
      "closedAt": "2022-06-27T21:16:17Z",
      "mergedAt": "2022-06-27T21:16:16Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "dcd68d68bdea761f6e96cd90eac83ad353a91505"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy8481twL",
          "commit": {
            "abbreviatedOid": "cebad8d"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-06-27T20:01:06Z",
          "updatedAt": "2022-06-27T20:01:06Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODeTEy8481vUA",
          "commit": {
            "abbreviatedOid": "cebad8d"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-06-27T20:07:07Z",
          "updatedAt": "2022-06-27T20:07:07Z",
          "comments": []
        }
      ]
    },
    {
      "number": 130,
      "id": "PR_kwDODeTEy846cQFD",
      "title": "Shared context and double spend state",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/130",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #104.",
      "createdAt": "2022-06-27T20:06:57Z",
      "updatedAt": "2022-07-01T18:45:53Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "6bc0b20975edef1da84eec1827dd47ef8299c780",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/shared-context-and-state",
      "headRefOid": "39ce5e1fbb9c6d3bc5a8201eb926d2e131ca0355",
      "closedAt": "2022-07-01T18:45:52Z",
      "mergedAt": "2022-07-01T18:45:52Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "582701bcb4c539a3a7f13ead78869e67fb8b7244"
      },
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "The section references seem to be breaking the build, so I'll fix that later before we land this.",
          "createdAt": "2022-06-27T20:19:19Z",
          "updatedAt": "2022-06-27T20:19:19Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy8481wT4",
          "commit": {
            "abbreviatedOid": "1a67706"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-06-27T20:11:11Z",
          "updatedAt": "2022-06-27T20:11:11Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "There's a type of context in between that doesn't necessarily make things interactive \u2014 I could have a redemption context I reuse for a period of time or from a particular server, etc \u2014 and clients _can_ cache in that case.",
              "createdAt": "2022-06-27T20:11:11Z",
              "updatedAt": "2022-06-27T20:11:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy8481wjU",
          "commit": {
            "abbreviatedOid": "1a67706"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-06-27T20:12:09Z",
          "updatedAt": "2022-06-27T20:12:09Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "True, but I didn't want to enumerate all different options here. We do that in the auth-scheme draft already. ",
              "createdAt": "2022-06-27T20:12:09Z",
              "updatedAt": "2022-06-27T20:12:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy8481yxW",
          "commit": {
            "abbreviatedOid": "1a67706"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-06-27T20:19:57Z",
          "updatedAt": "2022-06-27T20:19:58Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "I agree that we shouldn't enumerate all cases, but I'd like to still clarify that there isn't a strict binary. Let me suggest some text.",
              "createdAt": "2022-06-27T20:19:57Z",
              "updatedAt": "2022-06-27T20:19:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84812P4",
          "commit": {
            "abbreviatedOid": "1a67706"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-06-27T20:33:49Z",
          "updatedAt": "2022-06-27T20:34:18Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "```suggestion\r\n- Redemption context. Tokens can be bound to a given redemption context, which influences a client's ability to pre-fetch and cache\r\ntokens. For example, an empty redemption context always allows\r\ntokens to be issued and redeemed non-interactively, whereas a\r\na fresh and random redemption context means that the redeemed\r\ntoken must be issued only after the client receives the challenge.\r\nSee {{Section 2.1.1 of HTTP-Authentication}} for more details.\r\n```",
              "createdAt": "2022-06-27T20:33:49Z",
              "updatedAt": "2022-06-27T20:34:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy8484w5J",
          "commit": {
            "abbreviatedOid": "1a67706"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-06-28T10:40:06Z",
          "updatedAt": "2022-06-28T10:40:07Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "```suggestion\r\n  the redeemed token must be issued interactively. See 2.1.1 of {{HTTP-Authentication}}\r\n```",
              "createdAt": "2022-06-28T10:40:06Z",
              "updatedAt": "2022-06-28T10:40:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy8484xY4",
          "commit": {
            "abbreviatedOid": "1a67706"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-06-28T10:41:49Z",
          "updatedAt": "2022-06-28T10:41:49Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "Looks good!",
              "createdAt": "2022-06-28T10:41:49Z",
              "updatedAt": "2022-06-28T10:41:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy849HBqY",
          "commit": {
            "abbreviatedOid": "ced5d1f"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-06-30T17:25:04Z",
          "updatedAt": "2022-06-30T17:25:47Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "```suggestion\r\n  non-interactively, whereas a fresh and random redemption context means\r\n```",
              "createdAt": "2022-06-30T17:25:04Z",
              "updatedAt": "2022-06-30T17:25:47Z"
            },
            {
              "originalPosition": 12,
              "body": "```suggestion\r\n  that the redeemed token must be issued only after the client receives the challenge.\r\n```",
              "createdAt": "2022-06-30T17:25:30Z",
              "updatedAt": "2022-06-30T17:25:47Z"
            }
          ]
        }
      ]
    },
    {
      "number": 131,
      "id": "PR_kwDODeTEy846cROn",
      "title": "Public means public after all",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/131",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #118.",
      "createdAt": "2022-06-27T20:11:30Z",
      "updatedAt": "2022-06-27T21:16:45Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "6bc0b20975edef1da84eec1827dd47ef8299c780",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/note-public-property",
      "headRefOid": "4d9e7761122d362b25962f24059016f03c294f5f",
      "closedAt": "2022-06-27T21:16:45Z",
      "mergedAt": "2022-06-27T21:16:45Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "e4b88a1edd19d67d9defa4902e178b70f640566f"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy848103c",
          "commit": {
            "abbreviatedOid": "a40d960"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-06-27T20:28:14Z",
          "updatedAt": "2022-06-27T20:28:26Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "```suggestion\r\nThe first property means that any Origin can select a given Issuer to produce tokens, as long\r\nas the Origin has the Issuer public key, without explicit coordination or permission\r\nfrom the Issuer. This is because the Issuer does not learn the Origin that requested\r\nthe token during the issuance protocol.\r\n```",
              "createdAt": "2022-06-27T20:28:14Z",
              "updatedAt": "2022-06-27T20:28:26Z"
            }
          ]
        }
      ]
    },
    {
      "number": 132,
      "id": "PR_kwDODeTEy846cShz",
      "title": "Remove parameterization section as it's redundant with other consideration sections",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/132",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #65.\r\n\r\nAfter quickly skimming the parameterization section, it became clear that we already discuss these things in various consideration sections throughout the document, so this was just redundant. Moreover, it's very use-case and deployment specific that once had value in the joint deployment model, so it doesn't seem like particularly helpful now that we've generalized things a bit. Removing and avoiding confusion seems like the best path forward.",
      "createdAt": "2022-06-27T20:16:10Z",
      "updatedAt": "2022-07-01T18:46:09Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "6bc0b20975edef1da84eec1827dd47ef8299c780",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/remove-parameterization",
      "headRefOid": "023b786add68cc792f9a6b16bc7f20196c5bce83",
      "closedAt": "2022-07-01T18:46:09Z",
      "mergedAt": "2022-07-01T18:46:09Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "ad4b3f417d496a207a4d40f8f31201617e6949ed"
      },
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "I'll take this one to the list before merging.",
          "createdAt": "2022-06-27T20:19:35Z",
          "updatedAt": "2022-06-27T20:19:35Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy84810D8",
          "commit": {
            "abbreviatedOid": "023b786"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-06-27T20:25:01Z",
          "updatedAt": "2022-06-27T20:25:01Z",
          "comments": []
        }
      ]
    },
    {
      "number": 133,
      "id": "PR_kwDODeTEy846pGg2",
      "title": "Add centralization commentary",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/133",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #45.\r\n\r\ncc @janaiyengar ",
      "createdAt": "2022-06-30T13:34:51Z",
      "updatedAt": "2022-07-01T18:45:32Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "e4b88a1edd19d67d9defa4902e178b70f640566f",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/centralization",
      "headRefOid": "21f0d7567b2019539c54392e603dcf2e9c6c4797",
      "closedAt": "2022-07-01T18:45:32Z",
      "mergedAt": "2022-07-01T18:45:31Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "bc56ce2c79b910333bc252614014596ca4d4cd9b"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy849HCNp",
          "commit": {
            "abbreviatedOid": "21f0d75"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-06-30T17:27:03Z",
          "updatedAt": "2022-06-30T17:27:03Z",
          "comments": []
        }
      ]
    },
    {
      "number": 136,
      "id": "PR_kwDODeTEy8464cFm",
      "title": "Issuers determine attesters",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/136",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #135.",
      "createdAt": "2022-07-05T21:40:14Z",
      "updatedAt": "2022-07-05T21:54:10Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "ad4b3f417d496a207a4d40f8f31201617e6949ed",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/issuer-attester-combos",
      "headRefOid": "a422dc0621a5f02b94642f30eca8f1dee6502e85",
      "closedAt": "2022-07-05T21:54:10Z",
      "mergedAt": "2022-07-05T21:54:10Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "4e790d9b10af4e06d4219f7ff32618e846dcc289"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy849WSFE",
          "commit": {
            "abbreviatedOid": "a422dc0"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-07-05T21:52:13Z",
          "updatedAt": "2022-07-05T21:52:13Z",
          "comments": []
        }
      ]
    },
    {
      "number": 137,
      "id": "PR_kwDODeTEy8464dh-",
      "title": "Don't mix different token functions in the same challenge set",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/137",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #134.",
      "createdAt": "2022-07-05T21:46:36Z",
      "updatedAt": "2022-07-05T21:54:55Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "ad4b3f417d496a207a4d40f8f31201617e6949ed",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/dont-mix",
      "headRefOid": "0d2f799538deae213a84d2bee600e016278888fd",
      "closedAt": "2022-07-05T21:54:55Z",
      "mergedAt": "2022-07-05T21:54:55Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "308236ec0669ea143ab47dd5d624d50270048396"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy849WSJ6",
          "commit": {
            "abbreviatedOid": "a55e1f9"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-07-05T21:52:43Z",
          "updatedAt": "2022-07-05T21:52:43Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODeTEy849WSfd",
          "commit": {
            "abbreviatedOid": "a55e1f9"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-07-05T21:54:46Z",
          "updatedAt": "2022-07-05T21:54:46Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "```suggestion\r\nproperties for one use case is nonsensical.\r\n```",
              "createdAt": "2022-07-05T21:54:46Z",
              "updatedAt": "2022-07-05T21:54:46Z"
            }
          ]
        }
      ]
    },
    {
      "number": 138,
      "id": "PR_kwDODeTEy8468J31",
      "title": "Specify token verification",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/138",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This was previously underspecified, so hopefully this makes things clear.\r\n\r\ncc @raphaelrobert",
      "createdAt": "2022-07-06T13:58:37Z",
      "updatedAt": "2022-07-06T19:06:33Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "308236ec0669ea143ab47dd5d624d50270048396",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/specify-verification",
      "headRefOid": "a7eb05b0315f0f205ba43d0f18f45603f38dd1a8",
      "closedAt": "2022-07-06T19:06:33Z",
      "mergedAt": "2022-07-06T19:06:33Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "216782fdb95b9c2a9b6e2ea8cb89e87172080bda"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy849Zz6x",
          "commit": {
            "abbreviatedOid": "a7eb05b"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-07-06T14:15:24Z",
          "updatedAt": "2022-07-06T14:15:24Z",
          "comments": []
        }
      ]
    },
    {
      "number": 139,
      "id": "PR_kwDODeTEy8469Awx",
      "title": "Update affiliation",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/139",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "@claucece, can you please confirm that this is correct?",
      "createdAt": "2022-07-06T17:05:59Z",
      "updatedAt": "2022-07-06T18:48:48Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "308236ec0669ea143ab47dd5d624d50270048396",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "update-sofia-affiliation",
      "headRefOid": "a09b217e4c2b867c964a15ee9468a470a85c6a51",
      "closedAt": "2022-07-06T18:48:48Z",
      "mergedAt": "2022-07-06T18:48:48Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "43c8aa054521d1ab79d09dea33f09ec7d25392f3"
      },
      "comments": [
        {
          "author": "claucece",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Updated to the branch in another PR: https://github.com/ietf-wg-privacypass/base-drafts/pull/140\r\n\r\nThanks!",
          "createdAt": "2022-07-06T18:47:55Z",
          "updatedAt": "2022-07-06T18:47:55Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 140,
      "id": "PR_kwDODeTEy8469VAG",
      "title": "Update affiliation",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/140",
      "state": "MERGED",
      "author": "claucece",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This one @chris-wood ",
      "createdAt": "2022-07-06T18:47:25Z",
      "updatedAt": "2022-07-06T18:48:40Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "update-sofia-affiliation",
      "baseRefOid": "fa0887a76e5f976ecbf5db22bbd05c60e3967699",
      "headRepository": "claucece/privacy-pass-ietf",
      "headRefName": "update-sofia-affiliation",
      "headRefOid": "caecf87fa2d6733892172edad23442de7fbff05c",
      "closedAt": "2022-07-06T18:48:40Z",
      "mergedAt": "2022-07-06T18:48:40Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "a09b217e4c2b867c964a15ee9468a470a85c6a51"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy849bQLm",
          "commit": {
            "abbreviatedOid": "caecf87"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-07-06T18:48:36Z",
          "updatedAt": "2022-07-06T18:48:36Z",
          "comments": []
        }
      ]
    },
    {
      "number": 142,
      "id": "PR_kwDODeTEy847vUJI",
      "title": "Clarify nonce and challenge_digest values",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/142",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "As raised by @raphaelrobert on the mailing list. Thanks, @raphaelrobert!",
      "createdAt": "2022-07-20T13:57:52Z",
      "updatedAt": "2022-07-24T09:40:02Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "216782fdb95b9c2a9b6e2ea8cb89e87172080bda",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/clarify-nonce-and-challenge-digest",
      "headRefOid": "d7847c1b40273f8a2456cda1cd0394448a390fdf",
      "closedAt": "2022-07-24T09:40:01Z",
      "mergedAt": "2022-07-24T09:40:01Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "f0925e819796f3a4427eaaa6a13d2cf924656abb"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy84-VGKh",
          "commit": {
            "abbreviatedOid": "d7847c1"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-07-20T21:53:06Z",
          "updatedAt": "2022-07-20T21:53:06Z",
          "comments": []
        }
      ]
    },
    {
      "number": 144,
      "id": "PR_kwDODeTEy8479rxs",
      "title": "Add IANA registry review details",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/144",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "tfpauly"
      ],
      "labels": [
        "auth-scheme"
      ],
      "body": "Closes #143",
      "createdAt": "2022-07-22T17:46:14Z",
      "updatedAt": "2022-08-01T14:37:11Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "7c791d7a6a412a41535c8fe9bfc321505d0f53af",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "tfpauly-patch-1",
      "headRefOid": "f38179fdee315a16e6fefe9b856fa986760ef582",
      "closedAt": "2022-08-01T14:37:10Z",
      "mergedAt": "2022-08-01T14:37:10Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "c64bb5171eaee0168c60e83b875785db8927b5e5"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy84-epyJ",
          "commit": {
            "abbreviatedOid": "f077db4"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-07-22T17:46:46Z",
          "updatedAt": "2022-07-22T17:46:46Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODeTEy84-8KkZ",
          "commit": {
            "abbreviatedOid": "f077db4"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-07-29T18:59:27Z",
          "updatedAt": "2022-07-29T18:59:28Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "```suggestion\r\nis sufficiently clearly defined to be used for both token issuance and redemption,\r\nand meets the common security requirements for issuance protocols defined\r\nin {{Section 3.2 of ARCHITECTURE}}.\r\n\r\nThis registry also will also allow provisional registrations to allow for experimentation\r\nwith protocols being developed. Designated experts review and approve provisional\r\nregistrations.\r\n```",
              "createdAt": "2022-07-29T18:59:27Z",
              "updatedAt": "2022-07-29T18:59:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84-8KrR",
          "commit": {
            "abbreviatedOid": "4cf84f7"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-07-29T18:59:57Z",
          "updatedAt": "2022-07-29T18:59:57Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": "@chris-wood please check this new text I added based on the IETF meeting discussion",
              "createdAt": "2022-07-29T18:59:57Z",
              "updatedAt": "2022-07-29T18:59:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84_BnQh",
          "commit": {
            "abbreviatedOid": "4cf84f7"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-08-01T14:20:51Z",
          "updatedAt": "2022-08-01T14:20:52Z",
          "comments": [
            {
              "originalPosition": 21,
              "body": "```suggestion\r\nand meets the common security and privacy requirements for issuance protocols defined\r\n```",
              "createdAt": "2022-08-01T14:20:51Z",
              "updatedAt": "2022-08-01T14:20:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84_BnpZ",
          "commit": {
            "abbreviatedOid": "4cf84f7"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-08-01T14:21:53Z",
          "updatedAt": "2022-08-01T14:21:54Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "```suggestion\r\nwith protocols being developed. Designated experts review, approve, and revoke provisional\r\nregistrations.\r\n```",
              "createdAt": "2022-08-01T14:21:53Z",
              "updatedAt": "2022-08-01T14:21:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84_Bn4V",
          "commit": {
            "abbreviatedOid": "4cf84f7"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-08-01T14:22:33Z",
          "updatedAt": "2022-08-01T14:22:33Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": "So the idea is to leave the experimental range (and duration) to the experts? If so, that works for me. I suggested a small edit that allows them to revoke provisional status so that we don't exhaust the space with experimental values.",
              "createdAt": "2022-08-01T14:22:33Z",
              "updatedAt": "2022-08-01T14:22:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84_Bn8J",
          "commit": {
            "abbreviatedOid": "4cf84f7"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM pending suggestions.",
          "createdAt": "2022-08-01T14:22:42Z",
          "updatedAt": "2022-08-01T14:22:42Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODeTEy84_BtDs",
          "commit": {
            "abbreviatedOid": "4cf84f7"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-08-01T14:36:14Z",
          "updatedAt": "2022-08-01T14:36:14Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": "I don't think it's necessarily a strict experimental range, but rather allows for early allocation that then can expire and get replaced eventually.",
              "createdAt": "2022-08-01T14:36:14Z",
              "updatedAt": "2022-08-01T14:36:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84_BtSK",
          "commit": {
            "abbreviatedOid": "4cf84f7"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-08-01T14:36:47Z",
          "updatedAt": "2022-08-01T14:36:48Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "Yeah, that works!",
              "createdAt": "2022-08-01T14:36:47Z",
              "updatedAt": "2022-08-01T14:36:48Z"
            }
          ]
        }
      ]
    },
    {
      "number": 145,
      "id": "PR_kwDODeTEy848SsYu",
      "title": "Remove duplicate word token",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/145",
      "state": "MERGED",
      "author": "aykutbulut",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-07-29T04:18:19Z",
      "updatedAt": "2022-07-29T11:42:49Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "f0925e819796f3a4427eaaa6a13d2cf924656abb",
      "headRepository": "aykutbulut/privacypass-base-drafts",
      "headRefName": "main",
      "headRefOid": "ca87fd4b73af6166e4ee991a78496a6d85574c6d",
      "closedAt": "2022-07-29T11:42:49Z",
      "mergedAt": "2022-07-29T11:42:49Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "31ea817412bbbf40e12084be3edb1c1141ec5158"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy84-6LWY",
          "commit": {
            "abbreviatedOid": "ca87fd4"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-07-29T11:41:59Z",
          "updatedAt": "2022-07-29T11:41:59Z",
          "comments": []
        }
      ]
    },
    {
      "number": 147,
      "id": "PR_kwDODeTEy848cI7d",
      "title": "Add text around client and origin ossification",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/147",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #146.",
      "createdAt": "2022-08-01T15:14:22Z",
      "updatedAt": "2022-08-05T20:15:28Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "c64bb5171eaee0168c60e83b875785db8927b5e5",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/ossification",
      "headRefOid": "89103f17d1cf6ebc47f481f350c894c3f174bd94",
      "closedAt": "2022-08-05T18:43:49Z",
      "mergedAt": "2022-08-05T18:43:49Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "157018f212d93896457043cc350ca9625241eb1f"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy84_CJIk",
          "commit": {
            "abbreviatedOid": "3e70cb4"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Editorial suggestions",
          "createdAt": "2022-08-01T15:56:03Z",
          "updatedAt": "2022-08-01T15:58:05Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nClients might experience issues running the issuance protocol, e.g., because the attester\r\n```",
              "createdAt": "2022-08-01T15:56:03Z",
              "updatedAt": "2022-08-01T15:58:05Z"
            },
            {
              "originalPosition": 6,
              "body": "```suggestion\r\nor issuer is unavailable, or clients might simply not support the requested token type.\r\n```",
              "createdAt": "2022-08-01T15:56:10Z",
              "updatedAt": "2022-08-01T15:58:05Z"
            },
            {
              "originalPosition": 10,
              "body": "```suggestion\r\nTo mitigate the risk of deployments becoming dependent on tokens, clients and servers SHOULD grease\r\n```",
              "createdAt": "2022-08-01T15:57:25Z",
              "updatedAt": "2022-08-01T15:58:05Z"
            },
            {
              "originalPosition": 11,
              "body": "```suggestion\r\ntheir behavior unless explicitly configured not to. In particular, clients SHOULD\r\n```",
              "createdAt": "2022-08-01T15:57:50Z",
              "updatedAt": "2022-08-01T15:58:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84_ZcEB",
          "commit": {
            "abbreviatedOid": "89103f1"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-08-05T17:02:48Z",
          "updatedAt": "2022-08-05T17:02:48Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": " Should there be a recommendation for attesters to abort the issuance protocol with some non-zero probability?",
              "createdAt": "2022-08-05T17:02:48Z",
              "updatedAt": "2022-08-05T17:02:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84_ZqZE",
          "commit": {
            "abbreviatedOid": "89103f1"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-08-05T17:56:11Z",
          "updatedAt": "2022-08-05T17:56:12Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "This is an interesting recommendation. For consistency reasons I could see it working, but it also might make tracking down issues that are isolated to either attester or issuer difficult in production. @tfpauly, thoughts?",
              "createdAt": "2022-08-05T17:56:11Z",
              "updatedAt": "2022-08-05T17:56:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84_Zsbm",
          "commit": {
            "abbreviatedOid": "89103f1"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-08-05T18:04:50Z",
          "updatedAt": "2022-08-05T18:04:50Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "I could see it working as an option. To some degree, it's out of scope for this auth scheme document, since we only know about origins and clients here. I'd probably leave it off for now?",
              "createdAt": "2022-08-05T18:04:50Z",
              "updatedAt": "2022-08-05T18:04:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84_Z_lA",
          "commit": {
            "abbreviatedOid": "89103f1"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-08-05T18:43:43Z",
          "updatedAt": "2022-08-05T18:43:43Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "Yeah, I forgot this was in the auth scheme doc, which knows nothing about attesters or issuers.",
              "createdAt": "2022-08-05T18:43:43Z",
              "updatedAt": "2022-08-05T18:43:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84_acnQ",
          "commit": {
            "abbreviatedOid": "89103f1"
          },
          "author": "tahaaden",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-08-05T20:15:28Z",
          "updatedAt": "2022-08-05T20:15:28Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "hi",
              "createdAt": "2022-08-05T20:15:28Z",
              "updatedAt": "2022-08-05T20:15:28Z"
            }
          ]
        }
      ]
    },
    {
      "number": 148,
      "id": "PR_kwDODeTEy848cKy1",
      "title": "Add text on attestation compromise",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/148",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #141.\r\n\r\ncc @janaiyengar ",
      "createdAt": "2022-08-01T15:21:02Z",
      "updatedAt": "2022-08-05T17:55:00Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "c64bb5171eaee0168c60e83b875785db8927b5e5",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/attestation-compromise",
      "headRefOid": "e2bf2c94b90e1f1ec2085ed5c7a205c01dbd1deb",
      "closedAt": "2022-08-05T17:55:00Z",
      "mergedAt": "2022-08-05T17:55:00Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "0db945e5af271c3f874e7d61d10b4eb9b03297c0"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy84_CKQP",
          "commit": {
            "abbreviatedOid": "0f2bc10"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-08-01T15:59:33Z",
          "updatedAt": "2022-08-01T16:01:29Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "```suggestion\r\nattestation quality is therefore a deployment-specific task. In Split Attester and Issuer deployments, Issuers can choose to remove compromised Attesters from their trusted\r\nset until the compromise is patched, without needing to modify Origin allow-lists. \r\n```",
              "createdAt": "2022-08-01T15:59:33Z",
              "updatedAt": "2022-08-01T16:01:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84_CRIk",
          "commit": {
            "abbreviatedOid": "4769e80"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-08-01T16:21:52Z",
          "updatedAt": "2022-08-01T16:21:53Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "```suggestion\r\nattestation quality is therefore a deployment-specific task. In Split Attester and\r\nIssuer deployments, Issuers can choose to remove compromised Attesters from their trusted\r\nset until the compromise is patched, without needing to modify Origin allow-lists.\r\n\r\n```",
              "createdAt": "2022-08-01T16:21:53Z",
              "updatedAt": "2022-08-01T16:21:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy84_CRMN",
          "commit": {
            "abbreviatedOid": "e2bf2c9"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-08-01T16:22:04Z",
          "updatedAt": "2022-08-01T16:22:04Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODeTEy84_Zbpr",
          "commit": {
            "abbreviatedOid": "e2bf2c9"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-08-05T17:01:03Z",
          "updatedAt": "2022-08-05T17:01:03Z",
          "comments": []
        }
      ]
    },
    {
      "number": 150,
      "id": "PR_kwDODeTEy849NU3U",
      "title": "Update list of authors.",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/150",
      "state": "CLOSED",
      "author": "armfazh",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "See message on the list:  https://mailarchive.ietf.org/arch/msg/privacy-pass/mIp4UMuPGDrp7FvtWLQraUje5WY/",
      "createdAt": "2022-08-15T21:24:42Z",
      "updatedAt": "2023-04-05T10:38:55Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "157018f212d93896457043cc350ca9625241eb1f",
      "headRepository": "armfazh/base-drafts",
      "headRefName": "removeme",
      "headRefOid": "34d129bdc29fcdb37bbb2278c79521ef16f7fd44",
      "closedAt": "2023-04-05T10:38:55Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "Added you to the acknowledgements!",
          "createdAt": "2022-08-19T18:41:15Z",
          "updatedAt": "2022-08-19T18:41:15Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85AU9YZ",
          "commit": {
            "abbreviatedOid": "34d129b"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-08-19T18:41:22Z",
          "updatedAt": "2022-08-19T18:41:22Z",
          "comments": []
        }
      ]
    },
    {
      "number": 164,
      "id": "PR_kwDODeTEy84-eCls",
      "title": "Editorial nits found during WGLC review",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/164",
      "state": "MERGED",
      "author": "ekinnear",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Entirely editorial nits found during my WGLC review that were too minor for an issue. \r\n\r\nFeel free to take/reject any of these, they're purely editorial and I'm not attached to any of them. \r\n\r\nI tried to not touch any line-length outside of paragraphs that I was editing, but I did re-wrap anything that I caused to be different enough to be an issue.",
      "createdAt": "2022-09-06T21:56:36Z",
      "updatedAt": "2022-09-14T09:25:44Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "157018f212d93896457043cc350ca9625241eb1f",
      "headRepository": "ekinnear/privacypass-base-drafts",
      "headRefName": "ek/editorial-nits",
      "headRefOid": "5c9e0e838bafdfc78df8747fe319d47d344c23cd",
      "closedAt": "2022-09-14T09:25:43Z",
      "mergedAt": "2022-09-14T09:25:43Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "480e12758e57d4759d08b31fb4210200b711b058"
      },
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks!",
          "createdAt": "2022-09-14T09:25:29Z",
          "updatedAt": "2022-09-14T09:25:29Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85B_UAe",
          "commit": {
            "abbreviatedOid": "5c9e0e8"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-09-14T09:25:21Z",
          "updatedAt": "2022-09-14T09:25:21Z",
          "comments": []
        }
      ]
    },
    {
      "number": 172,
      "id": "PR_kwDODeTEy84-6SWf",
      "title": "Editorial changes",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/172",
      "state": "CLOSED",
      "author": "cjpatton",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-09-14T04:53:08Z",
      "updatedAt": "2022-09-14T16:00:59Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "157018f212d93896457043cc350ca9625241eb1f",
      "headRepository": "cjpatton/ietf-wg-privacypass-base-drafts",
      "headRefName": "edit/1",
      "headRefOid": "660b48ff431dff67b6839f56ef874e6478ffd3cc",
      "closedAt": "2022-09-14T09:41:43Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "The git history here is very strange, and rebasing put things in a terrible state. I simply cherry picked the relevant changes and put them in #177.",
          "createdAt": "2022-09-14T09:41:43Z",
          "updatedAt": "2022-09-14T09:41:43Z"
        },
        {
          "author": "cjpatton",
          "authorAssociation": "NONE",
          "body": "This happened yesterday with Sean Turner's PR for DAP. Hmmm..",
          "createdAt": "2022-09-14T16:00:59Z",
          "updatedAt": "2022-09-14T16:00:59Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 176,
      "id": "PR_kwDODeTEy84-7asn",
      "title": "Editorial pass rebase",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/176",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-09-14T09:36:16Z",
      "updatedAt": "2022-09-14T09:36:29Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "480e12758e57d4759d08b31fb4210200b711b058",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "edit/1",
      "headRefOid": "49556615e5652e84d0d199afbc4761f8077bbf14",
      "closedAt": "2022-09-14T09:36:29Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": []
    },
    {
      "number": 177,
      "id": "PR_kwDODeTEy84-7cNn",
      "title": "Apply cjpatton's edits",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/177",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Supercede's #172.",
      "createdAt": "2022-09-14T09:41:07Z",
      "updatedAt": "2022-09-14T09:42:56Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "480e12758e57d4759d08b31fb4210200b711b058",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/cjpatton-edits",
      "headRefOid": "1ea0c8e150fe40d5c3bc7a9c1be021163e3e4993",
      "closedAt": "2022-09-14T09:42:56Z",
      "mergedAt": "2022-09-14T09:42:56Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "9cf5a008af1f13730a18482127c6d88e4dcaecc2"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 178,
      "id": "PR_kwDODeTEy84-7eru",
      "title": "Address WGLC review issues",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/178",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #175.\r\nCloses #174.\r\nCloses #173.\r\nCloses #171.\r\nCloses #170.\r\nCloses #169.\r\nCloses #168.\r\nCloses #167.\r\nCloses #166.\r\nCloses #165.\r\nCloses #162.\r\nCloses #161.\r\nCloses #160.\r\nCloses #159.\r\nCloses #158.\r\nCloses #156.\r\nCloses #155.\r\nCloses #154.\r\nCloses #153.\r\n\r\ncc @mnot, @tfpauly, @ekinnear, @cjpatton",
      "createdAt": "2022-09-14T09:48:58Z",
      "updatedAt": "2022-09-14T19:13:39Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "9cf5a008af1f13730a18482127c6d88e4dcaecc2",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/not-an-architectural-framework",
      "headRefOid": "22b5c0286f56e0ed408c43add1a0fa336cb0ebc1",
      "closedAt": "2022-09-14T19:13:39Z",
      "mergedAt": "2022-09-14T19:13:39Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "550bde1d86d0d0a2e26cc749c7eec77a85df20b6"
      },
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "I should have stacked PRs, but these issues were small enough to address that I just threw them into separate commits here. Sorry, @tfpauly!",
          "createdAt": "2022-09-14T13:25:05Z",
          "updatedAt": "2022-09-14T13:25:05Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85CAouj",
          "commit": {
            "abbreviatedOid": "fc98dfb"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-09-14T13:15:57Z",
          "updatedAt": "2022-09-14T13:15:57Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODeTEy85CCF_t",
          "commit": {
            "abbreviatedOid": "22b5c02"
          },
          "author": "cjpatton",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-09-14T16:26:59Z",
          "updatedAt": "2022-09-14T16:27:00Z",
          "comments": [
            {
              "originalPosition": 153,
              "body": "Much clearer, thanks.",
              "createdAt": "2022-09-14T16:26:59Z",
              "updatedAt": "2022-09-14T16:27:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85CCGyG",
          "commit": {
            "abbreviatedOid": "22b5c02"
          },
          "author": "cjpatton",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-09-14T16:29:15Z",
          "updatedAt": "2022-09-14T16:29:15Z",
          "comments": [
            {
              "originalPosition": 326,
              "body": "Much better title IMO",
              "createdAt": "2022-09-14T16:29:15Z",
              "updatedAt": "2022-09-14T16:29:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85CCHaj",
          "commit": {
            "abbreviatedOid": "22b5c02"
          },
          "author": "cjpatton",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-09-14T16:30:52Z",
          "updatedAt": "2022-09-14T16:30:52Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODeTEy85CCbXz",
          "commit": {
            "abbreviatedOid": "22b5c02"
          },
          "author": "ekinnear",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-09-14T17:28:45Z",
          "updatedAt": "2022-09-14T17:28:45Z",
          "comments": []
        }
      ]
    },
    {
      "number": 181,
      "id": "PR_kwDODeTEy84_A0J_",
      "title": "Consolidate key rotation content",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/181",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #180.\r\n\r\ncc @nikitaborisov",
      "createdAt": "2022-09-15T10:14:56Z",
      "updatedAt": "2022-09-16T11:56:45Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "550bde1d86d0d0a2e26cc749c7eec77a85df20b6",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/consolidate-rotation",
      "headRefOid": "428fea97f06240ce458a5773f35424b75a78b8ab",
      "closedAt": "2022-09-16T11:56:45Z",
      "mergedAt": "2022-09-16T11:56:45Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "ef83396d6d9b88568d2ba3cb44df1f313dffd211"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85CIhvV",
          "commit": {
            "abbreviatedOid": "428fea9"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-09-15T16:37:10Z",
          "updatedAt": "2022-09-15T16:37:10Z",
          "comments": []
        }
      ]
    },
    {
      "number": 182,
      "id": "PR_kwDODeTEy84_Cf_s",
      "title": "Clarify unconditional input secrecy",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/182",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #179.\r\n\r\ncc @nikitaborisov",
      "createdAt": "2022-09-15T16:14:46Z",
      "updatedAt": "2022-09-16T11:57:04Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "550bde1d86d0d0a2e26cc749c7eec77a85df20b6",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/clarify-unconditional-input-secrecy",
      "headRefOid": "7bd3e454e82c08b17bcff72916c11135c66b9edd",
      "closedAt": "2022-09-16T11:57:04Z",
      "mergedAt": "2022-09-16T11:57:04Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "58eb4f665837445e872e8471f241ab8513c5ec1c"
      },
      "comments": [
        {
          "author": "nikitaborisov",
          "authorAssociation": "CONTRIBUTOR",
          "body": "LGTM!",
          "createdAt": "2022-09-15T19:48:16Z",
          "updatedAt": "2022-09-15T19:48:16Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85CIiBJ",
          "commit": {
            "abbreviatedOid": "7bd3e45"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-09-15T16:38:05Z",
          "updatedAt": "2022-09-15T16:38:05Z",
          "comments": []
        }
      ]
    },
    {
      "number": 183,
      "id": "PR_kwDODeTEy84_Cg1g",
      "title": "Clarify truncated key id in the TokenRequest message",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/183",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #151.\r\n\r\ncc @tfpauly, @raphaelrobert",
      "createdAt": "2022-09-15T16:18:17Z",
      "updatedAt": "2022-09-16T11:58:39Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "550bde1d86d0d0a2e26cc749c7eec77a85df20b6",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/truncated_key_id",
      "headRefOid": "d7e57424d06e67790e35c37bf29c249932dee045",
      "closedAt": "2022-09-16T11:58:39Z",
      "mergedAt": "2022-09-16T11:58:39Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "c8e4703b7d558a4aa612ff11ce4329ab20b34f92"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85CIiYE",
          "commit": {
            "abbreviatedOid": "d6ad451"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "This helps, thanks!",
          "createdAt": "2022-09-15T16:39:16Z",
          "updatedAt": "2022-09-15T16:39:16Z",
          "comments": []
        }
      ]
    },
    {
      "number": 184,
      "id": "PR_kwDODeTEy84_Cj8H",
      "title": "Clarify token key ID truncation",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/184",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #152.\r\n\r\ncc @tfpauly, @raphaelrobert",
      "createdAt": "2022-09-15T16:30:09Z",
      "updatedAt": "2022-09-16T11:57:16Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "caw/truncated_key_id",
      "baseRefOid": "d6ad451ce65d8419ffe338fe97bc2d3faa17ed6f",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/clarify-truncation-in-config",
      "headRefOid": "2e13a1d2fea26682387086425a0f550dbcb2d12d",
      "closedAt": "2022-09-16T11:57:16Z",
      "mergedAt": "2022-09-16T11:57:16Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "d7e57424d06e67790e35c37bf29c249932dee045"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85CIi2M",
          "commit": {
            "abbreviatedOid": "2e13a1d"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-09-15T16:40:49Z",
          "updatedAt": "2022-09-15T16:40:49Z",
          "comments": []
        }
      ]
    },
    {
      "number": 192,
      "id": "PR_kwDODeTEy84_GElC",
      "title": "Remove unlinkability implication from issuance secrecy",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/192",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #185.\r\n\r\ncc @nikitaborisov",
      "createdAt": "2022-09-16T12:04:52Z",
      "updatedAt": "2022-09-20T12:51:10Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "c8e4703b7d558a4aa612ff11ce4329ab20b34f92",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/remove-unlinkability-implication",
      "headRefOid": "1ac5f7c9be2e17c5d51203bc27b442b0a01a71d3",
      "closedAt": "2022-09-20T12:51:10Z",
      "mergedAt": "2022-09-20T12:51:10Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "df791cf2db8af18061f83d40d02fb23b2c62c5d9"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 193,
      "id": "PR_kwDODeTEy84_GFpJ",
      "title": "Clarify transitive trust in attesters",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/193",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #187.\r\n\r\ncc @nikitaborisov",
      "createdAt": "2022-09-16T12:09:23Z",
      "updatedAt": "2022-09-20T12:51:02Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "c8e4703b7d558a4aa612ff11ce4329ab20b34f92",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/clarify-transitive-trust",
      "headRefOid": "d357b0543f7589387bf2ca8e30af3bda4e1562d6",
      "closedAt": "2022-09-20T12:51:02Z",
      "mergedAt": "2022-09-20T12:51:02Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "ca5b0c2e73cdd3b76f434ed1d410aaf09ba7cfae"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 194,
      "id": "PR_kwDODeTEy84_GHyl",
      "title": "Clarify issuance protocol input",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/194",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This clarifies the inputs to the issuance protocol as constrained by the current HTTP authentication document. It also notes that these inputs may change in the future to accommodate different issuance protocols and Token formats.\r\n\r\nCloses #188 \r\n\r\ncc @tfpauly, @nikitaborisov",
      "createdAt": "2022-09-16T12:18:25Z",
      "updatedAt": "2022-09-20T12:50:54Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "c8e4703b7d558a4aa612ff11ce4329ab20b34f92",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/clarify-issuance-input",
      "headRefOid": "17c3479220ea925681476077a7e17ce8445cda0c",
      "closedAt": "2022-09-20T12:50:54Z",
      "mergedAt": "2022-09-20T12:50:54Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "f88a1b05f22b16cfec89ab5599a662390f162cad"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85CMz1W",
          "commit": {
            "abbreviatedOid": "3e7b8db"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-09-16T13:05:47Z",
          "updatedAt": "2022-09-16T13:06:25Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "```suggestion\nmay change or extend the Client's input to the issuance protocol to produce\n```\n",
              "createdAt": "2022-09-16T13:05:47Z",
              "updatedAt": "2022-09-16T13:06:25Z"
            }
          ]
        }
      ]
    },
    {
      "number": 195,
      "id": "PR_kwDODeTEy84_GKUB",
      "title": "Clarify non-collusion requirements",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/195",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This doesn't go overboard and clarify non-collusion assumptions for all models. It simply states the requirement that entities with access to the attestation context and redemption context do not collude, and then generalizes somewhat for simplicity. \r\n\r\nCloses #190.\r\n\r\ncc @tfpauly., @nikitaborisov",
      "createdAt": "2022-09-16T12:28:48Z",
      "updatedAt": "2022-09-20T12:50:47Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "c8e4703b7d558a4aa612ff11ce4329ab20b34f92",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/clarify-collusion-1",
      "headRefOid": "e41b97de91e74c29c3390b44f640a19a56b3c070",
      "closedAt": "2022-09-20T12:50:46Z",
      "mergedAt": "2022-09-20T12:50:46Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "9eb55c4703da4055cba09baa96a93e931f405377"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85CMrU7",
          "commit": {
            "abbreviatedOid": "8655ae1"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-09-16T12:39:25Z",
          "updatedAt": "2022-09-16T12:39:27Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "```suggestion\r\nmodels and their corresponding security and privacy considerations.\r\n\r\nThe discussion below assumes non-collusion between entities that have access to\r\nthe attestation context and redemption context, as collusion between such entities\r\nwould enable linking of these contexts. Generally, this means that entities operated\r\nby separate parties do not collude. Mechanisms for enforcing non-collusion are out of\r\nscope for this architecture.\r\n```",
              "createdAt": "2022-09-16T12:39:26Z",
              "updatedAt": "2022-09-16T12:39:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85CM0a9",
          "commit": {
            "abbreviatedOid": "87135dc"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-09-16T13:07:33Z",
          "updatedAt": "2022-09-16T13:07:51Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "```suggestion\nthe attestation context and entities that have access to the redemption context, as collusion between such entities\n```\n",
              "createdAt": "2022-09-16T13:07:33Z",
              "updatedAt": "2022-09-16T13:07:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85CN_Dx",
          "commit": {
            "abbreviatedOid": "e41b97d"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-09-16T16:48:07Z",
          "updatedAt": "2022-09-16T16:48:07Z",
          "comments": []
        }
      ]
    },
    {
      "number": 196,
      "id": "PR_kwDODeTEy84_GMZJ",
      "title": "Add section on timing attacks",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/196",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #191.\r\n\r\ncc @tfpauly, @nikitaborisov",
      "createdAt": "2022-09-16T12:37:30Z",
      "updatedAt": "2022-09-20T12:50:38Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "c8e4703b7d558a4aa612ff11ce4329ab20b34f92",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/timing-attacks",
      "headRefOid": "72b0d977590e4cdc81608443b548e5a5276ad137",
      "closedAt": "2022-09-20T12:50:37Z",
      "mergedAt": "2022-09-20T12:50:37Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "1e3fec4baff3e80ff103a7076bf8728a41e563fc"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85CM01s",
          "commit": {
            "abbreviatedOid": "72b0d97"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-09-16T13:08:46Z",
          "updatedAt": "2022-09-16T13:09:37Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "Did you intend to bump this up a level from ## to # ?",
              "createdAt": "2022-09-16T13:08:46Z",
              "updatedAt": "2022-09-16T13:09:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85CNDBD",
          "commit": {
            "abbreviatedOid": "72b0d97"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-09-16T13:48:02Z",
          "updatedAt": "2022-09-16T13:48:02Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "Yeah, it didn't seem like a privacy consideration. ",
              "createdAt": "2022-09-16T13:48:02Z",
              "updatedAt": "2022-09-16T13:48:02Z"
            }
          ]
        }
      ]
    },
    {
      "number": 198,
      "id": "PR_kwDODeTEy85AEWw7",
      "title": "Reserve private use token type values",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/198",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "auth-scheme"
      ],
      "body": "Closes #197",
      "createdAt": "2022-10-03T15:59:33Z",
      "updatedAt": "2022-10-03T16:17:27Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "df791cf2db8af18061f83d40d02fb23b2c62c5d9",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "tfpauly-patch-2",
      "headRefOid": "c7694c0da4a32b09d25aa506b49b94597fbbd9f0",
      "closedAt": "2022-10-03T16:17:27Z",
      "mergedAt": "2022-10-03T16:17:27Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "3802a30a44feed8039b6c65210409c24decf3584"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85DRdqR",
          "commit": {
            "abbreviatedOid": "c7694c0"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-10-03T16:01:15Z",
          "updatedAt": "2022-10-03T16:01:15Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODeTEy85DRjP7",
          "commit": {
            "abbreviatedOid": "c7694c0"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-10-03T16:17:21Z",
          "updatedAt": "2022-10-03T16:17:21Z",
          "comments": []
        }
      ]
    },
    {
      "number": 200,
      "id": "PR_kwDODeTEy85Axtd3",
      "title": "Added citation for PPEXT in text",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/200",
      "state": "MERGED",
      "author": "jsalowey",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-10-14T00:17:32Z",
      "updatedAt": "2022-10-14T10:26:00Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "3802a30a44feed8039b6c65210409c24decf3584",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "jsalowey-cite",
      "headRefOid": "c7a27421c807137516604e54824237ed21702ab7",
      "closedAt": "2022-10-14T10:26:00Z",
      "mergedAt": "2022-10-14T10:26:00Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "00d17798fbbdde4c500affba6ba1a7a92c192e9e"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85EDZte",
          "commit": {
            "abbreviatedOid": "c7a2742"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-10-14T02:48:35Z",
          "updatedAt": "2022-10-14T02:48:35Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODeTEy85EFIce",
          "commit": {
            "abbreviatedOid": "c7a2742"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-10-14T10:25:56Z",
          "updatedAt": "2022-10-14T10:25:56Z",
          "comments": []
        }
      ]
    },
    {
      "number": 201,
      "id": "PR_kwDODeTEy85Ax0aF",
      "title": "Adding references to Redemption and issuance protools in intro",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/201",
      "state": "MERGED",
      "author": "jsalowey",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-10-14T00:59:54Z",
      "updatedAt": "2022-10-14T10:26:17Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "3802a30a44feed8039b6c65210409c24decf3584",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "jsalowey-docs",
      "headRefOid": "9776c10085edddf1f653c2adc7c8622b0c6dea54",
      "closedAt": "2022-10-14T10:26:17Z",
      "mergedAt": "2022-10-14T10:26:17Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "324fbb4f51924097d395fd436b56c7e48ff62e3d"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85EDZrS",
          "commit": {
            "abbreviatedOid": "9776c10"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-10-14T02:48:18Z",
          "updatedAt": "2022-10-14T02:48:18Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODeTEy85EFI2s",
          "commit": {
            "abbreviatedOid": "9776c10"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-10-14T10:26:12Z",
          "updatedAt": "2022-10-14T10:26:12Z",
          "comments": []
        }
      ]
    },
    {
      "number": 202,
      "id": "PR_kwDODeTEy85Ax000",
      "title": "Remove reference to rfc8446",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/202",
      "state": "MERGED",
      "author": "jsalowey",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-10-14T01:02:54Z",
      "updatedAt": "2022-10-14T01:26:31Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "3802a30a44feed8039b6c65210409c24decf3584",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "jsalowey-remove-8446",
      "headRefOid": "4c53c3e352da5c091ac5a6d3c99af4f31875fbf4",
      "closedAt": "2022-10-14T01:26:31Z",
      "mergedAt": "2022-10-14T01:26:31Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "af679b3132cd52fa1f2939a34ad79fd03b6946c1"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 204,
      "id": "PR_kwDODeTEy85A71aa",
      "title": "Address Joe nits",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/204",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #203.\r\n\r\ncc @tfpauly ",
      "createdAt": "2022-10-17T14:17:53Z",
      "updatedAt": "2022-10-17T16:58:32Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "324fbb4f51924097d395fd436b56c7e48ff62e3d",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/joe-nits",
      "headRefOid": "7dc6671a8218810c30d345a14e0872cfca542de4",
      "closedAt": "2022-10-17T16:58:32Z",
      "mergedAt": "2022-10-17T16:58:32Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "ccf6f2e58425b688e583f91a45869fc3eb177020"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85EM_Hn",
          "commit": {
            "abbreviatedOid": "7dc6671"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-10-17T14:19:51Z",
          "updatedAt": "2022-10-17T14:19:51Z",
          "comments": []
        }
      ]
    },
    {
      "number": 205,
      "id": "PR_kwDODeTEy85BHdqk",
      "title": "Update media types to align with the authentication scheme",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/205",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #199.\r\n\r\nI also moved from the message namespace to the application namespace. The difference is helpfully summarized [in this DAP issue](https://github.com/ietf-wg-ppm/draft-ietf-ppm-dap/issues/264).",
      "createdAt": "2022-10-19T14:52:35Z",
      "updatedAt": "2022-10-31T19:40:26Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "ccf6f2e58425b688e583f91a45869fc3eb177020",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/align-media-types",
      "headRefOid": "a7e998d6285643f269ae8035ae92cfc210cb4b90",
      "closedAt": "2022-10-31T19:40:25Z",
      "mergedAt": "2022-10-31T19:40:25Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "26a6ae414a727da56f21374082866d3270deccc7"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85EaXFN",
          "commit": {
            "abbreviatedOid": "a7e998d"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Looks good!",
          "createdAt": "2022-10-19T14:57:34Z",
          "updatedAt": "2022-10-19T14:57:34Z",
          "comments": []
        }
      ]
    },
    {
      "number": 207,
      "id": "PR_kwDODeTEy85Bv50s",
      "title": "Add discussion about 0-RTT replays",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/207",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #206.",
      "createdAt": "2022-10-28T12:56:53Z",
      "updatedAt": "2022-10-28T20:46:23Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "ccf6f2e58425b688e583f91a45869fc3eb177020",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/0rtt",
      "headRefOid": "5c48072b73e3443384b7e082449ed7bfc0bfc094",
      "closedAt": "2022-10-28T20:46:23Z",
      "mergedAt": "2022-10-28T20:46:23Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "4390a70daac145f4fb59c054bbd691954206aed7"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85FJ32v",
          "commit": {
            "abbreviatedOid": "5c48072"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-10-28T15:01:58Z",
          "updatedAt": "2022-10-28T15:01:58Z",
          "comments": []
        }
      ]
    },
    {
      "number": 208,
      "id": "PR_kwDODeTEy85Bwd2X",
      "title": "Update HTTP references to 9110",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/208",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "auth-scheme"
      ],
      "body": "",
      "createdAt": "2022-10-28T15:05:14Z",
      "updatedAt": "2022-10-28T15:15:26Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "ccf6f2e58425b688e583f91a45869fc3eb177020",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "tfpauly-patch-3",
      "headRefOid": "f76183ff1d084ee349b7e8a9be88c1aacdf60f30",
      "closedAt": "2022-10-28T15:15:26Z",
      "mergedAt": "2022-10-28T15:15:26Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "b4b3b463f10a4e77b995585fb0a1a376d12c9671"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85FJ8js",
          "commit": {
            "abbreviatedOid": "f76183f"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-10-28T15:15:22Z",
          "updatedAt": "2022-10-28T15:15:22Z",
          "comments": []
        }
      ]
    },
    {
      "number": 210,
      "id": "PR_kwDODeTEy85BwfGm",
      "title": "Add quotes around base64 auth params",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/210",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "tfpauly"
      ],
      "labels": [
        "auth-scheme"
      ],
      "body": "Closes #209",
      "createdAt": "2022-10-28T15:09:54Z",
      "updatedAt": "2022-12-05T17:02:59Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "ccf6f2e58425b688e583f91a45869fc3eb177020",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "tfpauly-patch-4",
      "headRefOid": "7deda1d302e55d1dd9a0865f726bc7cbbc0ad650",
      "closedAt": "2022-11-03T16:25:26Z",
      "mergedAt": "2022-11-03T16:25:26Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "6c14107e62da8b1fe3bd5936b44ecb9c9e783bf5"
      },
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Is this a breaking change? In my reference implementation, I grab everything after the `token=` prefix because that's what the spec said to do.",
          "createdAt": "2022-10-28T15:19:27Z",
          "updatedAt": "2022-10-28T15:19:27Z"
        },
        {
          "author": "reschke",
          "authorAssociation": "NONE",
          "body": "> Is this a breaking change? In my reference implementation, I grab everything after the `token=` prefix because that's what the spec said to do.\r\n\r\nWell, it would break implementations that do not use the generic HTTP auth grammar for challenges/credentials.",
          "createdAt": "2022-10-28T15:23:02Z",
          "updatedAt": "2022-10-28T15:23:02Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "> Well, it would break implementations that do not use the generic HTTP auth grammar for challenges/credentials.\r\n\r\nSo, yes, this is a breaking change then =) Before this change the spec did not specify the grammar precisely.",
          "createdAt": "2022-10-28T15:24:52Z",
          "updatedAt": "2022-10-28T15:24:52Z"
        },
        {
          "author": "reschke",
          "authorAssociation": "NONE",
          "body": "> > Well, it would break implementations that do not use the generic HTTP auth grammar for challenges/credentials.\r\n> \r\n> So, yes, this is a breaking change then =) Before this change the spec did not specify the grammar precisely.\r\n\r\nWell; it said that it is an HTTP auth scheme, and that, by definition, causes specific syntax requirements.\r\n\r\nOK, let me rephrase this... The spec should say that is uses \"#auth-param\" (as per https://greenbytes.de/tech/webdav/rfc9110.html#auth.params) and then maybe clarify that this may require quoting base64 encoded fields.",
          "createdAt": "2022-10-28T15:26:55Z",
          "updatedAt": "2022-10-28T15:31:11Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "Right, if the padding isn't needed, then it would be OK to not quote. Our implementation does handle receiving the quotes or not correctly, so the spec was out of alignment there. This is the right change to make.",
          "createdAt": "2022-10-28T15:41:57Z",
          "updatedAt": "2022-10-28T15:41:57Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "@reschke RFC9110 has this to say about `auth-param` encoding:\r\n\r\n> Parameter values can be expressed either as \"token\" or as \"quoted-string\" ([Section 5.6](https://greenbytes.de/tech/webdav/rfc9110.html#fields.components)). Authentication scheme definitions need to accept both notations, both for senders and recipients, to allow recipients to use generic parsing components regardless of the authentication scheme.\r\n\r\nMost of the implementations of authentication headers I've seen do _not_ use any sort of generic parsing components. Now, I've not seen very many, but enough to conclude that people just reimplement whatever parsing is needed based on the auth type. Do you know how common it is for implementations to rely on these \"generic\" parsing functions? \r\n\r\nI ask because this change means that servers that were not previously supporting both types of auth-param encodings need to, and there doesn't seem to be any good reason to do so rather than, say, just pick one. If a server is using these generic parsing functions, then they can continue using them. Otherwise, if they're rolling parsing fresh, they have a simpler task at hand.\r\n\r\nAssuming clients can also easily pick one option, what's the technical reason for wanting to support both?",
          "createdAt": "2022-10-28T16:23:43Z",
          "updatedAt": "2022-10-28T16:23:43Z"
        },
        {
          "author": "reschke",
          "authorAssociation": "NONE",
          "body": "Apart of not having to rewrite parsers for each scheme?\r\n\r\n*Clients* need to use a generic parser, because WWW-A can hold a list of different challenges. To get to the point where a client can pick the \"best\" challenge, it actually has to consume the full combined field value, and the only way to do that is a parser that is scheme-agnostic. ",
          "createdAt": "2022-10-28T17:24:22Z",
          "updatedAt": "2022-10-28T17:24:22Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "@reschke let me know if this text looks good now",
          "createdAt": "2022-10-28T20:46:05Z",
          "updatedAt": "2022-10-28T20:46:05Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Approved and taking my concerns to this [lovely new draft](https://github.com/httpwg/http-extensions/issues/2280)!",
          "createdAt": "2022-10-31T19:58:09Z",
          "updatedAt": "2022-10-31T19:58:09Z"
        },
        {
          "author": "reschke",
          "authorAssociation": "NONE",
          "body": "> To be concrete, why can't we simply say that clients MUST use auth-params when encoding auth-params to the server? And similarly for parameters from server to client? @reschke, thoughts?\r\n\r\nNot sure I understand the question. The syntax for the authentication fields is defined in RFC 9110. You really can't change it (while conforming to that spec). All you get to do is naming the scheme and the auth-param names.",
          "createdAt": "2022-12-05T16:52:31Z",
          "updatedAt": "2022-12-05T16:52:31Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "My objection is to the syntax in RFC 9110 itself. It's unhelpfully flexible. But I've settled with addressing that syntax elsewhere.",
          "createdAt": "2022-12-05T16:53:46Z",
          "updatedAt": "2022-12-05T16:54:07Z"
        },
        {
          "author": "reschke",
          "authorAssociation": "NONE",
          "body": "> My objection is to the syntax in RFC 9110 itself.\r\n\r\nThen your objection is ~25 years late :-).",
          "createdAt": "2022-12-05T16:57:52Z",
          "updatedAt": "2022-12-05T16:57:52Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Heh, I'm aware! :) ",
          "createdAt": "2022-12-05T17:02:58Z",
          "updatedAt": "2022-12-05T17:02:58Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85FKAM8",
          "commit": {
            "abbreviatedOid": "3c39d2d"
          },
          "author": "reschke",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "Are there cases where the base64url encoding would not include padding? In these cases quoting is not necessary. The spec should require senders to send conforming messages (thus use quoting when needed), but also require recipients to parse token/quoted-string as defined in the base spec (note that for quoted-string that implies unescaping certain sequences).",
          "createdAt": "2022-10-28T15:25:41Z",
          "updatedAt": "2022-10-28T15:25:41Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODeTEy85FK1p8",
          "commit": {
            "abbreviatedOid": "3c39d2d"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-10-28T18:29:55Z",
          "updatedAt": "2022-10-28T18:32:26Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "```suggestion\r\n- \"challenge\", which contains a base64url-encoded {{!RFC4648}} TokenChallenge\r\n value. Since the length of the challenge is not fixed, the base64url value MUST\r\n include padding. As an Authentication Parameter (`auth-param` from {{!RFC9110}}),\r\n the value can be either a token or a quoted-string, and might be required to be a\r\n quoted-string if the base64url string includes \"=\" characters. This challenge value\r\n MUST be unique for every 401 HTTP response to prevent replay attacks. This attribute\r\n is required for all challenges.\r\n```",
              "createdAt": "2022-10-28T18:29:55Z",
              "updatedAt": "2022-10-28T20:43:14Z"
            },
            {
              "originalPosition": 18,
              "body": "```suggestion\r\n- \"token-key\", which contains a base64url encoding of the public key for\r\nuse with the issuance protocol indicated by the challenge. Since the length of\r\nthe key is not fixed, the base64url value MUST include padding. As an\r\nAuthentication Parameter (`auth-param` from {{!RFC9110}}), the value can be\r\neither a token or a quoted-string, and might be required to be a\r\nquoted-string if the base64url string includes \"=\" characters. This attribute\r\nMAY be omitted in deployments where clients are able to retrieve the issuer key\r\nusing an out-of-band mechanism.\r\n```",
              "createdAt": "2022-10-28T18:31:37Z",
              "updatedAt": "2022-10-28T20:43:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85FLLNd",
          "commit": {
            "abbreviatedOid": "3c39d2d"
          },
          "author": "reschke",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-10-28T19:21:56Z",
          "updatedAt": "2022-10-28T19:21:56Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "\"depending on if the base64url string includes \"=\" characters\" -> \"and might be required to ba quoted-string if....\"",
              "createdAt": "2022-10-28T19:21:56Z",
              "updatedAt": "2022-10-28T19:21:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85FLLqU",
          "commit": {
            "abbreviatedOid": "3c39d2d"
          },
          "author": "reschke",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-10-28T19:22:51Z",
          "updatedAt": "2022-10-28T19:22:52Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "(same type of comment here; the recipient needs to handle both formats no matter what)",
              "createdAt": "2022-10-28T19:22:52Z",
              "updatedAt": "2022-10-28T19:22:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85FLt0m",
          "commit": {
            "abbreviatedOid": "3c39d2d"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-10-28T20:43:17Z",
          "updatedAt": "2022-10-28T20:43:17Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "Updated!",
              "createdAt": "2022-10-28T20:43:17Z",
              "updatedAt": "2022-10-28T20:43:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85FLuOo",
          "commit": {
            "abbreviatedOid": "3c39d2d"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-10-28T20:44:01Z",
          "updatedAt": "2022-10-28T20:44:01Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "Updated!",
              "createdAt": "2022-10-28T20:44:01Z",
              "updatedAt": "2022-10-28T20:44:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85FMlFf",
          "commit": {
            "abbreviatedOid": "7deda1d"
          },
          "author": "reschke",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-10-29T05:53:24Z",
          "updatedAt": "2022-10-29T05:53:24Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODeTEy85FPsYd",
          "commit": {
            "abbreviatedOid": "7deda1d"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "This aligns with RFC9110, but I still don't really like it. In particular, I see no technical reason why we can't be more restrictive here, given that this is a new auth type and, based on my experience, most servers will have to roll new parsing logic for it anyway.\r\n\r\nTo be concrete, why can't we simply say that clients MUST use auth-params when encoding auth-params to the server? And similarly for parameters from server to client? @reschke, thoughts?",
          "createdAt": "2022-10-31T11:46:15Z",
          "updatedAt": "2022-10-31T11:46:15Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODeTEy85FSaOJ",
          "commit": {
            "abbreviatedOid": "7deda1d"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-10-31T19:49:18Z",
          "updatedAt": "2022-10-31T19:49:18Z",
          "comments": []
        }
      ]
    },
    {
      "number": 218,
      "id": "PR_kwDODeTEy85DgF-e",
      "title": "Fix struct field reference in section 2.2",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/218",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "auth-scheme"
      ],
      "body": "Closes #216",
      "createdAt": "2022-11-22T22:26:41Z",
      "updatedAt": "2022-11-22T22:30:36Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "6c14107e62da8b1fe3bd5936b44ecb9c9e783bf5",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "tfpauly-patch-5",
      "headRefOid": "609c983a2364ed3a6d4c35920e3756b080a59971",
      "closedAt": "2022-11-22T22:30:35Z",
      "mergedAt": "2022-11-22T22:30:35Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "065f0030dca6d5c35f2d123b2b06158a76b8e63d"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85G-vu9",
          "commit": {
            "abbreviatedOid": "609c983"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-11-22T22:30:31Z",
          "updatedAt": "2022-11-22T22:30:31Z",
          "comments": []
        }
      ]
    },
    {
      "number": 219,
      "id": "PR_kwDODeTEy85DgGso",
      "title": "Clarify use of greased token types",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/219",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "auth-scheme"
      ],
      "body": "Closes #217",
      "createdAt": "2022-11-22T22:29:33Z",
      "updatedAt": "2022-11-22T22:31:20Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "6c14107e62da8b1fe3bd5936b44ecb9c9e783bf5",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "tfpauly-patch-6",
      "headRefOid": "df0445c849d4331b99089fc01d418c2d8be8d862",
      "closedAt": "2022-11-22T22:31:20Z",
      "mergedAt": "2022-11-22T22:31:20Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "039a561f980d5ba10700e57db88448c1fb81ff52"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85G-vtR",
          "commit": {
            "abbreviatedOid": "df0445c"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-11-22T22:30:24Z",
          "updatedAt": "2022-11-22T22:30:24Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODeTEy85G-v4f",
          "commit": {
            "abbreviatedOid": "df0445c"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-11-22T22:31:15Z",
          "updatedAt": "2022-11-22T22:31:15Z",
          "comments": []
        }
      ]
    },
    {
      "number": 220,
      "id": "PR_kwDODeTEy85DgHuN",
      "title": "Header -> header field",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/220",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "auth-scheme"
      ],
      "body": "This one goes out to all the HTTP pedants out there =)\r\n\r\nCloses #213",
      "createdAt": "2022-11-22T22:34:03Z",
      "updatedAt": "2022-11-22T23:31:49Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "039a561f980d5ba10700e57db88448c1fb81ff52",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "tfpauly-patch-7",
      "headRefOid": "a625a57a27a671dae0e37211011532a28fe11492",
      "closedAt": "2022-11-22T23:31:49Z",
      "mergedAt": "2022-11-22T23:31:48Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "9531c1e6312544ad388b7f886383d75a420f2213"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85G-6DR",
          "commit": {
            "abbreviatedOid": "a625a57"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-11-22T23:31:16Z",
          "updatedAt": "2022-11-22T23:31:16Z",
          "comments": []
        }
      ]
    },
    {
      "number": 221,
      "id": "PR_kwDODeTEy85DgIaa",
      "title": "Add sections for RFC 9110",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/221",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "auth-scheme",
        "editorial"
      ],
      "body": "Closes #212",
      "createdAt": "2022-11-22T22:37:32Z",
      "updatedAt": "2022-11-22T23:33:26Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "039a561f980d5ba10700e57db88448c1fb81ff52",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "tfpauly-patch-8",
      "headRefOid": "05178cb841b5319b370446a68febc1eb374e5908",
      "closedAt": "2022-11-22T23:33:26Z",
      "mergedAt": "2022-11-22T23:33:26Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "bec2bc7e09626c3a84e967dacd234481d672785a"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85G-6UY",
          "commit": {
            "abbreviatedOid": "05178cb"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-11-22T23:33:05Z",
          "updatedAt": "2022-11-22T23:33:05Z",
          "comments": []
        }
      ]
    },
    {
      "number": 222,
      "id": "PR_kwDODeTEy85DgJJ7",
      "title": "Clarify origin's behavior in constructing origin_info",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/222",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "auth-scheme"
      ],
      "body": "Closes #214",
      "createdAt": "2022-11-22T22:41:18Z",
      "updatedAt": "2022-11-22T23:36:25Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "039a561f980d5ba10700e57db88448c1fb81ff52",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "tfpauly-patch-9",
      "headRefOid": "003354732f8d13c922afc9e99b5b409f1807a1cf",
      "closedAt": "2022-11-22T23:36:25Z",
      "mergedAt": "2022-11-22T23:36:25Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "c671a6da94452eeccaa9b004571219f8341634d0"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85G-6m4",
          "commit": {
            "abbreviatedOid": "0033547"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-11-22T23:35:15Z",
          "updatedAt": "2022-11-22T23:35:15Z",
          "comments": []
        }
      ]
    },
    {
      "number": 223,
      "id": "PR_kwDODeTEy85DgJwp",
      "title": "Clarify client behavior on failed validation",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/223",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "auth-scheme"
      ],
      "body": "Closes #215",
      "createdAt": "2022-11-22T22:44:24Z",
      "updatedAt": "2022-11-22T23:36:14Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "039a561f980d5ba10700e57db88448c1fb81ff52",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "tfpauly-patch-10",
      "headRefOid": "ea09e780761fc70b024f6ff3ae620f72da1057f5",
      "closedAt": "2022-11-22T23:36:13Z",
      "mergedAt": "2022-11-22T23:36:13Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "16abec84c40741ff8e62323e174cbd5307fcb864"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85G-6ur",
          "commit": {
            "abbreviatedOid": "ea09e78"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-11-22T23:36:08Z",
          "updatedAt": "2022-11-22T23:36:08Z",
          "comments": []
        }
      ]
    },
    {
      "number": 224,
      "id": "PR_kwDODeTEy85DgKrs",
      "title": "Reword intro",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/224",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "auth-scheme"
      ],
      "body": "Closes #211",
      "createdAt": "2022-11-22T22:49:07Z",
      "updatedAt": "2022-11-23T00:37:26Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "039a561f980d5ba10700e57db88448c1fb81ff52",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "tfpauly-patch-11",
      "headRefOid": "17f2693dfab7d5196730a4f40e09a040c893718b",
      "closedAt": "2022-11-23T00:37:25Z",
      "mergedAt": "2022-11-23T00:37:25Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "b4817b15b6e09844316f46c71569e9961ed77f0c"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85G-7BH",
          "commit": {
            "abbreviatedOid": "17f2693"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-11-22T23:38:12Z",
          "updatedAt": "2022-11-22T23:38:12Z",
          "comments": []
        }
      ]
    },
    {
      "number": 245,
      "id": "PR_kwDODeTEy85D_fto",
      "title": "Nit for capabilities",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/245",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "auth-scheme"
      ],
      "body": "Closes #238",
      "createdAt": "2022-11-30T18:16:18Z",
      "updatedAt": "2022-11-30T18:27:22Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "b4817b15b6e09844316f46c71569e9961ed77f0c",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "tfpauly-patch-12",
      "headRefOid": "75bcc0e558102aa5e76763f8164ec8954aa041e2",
      "closedAt": "2022-11-30T18:27:22Z",
      "mergedAt": "2022-11-30T18:27:22Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "8beac7d61fe4555b5a543d803b69de97b1366a73"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85Hg783",
          "commit": {
            "abbreviatedOid": "75bcc0e"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-11-30T18:20:01Z",
          "updatedAt": "2022-11-30T18:20:01Z",
          "comments": []
        }
      ]
    },
    {
      "number": 246,
      "id": "PR_kwDODeTEy85D_hc5",
      "title": "Challenges may be bound to TLS connections, not HTTP sessions",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/246",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "tfpauly"
      ],
      "labels": [
        "auth-scheme"
      ],
      "body": "Closes #243",
      "createdAt": "2022-11-30T18:24:15Z",
      "updatedAt": "2022-11-30T22:58:49Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "b4817b15b6e09844316f46c71569e9961ed77f0c",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "tfpauly-patch-13",
      "headRefOid": "ea7f99609b7bf04d40c1a633c50243d528ee5703",
      "closedAt": "2022-11-30T22:58:49Z",
      "mergedAt": "2022-11-30T22:58:49Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "b0af5646efbb431cf96fb46e880f6381559bb16e"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85Hg_Ob",
          "commit": {
            "abbreviatedOid": "412f587"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-11-30T18:30:37Z",
          "updatedAt": "2022-11-30T18:30:38Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nA TokenChallenge MAY be bound to a specific TLS session with a client, but\r\n```\r\nSince it would be reasonable for the challenge to be associated with a ticket, for example.",
              "createdAt": "2022-11-30T18:30:37Z",
              "updatedAt": "2022-11-30T18:30:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85Hg_Pd",
          "commit": {
            "abbreviatedOid": "412f587"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-11-30T18:30:41Z",
          "updatedAt": "2022-11-30T18:30:41Z",
          "comments": []
        }
      ]
    },
    {
      "number": 247,
      "id": "PR_kwDODeTEy85D_jYU",
      "title": "Attribute -> parameter",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/247",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "auth-scheme"
      ],
      "body": "Closes #241",
      "createdAt": "2022-11-30T18:32:38Z",
      "updatedAt": "2022-11-30T22:58:21Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "8beac7d61fe4555b5a543d803b69de97b1366a73",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "tfpauly-patch-14",
      "headRefOid": "94c2db597b34270a107ec832144a692f7e309316",
      "closedAt": "2022-11-30T22:58:21Z",
      "mergedAt": "2022-11-30T22:58:21Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "9b94f18fd56e998d2af4e5484d0bb585bce2cf72"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85HhADh",
          "commit": {
            "abbreviatedOid": "8f5835a"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-11-30T18:33:08Z",
          "updatedAt": "2022-11-30T18:33:08Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODeTEy85HhAJ7",
          "commit": {
            "abbreviatedOid": "8f5835a"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-11-30T18:33:26Z",
          "updatedAt": "2022-11-30T18:33:26Z",
          "comments": [
            {
              "originalPosition": 35,
              "body": "```suggestion\r\nprotocols MAY require other parameters. Clients SHOULD ignore unknown parameters\r\n```",
              "createdAt": "2022-11-30T18:33:26Z",
              "updatedAt": "2022-11-30T18:33:26Z"
            }
          ]
        }
      ]
    },
    {
      "number": 248,
      "id": "PR_kwDODeTEy85D_oot",
      "title": "Clarify that tokens are generally single-use",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/248",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "tfpauly"
      ],
      "labels": [
        "auth-scheme"
      ],
      "body": "Closes #242",
      "createdAt": "2022-11-30T18:55:40Z",
      "updatedAt": "2022-12-02T18:56:46Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "8beac7d61fe4555b5a543d803b69de97b1366a73",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "tfpauly-patch-15",
      "headRefOid": "dc68f9e3eca5ea8e9f88b843fd6a32700dac3eeb",
      "closedAt": "2022-12-02T18:56:46Z",
      "mergedAt": "2022-12-02T18:56:46Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "012b902e96a3e691e505c0e154bbd909fb695eaa"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85Hh3PN",
          "commit": {
            "abbreviatedOid": "81fc0e0"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2022-11-30T21:49:07Z",
          "updatedAt": "2022-11-30T21:54:43Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\nacross multiple requests, tokens used with the \"PrivateToken\" scheme are\n```\n",
              "createdAt": "2022-11-30T21:49:07Z",
              "updatedAt": "2022-11-30T21:54:43Z"
            },
            {
              "originalPosition": 6,
              "body": "I think I understand the intent here -- to allow issuance protocols where tokens can be \"presented\" more than once without privacy regressions -- but this text seems like it would allow clients to literally double spend the same value. That would be a privacy regression. Instead, I would phrase this as something like \"spending the same token value more than once allows the origin to link multiple sessions to the same client,\" and omit mention of what future protocols may do. ",
              "createdAt": "2022-11-30T21:54:34Z",
              "updatedAt": "2022-11-30T21:54:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85HsJjr",
          "commit": {
            "abbreviatedOid": "a9d5135"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-12-02T16:26:25Z",
          "updatedAt": "2022-12-02T16:26:26Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "```suggestion\r\nsingle-use credentials, and are not reused. Spending the same token value more than once allows the origin to link multiple transactions to the same client. In deployment scenarios\r\nwhere origins send token challenges to request tokens, origins ought to expect at most one\r\nrequest containing a token from the client in reaction to a particular challenge.\r\n```",
              "createdAt": "2022-12-02T16:26:25Z",
              "updatedAt": "2022-12-02T16:26:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85HsJs-",
          "commit": {
            "abbreviatedOid": "81fc0e0"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-12-02T16:26:54Z",
          "updatedAt": "2022-12-02T16:26:54Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "Applied that suggestion \u2014 please take a look @chris-wood ",
              "createdAt": "2022-12-02T16:26:54Z",
              "updatedAt": "2022-12-02T16:26:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85HsvTV",
          "commit": {
            "abbreviatedOid": "dc68f9e"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-12-02T18:29:02Z",
          "updatedAt": "2022-12-02T18:29:02Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODeTEy85HsvYT",
          "commit": {
            "abbreviatedOid": "81fc0e0"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-12-02T18:29:18Z",
          "updatedAt": "2022-12-02T18:29:19Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "Looks good!",
              "createdAt": "2022-12-02T18:29:18Z",
              "updatedAt": "2022-12-02T18:29:19Z"
            }
          ]
        }
      ]
    },
    {
      "number": 249,
      "id": "PR_kwDODeTEy85EJuqs",
      "title": "DO NOT SHOUT",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/249",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #225\r\nCloses #226",
      "createdAt": "2022-12-02T15:31:29Z",
      "updatedAt": "2022-12-05T17:07:45Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "b0af5646efbb431cf96fb46e880f6381559bb16e",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/do-not-shout",
      "headRefOid": "f35c693a134cce4431ad99a615e6eedf4588a22c",
      "closedAt": "2022-12-05T17:07:44Z",
      "mergedAt": "2022-12-05T17:07:44Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "0ab7dec974df7283e2ef844c8804d58744c528b9"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85HsJ3S",
          "commit": {
            "abbreviatedOid": "9154749"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-12-02T16:27:23Z",
          "updatedAt": "2022-12-02T16:27:23Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODeTEy85HsxAR",
          "commit": {
            "abbreviatedOid": "9154749"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-12-02T18:35:53Z",
          "updatedAt": "2022-12-02T18:35:54Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "```suggestion\r\nThis information is covered in {{ARCHITECTURE}}.\r\n```",
              "createdAt": "2022-12-02T18:35:53Z",
              "updatedAt": "2022-12-02T18:35:54Z"
            }
          ]
        }
      ]
    },
    {
      "number": 250,
      "id": "PR_kwDODeTEy85EJv_F",
      "title": "State assumption about message encoding more clearly",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/250",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #227",
      "createdAt": "2022-12-02T15:36:29Z",
      "updatedAt": "2022-12-05T17:07:54Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "b0af5646efbb431cf96fb46e880f6381559bb16e",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/meaningful-assumption",
      "headRefOid": "e130e8f859135a2b09c5051df55a31e10f3b365d",
      "closedAt": "2022-12-05T17:07:54Z",
      "mergedAt": "2022-12-05T17:07:54Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "70d776ea9d158a0cab0be397a7435cdb50ea105b"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85HsKAN",
          "commit": {
            "abbreviatedOid": "e130e8f"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-12-02T16:27:49Z",
          "updatedAt": "2022-12-02T16:27:49Z",
          "comments": []
        }
      ]
    },
    {
      "number": 251,
      "id": "PR_kwDODeTEy85EJy6r",
      "title": "Add configuration dictionary encoding information",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/251",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #229\r\nCloses #230",
      "createdAt": "2022-12-02T15:45:32Z",
      "updatedAt": "2022-12-05T17:13:53Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "d7dc96348aa70de2b58d2bb3cb78f254233ea038",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/encoding-details",
      "headRefOid": "09682c9e989b050da861c0d254df5e41cb62eb6f",
      "closedAt": "2022-12-05T17:13:53Z",
      "mergedAt": "2022-12-05T17:13:53Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "8dc67188d69dcf57de2084f35bdcb3d91f7d45b8"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85HsKRw",
          "commit": {
            "abbreviatedOid": "09682c9"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-12-02T16:28:39Z",
          "updatedAt": "2022-12-02T16:28:39Z",
          "comments": []
        }
      ]
    },
    {
      "number": 252,
      "id": "PR_kwDODeTEy85EJzoe",
      "title": "Clean up auth-scheme usage and references",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/252",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #231\r\nCloses #233",
      "createdAt": "2022-12-02T15:47:32Z",
      "updatedAt": "2022-12-05T17:17:47Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "8dc67188d69dcf57de2084f35bdcb3d91f7d45b8",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/cite-registry",
      "headRefOid": "d3aaf30c27a1f40cef38b3393ef450254e9e16ea",
      "closedAt": "2022-12-05T17:17:46Z",
      "mergedAt": "2022-12-05T17:17:46Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "00948b91f31038f1ddcbd6d3f3612e1e43c8efd0"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85HsH8P",
          "commit": {
            "abbreviatedOid": "48ef1a2"
          },
          "author": "LPardue",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-12-02T16:21:33Z",
          "updatedAt": "2022-12-02T16:21:34Z",
          "comments": [
            {
              "originalPosition": 69,
              "body": "You're also missing the `Nid: The length of the token key identifier` that the auth scheme says is required to be populated",
              "createdAt": "2022-12-02T16:21:33Z",
              "updatedAt": "2022-12-02T16:21:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85HsKZY",
          "commit": {
            "abbreviatedOid": "48ef1a2"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-12-02T16:29:01Z",
          "updatedAt": "2022-12-02T16:29:01Z",
          "comments": [
            {
              "originalPosition": 69,
              "body": "Good catch!",
              "createdAt": "2022-12-02T16:29:01Z",
              "updatedAt": "2022-12-02T16:29:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85HsUTn",
          "commit": {
            "abbreviatedOid": "48ef1a2"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-12-02T17:01:22Z",
          "updatedAt": "2022-12-02T17:01:22Z",
          "comments": [
            {
              "originalPosition": 69,
              "body": "Done.",
              "createdAt": "2022-12-02T17:01:22Z",
              "updatedAt": "2022-12-02T17:01:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85Hs2ON",
          "commit": {
            "abbreviatedOid": "984c577"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-12-02T18:56:23Z",
          "updatedAt": "2022-12-02T18:56:23Z",
          "comments": []
        }
      ]
    },
    {
      "number": 253,
      "id": "PR_kwDODeTEy85EJ1Z9",
      "title": "Register the well-known URI",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/253",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #232 \r\n\r\nWhile we're here, I'd like to recommend we align the name of this well-known value to align with the request/response names. In particular, what do folks think about \"/well-known/private-token-issuer-directory\"?",
      "createdAt": "2022-12-02T15:54:05Z",
      "updatedAt": "2022-12-05T17:09:35Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "70d776ea9d158a0cab0be397a7435cdb50ea105b",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/register-wk-uri",
      "headRefOid": "295ce5fc330774f98d90a1424dca48ae9bfcff7e",
      "closedAt": "2022-12-05T17:09:35Z",
      "mergedAt": "2022-12-05T17:09:35Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "08b4d515adfb8337cf04e92cae5f5565f6ca7c4a"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85Hs1UZ",
          "commit": {
            "abbreviatedOid": "e11e49e"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-12-02T18:53:04Z",
          "updatedAt": "2022-12-02T18:53:04Z",
          "comments": []
        }
      ]
    },
    {
      "number": 254,
      "id": "PR_kwDODeTEy85EJ4ut",
      "title": "Cite HTTP and use it correctly (for message content)",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/254",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #236\r\n\r\n... I think. I'm double checking to see if there is any other improper HTTP usage.",
      "createdAt": "2022-12-02T16:04:04Z",
      "updatedAt": "2022-12-05T17:13:12Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "6a4486001ba943c747ac9c5387c5868e22517867",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/proper-http",
      "headRefOid": "be8d1ddd601923ef06c05294f8aa75ee3d83aeed",
      "closedAt": "2022-12-05T17:13:12Z",
      "mergedAt": "2022-12-05T17:13:12Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "893eb052c157f21b3dc643ff20cbdbce32f1a09f"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85Hs1mm",
          "commit": {
            "abbreviatedOid": "be8d1dd"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-12-02T18:53:47Z",
          "updatedAt": "2022-12-02T18:53:47Z",
          "comments": []
        }
      ]
    },
    {
      "number": 255,
      "id": "PR_kwDODeTEy85EJ7fP",
      "title": "No need to be strict with VOPRF key generation",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/255",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This seemed too restrictive, so I relaxed it.",
      "createdAt": "2022-12-02T16:12:02Z",
      "updatedAt": "2022-12-05T17:09:51Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "6a4486001ba943c747ac9c5387c5868e22517867",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/relax-key-gen",
      "headRefOid": "da04139cbc13cd2b0e6ef80408cebab4712f9e01",
      "closedAt": "2022-12-05T17:09:51Z",
      "mergedAt": "2022-12-05T17:09:51Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "642f9435488906817561638dad17977e753db93c"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85Hs1q7",
          "commit": {
            "abbreviatedOid": "da04139"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-12-02T18:54:03Z",
          "updatedAt": "2022-12-02T18:54:03Z",
          "comments": []
        }
      ]
    },
    {
      "number": 256,
      "id": "PR_kwDODeTEy85EJ81s",
      "title": "Add notes field to the token type registry",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/256",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "We need a field to list some extra information about the blind RSA variants. Additional PR incoming for that change.",
      "createdAt": "2022-12-02T16:16:30Z",
      "updatedAt": "2022-12-05T17:10:26Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "6a4486001ba943c747ac9c5387c5868e22517867",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/add-notes-to-registry",
      "headRefOid": "797c522832b0eddde2b9f40bf0f7f7bd78666325",
      "closedAt": "2022-12-05T17:10:26Z",
      "mergedAt": "2022-12-05T17:10:26Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "ad15fb7168c051bb3977bbd72eb4203db48e8842"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85Hs1wP",
          "commit": {
            "abbreviatedOid": "797c522"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-12-02T18:54:23Z",
          "updatedAt": "2022-12-02T18:54:23Z",
          "comments": []
        }
      ]
    },
    {
      "number": 257,
      "id": "PR_kwDODeTEy85EJ9VH",
      "title": "Add blind RSA variants to the registry",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/257",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Builds on #256 -- merge that first.\r\n\r\nWe might consider using a list to describe the registry contents, rather than a table, now that it has so many entries. @tfpauly, thoughts?",
      "createdAt": "2022-12-02T16:18:25Z",
      "updatedAt": "2022-12-05T17:20:21Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "00948b91f31038f1ddcbd6d3f3612e1e43c8efd0",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/clarify-rsa-variants",
      "headRefOid": "23bc27e2d4a3b41c41b376fde163b8397405d063",
      "closedAt": "2022-12-05T17:20:21Z",
      "mergedAt": "2022-12-05T17:20:21Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "a960318d3bc76870deed153d92a512932701f4dd"
      },
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "I think it's OK as a table still for now, since that matches more what the registry will look like?",
          "createdAt": "2022-12-02T18:55:17Z",
          "updatedAt": "2022-12-02T18:55:17Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "It just renders pretty poorly in the HTML. I think I'll prep a list version as an alternate so we can compare.",
          "createdAt": "2022-12-03T14:11:50Z",
          "updatedAt": "2022-12-03T14:11:50Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85Hs128",
          "commit": {
            "abbreviatedOid": "e795b20"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-12-02T18:54:49Z",
          "updatedAt": "2022-12-02T18:54:49Z",
          "comments": []
        }
      ]
    },
    {
      "number": 258,
      "id": "PR_kwDODeTEy85EKAQR",
      "title": "Improve the challenge/response pictures",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/258",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #240",
      "createdAt": "2022-12-02T16:29:52Z",
      "updatedAt": "2022-12-05T17:05:04Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "6a4486001ba943c747ac9c5387c5868e22517867",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/improve-picture",
      "headRefOid": "3402d5eba417519ed9b99b5cd104a237d647620c",
      "closedAt": "2022-12-05T17:05:04Z",
      "mergedAt": "2022-12-05T17:05:04Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "023302ba97f2db2f69a6b1ae108d1bb2c7b763c8"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85Hzo2f",
          "commit": {
            "abbreviatedOid": "e2212e2"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-12-05T15:05:50Z",
          "updatedAt": "2022-12-05T15:05:50Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "```suggestion\r\nheader field). Clients then respond to that challenge with an HTTP authentiation response\r\n```",
              "createdAt": "2022-12-05T15:05:50Z",
              "updatedAt": "2022-12-05T15:05:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85HzpDp",
          "commit": {
            "abbreviatedOid": "47e33c2"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-12-05T15:06:17Z",
          "updatedAt": "2022-12-05T15:06:17Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "```suggestion\r\nbased on the origin's token challenge by running the token issuance protocol {{?ISSUANCE=I-D.ietf-privacypass-protocol}}.\r\n```",
              "createdAt": "2022-12-05T15:06:17Z",
              "updatedAt": "2022-12-05T15:06:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85H0cdj",
          "commit": {
            "abbreviatedOid": "3402d5e"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-12-05T17:04:55Z",
          "updatedAt": "2022-12-05T17:04:55Z",
          "comments": []
        }
      ]
    },
    {
      "number": 259,
      "id": "PR_kwDODeTEy85EKoLY",
      "title": "Add example of 401 response that supports legacy clients",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/259",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "auth-scheme"
      ],
      "body": "Closes #244",
      "createdAt": "2022-12-02T19:06:12Z",
      "updatedAt": "2022-12-05T17:23:58Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "012b902e96a3e691e505c0e154bbd909fb695eaa",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "tfpauly-patch-16",
      "headRefOid": "77cb80aadd349be2d87967471c60a48d9e877e6f",
      "closedAt": "2022-12-05T17:23:58Z",
      "mergedAt": "2022-12-05T17:23:58Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "78f8b2fd194633f3f6518552b7448c9101ecb178"
      },
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "@dvorak42 can you give this a quick look and merge if you're OK with it?",
          "createdAt": "2022-12-05T17:10:51Z",
          "updatedAt": "2022-12-05T17:10:51Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "I'll just merge it and we can revise if needed",
          "createdAt": "2022-12-05T17:23:53Z",
          "updatedAt": "2022-12-05T17:23:53Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85Hs44g",
          "commit": {
            "abbreviatedOid": "974be36"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-12-02T19:07:39Z",
          "updatedAt": "2022-12-02T19:07:40Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "```suggestion\r\neither do not support tokens or are unable to fetch tokens at a particular time can\r\n```",
              "createdAt": "2022-12-02T19:07:39Z",
              "updatedAt": "2022-12-02T19:07:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85Hs45O",
          "commit": {
            "abbreviatedOid": "974be36"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-12-02T19:07:43Z",
          "updatedAt": "2022-12-02T19:07:43Z",
          "comments": []
        }
      ]
    },
    {
      "number": 264,
      "id": "PR_kwDODeTEy85EWzxk",
      "title": "Remove public metadata mention",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/264",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #262",
      "createdAt": "2022-12-05T15:21:50Z",
      "updatedAt": "2022-12-05T20:18:47Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "012b902e96a3e691e505c0e154bbd909fb695eaa",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/remove-metadata-mention",
      "headRefOid": "633da247ec8362eba65e1ba3e5d863ee45296ca4",
      "closedAt": "2022-12-05T20:18:47Z",
      "mergedAt": "2022-12-05T20:18:47Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "af55a5b0ff21d4ddb96d9347bdf83111b73e7365"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85H0j7L",
          "commit": {
            "abbreviatedOid": "633da24"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-12-05T17:24:49Z",
          "updatedAt": "2022-12-05T17:24:49Z",
          "comments": []
        }
      ]
    },
    {
      "number": 265,
      "id": "PR_kwDODeTEy85EW055",
      "title": "Make RSA signature verification explicit",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/265",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #263",
      "createdAt": "2022-12-05T15:24:34Z",
      "updatedAt": "2022-12-05T20:19:05Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "012b902e96a3e691e505c0e154bbd909fb695eaa",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/explicit-verify",
      "headRefOid": "1743219da45f1777a3fd3011f080607735e666ac",
      "closedAt": "2022-12-05T20:19:04Z",
      "mergedAt": "2022-12-05T20:19:04Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "a16f4a847da224f39b8213ea882eb484fe3d4136"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85H0kC1",
          "commit": {
            "abbreviatedOid": "1743219"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-12-05T17:25:11Z",
          "updatedAt": "2022-12-05T17:25:11Z",
          "comments": []
        }
      ]
    },
    {
      "number": 266,
      "id": "PR_kwDODeTEy85EW_Mv",
      "title": "Apply cjpatton editorial suggestions",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/266",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #261\r\nCloses #260 \r\n",
      "createdAt": "2022-12-05T15:49:57Z",
      "updatedAt": "2022-12-05T20:20:21Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "a16f4a847da224f39b8213ea882eb484fe3d4136",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/cjpatton-edits",
      "headRefOid": "8adad37e6990b04329077997921ea64535f86a0a",
      "closedAt": "2022-12-05T20:20:20Z",
      "mergedAt": "2022-12-05T20:20:20Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "67c44e7ac570eebcd58807d92190a19d1f9c8a0f"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85H0KqI",
          "commit": {
            "abbreviatedOid": "834e7c5"
          },
          "author": "cjpatton",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-12-05T16:21:26Z",
          "updatedAt": "2022-12-05T16:21:26Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODeTEy85H0kiU",
          "commit": {
            "abbreviatedOid": "4b162fc"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-12-05T17:26:34Z",
          "updatedAt": "2022-12-05T17:26:34Z",
          "comments": []
        }
      ]
    },
    {
      "number": 268,
      "id": "PR_kwDODeTEy85FH1dF",
      "title": "Editorial pass",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/268",
      "state": "MERGED",
      "author": "ShivanKaul",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-12-12T00:25:48Z",
      "updatedAt": "2022-12-12T20:04:00Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "67c44e7ac570eebcd58807d92190a19d1f9c8a0f",
      "headRepository": "ShivanKaul/base-drafts",
      "headRefName": "patch-1",
      "headRefOid": "764a195603211b7c1f42632c1da6d6234a222112",
      "closedAt": "2022-12-12T20:03:59Z",
      "mergedAt": "2022-12-12T20:03:59Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "50ca7c6c6a3f6eafe96bd7ab3667e9749efa2b78"
      },
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks, @ShivanKaul! I applied some suggestions on top. I think this is an improvement, but will wait for some others to take a look, too.",
          "createdAt": "2022-12-12T12:19:02Z",
          "updatedAt": "2022-12-12T12:19:02Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85IUzOU",
          "commit": {
            "abbreviatedOid": "307addc"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-12-12T12:11:42Z",
          "updatedAt": "2022-12-12T12:17:55Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "```suggestion\r\nThe following terms are used throughout this document.\r\n```",
              "createdAt": "2022-12-12T12:11:42Z",
              "updatedAt": "2022-12-12T12:17:55Z"
            },
            {
              "originalPosition": 31,
              "body": "```suggestion\r\n- Client: An entity that runs the Issuance protocol with an Issuer to produce Tokens that can be later used for redemption (see {{Section 2.2 of AUTHSCHEME}}).\r\n```",
              "createdAt": "2022-12-12T12:13:54Z",
              "updatedAt": "2022-12-12T12:17:55Z"
            },
            {
              "originalPosition": 102,
              "body": "```suggestion\r\n- Issuer name: An identifier for the Issuer. This is typically a host name that\r\n```",
              "createdAt": "2022-12-12T12:14:53Z",
              "updatedAt": "2022-12-12T12:17:55Z"
            },
            {
              "originalPosition": 116,
              "body": "```suggestion\r\nThe constants `Ne` and `Ns` are as defined in {{OPRF, Section 4}} for OPRF(P-384, SHA-384).\r\n```",
              "createdAt": "2022-12-12T12:16:05Z",
              "updatedAt": "2022-12-12T12:17:55Z"
            },
            {
              "originalPosition": 187,
              "body": "```suggestion\r\n- Issuer name: An identifier for the Issuer. This is typically a host name that\r\n```",
              "createdAt": "2022-12-12T12:16:35Z",
              "updatedAt": "2022-12-12T12:17:55Z"
            },
            {
              "originalPosition": 219,
              "body": "```suggestion\r\nVerifying a Token requires checking that Token.authenticator is a valid\r\n```",
              "createdAt": "2022-12-12T12:17:29Z",
              "updatedAt": "2022-12-12T12:17:55Z"
            },
            {
              "originalPosition": 165,
              "body": "```suggestion\r\nVerifying a Token requires creating a VOPRF context using the Issuer Private Key and Public Key,\r\n```",
              "createdAt": "2022-12-12T12:17:48Z",
              "updatedAt": "2022-12-12T12:17:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85IU5PM",
          "commit": {
            "abbreviatedOid": "1ef8561"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-12-12T12:26:56Z",
          "updatedAt": "2022-12-12T12:26:57Z",
          "comments": [
            {
              "originalPosition": 136,
              "body": "```suggestion\r\n  `SerializeElement(blinded_element)`.\r\n```",
              "createdAt": "2022-12-12T12:26:56Z",
              "updatedAt": "2022-12-12T12:26:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85IXRZI",
          "commit": {
            "abbreviatedOid": "764a195"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-12-12T18:04:36Z",
          "updatedAt": "2022-12-12T18:04:36Z",
          "comments": []
        }
      ]
    },
    {
      "number": 276,
      "id": "PR_kwDODeTEy85FH-ka",
      "title": "Pretty pictures for -protocol",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/276",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-12-12T01:31:27Z",
      "updatedAt": "2022-12-13T21:52:22Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "67c44e7ac570eebcd58807d92190a19d1f9c8a0f",
      "headRepository": "martinthomson/privacy-pass",
      "headRefName": "aasvg",
      "headRefOid": "1c393312baa65f93db614780cc1301544b7486ae",
      "closedAt": "2022-12-13T21:52:21Z",
      "mergedAt": "2022-12-13T21:52:21Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "dea55bae34c2f705c2dc194f74c699ef66085af9"
      },
      "comments": [
        {
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "![image](https://user-images.githubusercontent.com/67641/206942964-44185086-2a62-4c32-8344-71537aa5f650.png)\r\n",
          "createdAt": "2022-12-12T01:36:36Z",
          "updatedAt": "2022-12-12T01:36:36Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85IXERB",
          "commit": {
            "abbreviatedOid": "1c39331"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-12-12T17:30:05Z",
          "updatedAt": "2022-12-12T17:30:05Z",
          "comments": []
        }
      ]
    },
    {
      "number": 284,
      "id": "PR_kwDODeTEy85FJpDy",
      "title": "Make the media type registrations compact",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/284",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Once I worked out how to do this, I did this everywhere I could.  These templates are nuts.",
      "createdAt": "2022-12-12T06:44:50Z",
      "updatedAt": "2022-12-13T21:53:10Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "67c44e7ac570eebcd58807d92190a19d1f9c8a0f",
      "headRepository": "martinthomson/privacy-pass",
      "headRefName": "compact-media-type",
      "headRefOid": "acd9ae5b94b7f26a9745809ba42a1f4210dbbacc",
      "closedAt": "2022-12-13T21:53:10Z",
      "mergedAt": "2022-12-13T21:53:10Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "c777963ab5c777eec64e76a3d20034de91694294"
      },
      "comments": [
        {
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Oh, and you might want to look https://github.com/ietf-wg-ohai/oblivious-http/pull/230/files regarding \"8bit\"/\"binary\".",
          "createdAt": "2022-12-12T06:46:01Z",
          "updatedAt": "2022-12-12T06:46:01Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85IXEGs",
          "commit": {
            "abbreviatedOid": "acd9ae5"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-12-12T17:29:38Z",
          "updatedAt": "2022-12-12T17:29:38Z",
          "comments": []
        }
      ]
    },
    {
      "number": 290,
      "id": "PR_kwDODeTEy85FVm-W",
      "title": "Line wrap and test vector updates",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/290",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-12-13T16:03:57Z",
      "updatedAt": "2022-12-14T00:14:22Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "50ca7c6c6a3f6eafe96bd7ab3667e9749efa2b78",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/line-wrap-and-vector-update",
      "headRefOid": "ed9d16fcbd50809e4f091fb04f05dd8534c0b816",
      "closedAt": "2022-12-13T19:17:07Z",
      "mergedAt": "2022-12-13T19:17:07Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "c441e05f632c0f941304f2083406d37e2d95b4af"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85IeYh8",
          "commit": {
            "abbreviatedOid": "ed9d16f"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-12-13T16:46:22Z",
          "updatedAt": "2022-12-13T16:46:22Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODeTEy85Ifuij",
          "commit": {
            "abbreviatedOid": "ed9d16f"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-12-13T19:08:59Z",
          "updatedAt": "2022-12-13T19:08:59Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODeTEy85Ig9hv",
          "commit": {
            "abbreviatedOid": "ed9d16f"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-12-14T00:14:22Z",
          "updatedAt": "2022-12-14T00:14:22Z",
          "comments": [
            {
              "originalPosition": 549,
              "body": "Consider maybe:\r\n\r\n```md\r\nName:\r\n: VOPRF\r\nPublicly Verifiable:\r\n: N\r\n{: spacing=\"compact\"}\r\n```",
              "createdAt": "2022-12-14T00:14:22Z",
              "updatedAt": "2022-12-14T00:14:22Z"
            }
          ]
        }
      ]
    },
    {
      "number": 291,
      "id": "PR_kwDODeTEy85FXfSG",
      "title": "Fix RSA references. Make constant lengths explicit.",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/291",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #283\r\nCloses #282",
      "createdAt": "2022-12-13T20:34:47Z",
      "updatedAt": "2022-12-14T16:30:40Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "c441e05f632c0f941304f2083406d37e2d95b4af",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/fix-rsa-references",
      "headRefOid": "c5a5ed34115e57e88268192fe042895f5777e466",
      "closedAt": "2022-12-14T16:30:40Z",
      "mergedAt": "2022-12-14T16:30:40Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "b5c037ff30386f114a65353d2fdc675ebde1e47c"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85IggM1",
          "commit": {
            "abbreviatedOid": "bd2dbd2"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-12-13T21:55:29Z",
          "updatedAt": "2022-12-13T21:55:30Z",
          "comments": [
            {
              "originalPosition": 32,
              "body": "I find this a bit confusing \u2014\u00a0it almost sounds like there would be an extra 2-byte length field before this?\r\n\r\nHow about:\r\n\r\n```suggestion\r\ntoken_input = concat(0x0001, // Token type field is 2 bytes long\r\n```",
              "createdAt": "2022-12-13T21:55:29Z",
              "updatedAt": "2022-12-13T21:55:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85IlhGh",
          "commit": {
            "abbreviatedOid": "c5a5ed3"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-12-14T16:24:32Z",
          "updatedAt": "2022-12-14T16:24:32Z",
          "comments": []
        }
      ]
    },
    {
      "number": 292,
      "id": "PR_kwDODeTEy85FXfub",
      "title": "Protect client privacy",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/292",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #286 \r\n",
      "createdAt": "2022-12-13T20:36:16Z",
      "updatedAt": "2022-12-13T22:45:33Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "c441e05f632c0f941304f2083406d37e2d95b4af",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/privacy-is-good",
      "headRefOid": "2950eba99eaab270f013fcc3762bbe227fabfa12",
      "closedAt": "2022-12-13T22:45:33Z",
      "mergedAt": "2022-12-13T22:45:33Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "b2a53845303e54ddd03bce2492dc46a3b1cd5c32"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85IgnVO",
          "commit": {
            "abbreviatedOid": "2950eba"
          },
          "author": "ShivanKaul",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-12-13T22:22:34Z",
          "updatedAt": "2022-12-13T22:22:34Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "damn I thought that was deliberate",
              "createdAt": "2022-12-13T22:22:34Z",
              "updatedAt": "2022-12-13T22:22:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85IgpDY",
          "commit": {
            "abbreviatedOid": "2950eba"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-12-13T22:30:10Z",
          "updatedAt": "2022-12-13T22:30:10Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "LOL",
              "createdAt": "2022-12-13T22:30:10Z",
              "updatedAt": "2022-12-13T22:30:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85IgsYZ",
          "commit": {
            "abbreviatedOid": "2950eba"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-12-13T22:45:29Z",
          "updatedAt": "2022-12-13T22:45:29Z",
          "comments": []
        }
      ]
    },
    {
      "number": 293,
      "id": "PR_kwDODeTEy85FXgyx",
      "title": "Converge key IDs",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/293",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #281",
      "createdAt": "2022-12-13T20:40:01Z",
      "updatedAt": "2022-12-14T16:29:50Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "c441e05f632c0f941304f2083406d37e2d95b4af",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/converge-key-ids",
      "headRefOid": "d4b2b3b13e6b31f1851aaf12a7528e12e6209b9d",
      "closedAt": "2022-12-14T16:29:50Z",
      "mergedAt": "2022-12-14T16:29:50Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "1a1567a463bf85ae704cc07dda992fbc528a9cbb"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85IlkO3",
          "commit": {
            "abbreviatedOid": "d4b2b3b"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-12-14T16:29:43Z",
          "updatedAt": "2022-12-14T16:29:43Z",
          "comments": []
        }
      ]
    },
    {
      "number": 294,
      "id": "PR_kwDODeTEy85FXhDt",
      "title": "Give the directory a proper type",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/294",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #279\r\nCloses #274\r\nCloses #271",
      "createdAt": "2022-12-13T20:40:58Z",
      "updatedAt": "2022-12-14T16:30:21Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "c441e05f632c0f941304f2083406d37e2d95b4af",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/not-xxx",
      "headRefOid": "eb52cf1d9d4e9fa29ad23f3bf9965a96230b6f9f",
      "closedAt": "2022-12-14T16:30:20Z",
      "mergedAt": "2022-12-14T16:30:20Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "5306d03118113f649f7565626a18fe88a1e7f8bc"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85Igs8J",
          "commit": {
            "abbreviatedOid": "fe493a5"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-12-13T22:48:14Z",
          "updatedAt": "2022-12-13T22:48:41Z",
          "comments": [
            {
              "originalPosition": 116,
              "body": "```suggestion\r\n: <dl spacing=\"compact\">\r\n```",
              "createdAt": "2022-12-13T22:48:14Z",
              "updatedAt": "2022-12-13T22:48:41Z"
            },
            {
              "originalPosition": 141,
              "body": "```suggestion\r\n: IESG\r\n{: spacing=\"compact\"}\r\n```",
              "createdAt": "2022-12-13T22:48:37Z",
              "updatedAt": "2022-12-13T22:48:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85IgvRC",
          "commit": {
            "abbreviatedOid": "eb52cf1"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-12-13T22:59:54Z",
          "updatedAt": "2022-12-13T22:59:54Z",
          "comments": []
        }
      ]
    },
    {
      "number": 295,
      "id": "PR_kwDODeTEy85FXlb_",
      "title": "Define Nk clearly",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/295",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #270",
      "createdAt": "2022-12-13T20:55:30Z",
      "updatedAt": "2022-12-13T21:51:00Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "c441e05f632c0f941304f2083406d37e2d95b4af",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/define-nk",
      "headRefOid": "15b22869c976d737521ffae7933ac5c0c76540de",
      "closedAt": "2022-12-13T21:50:59Z",
      "mergedAt": "2022-12-13T21:50:59Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "811996298382f064d36f693bed58fb5e0bc12e85"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85Igew9",
          "commit": {
            "abbreviatedOid": "15b2286"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-12-13T21:50:52Z",
          "updatedAt": "2022-12-13T21:50:52Z",
          "comments": []
        }
      ]
    },
    {
      "number": 296,
      "id": "PR_kwDODeTEy85FXmtK",
      "title": "Just make it a URL",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/296",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #288\r\nCloses #300 ",
      "createdAt": "2022-12-13T20:59:43Z",
      "updatedAt": "2022-12-14T19:46:59Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "c2f1520ec61c27152414d7f57f79f0f79d24a827",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/fix-url-type",
      "headRefOid": "e218f873d5ff68d4b538eca4a12f2c8f0bf2e4fc",
      "closedAt": "2022-12-14T19:46:58Z",
      "mergedAt": "2022-12-14T19:46:58Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "803541af67672ba95207c1eb5b899164e9b3da7e"
      },
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "Are the changes to other files on this one intentional @chris-wood ?",
          "createdAt": "2022-12-14T16:31:33Z",
          "updatedAt": "2022-12-14T16:31:33Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Oh, hrm, no, they're not. I'll remove them.",
          "createdAt": "2022-12-14T18:15:48Z",
          "updatedAt": "2022-12-14T18:15:48Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "@tfpauly fixed!",
          "createdAt": "2022-12-14T19:43:40Z",
          "updatedAt": "2022-12-14T19:43:40Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85ImxSD",
          "commit": {
            "abbreviatedOid": "e218f87"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-12-14T19:46:54Z",
          "updatedAt": "2022-12-14T19:46:54Z",
          "comments": []
        }
      ]
    },
    {
      "number": 297,
      "id": "PR_kwDODeTEy85FXqga",
      "title": "Address caching and race conditions",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/297",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #287 \r\nCloses #289",
      "createdAt": "2022-12-13T21:11:05Z",
      "updatedAt": "2022-12-19T16:24:14Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "c2f1520ec61c27152414d7f57f79f0f79d24a827",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/cache-and-race",
      "headRefOid": "34c72d9421e1889e5087450a324d9a8f2fffe03e",
      "closedAt": "2022-12-19T16:24:14Z",
      "mergedAt": "2022-12-19T16:24:14Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "35b2f5332181b597980e221ac0a88314757b0c8d"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85IjsY-",
          "commit": {
            "abbreviatedOid": "1d5e1de"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-12-14T11:49:41Z",
          "updatedAt": "2022-12-14T11:49:42Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "```suggestion\r\nconfiguration results in token issuance failures, e.g., because the\r\n```",
              "createdAt": "2022-12-14T11:49:42Z",
              "updatedAt": "2022-12-14T11:49:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85IlllO",
          "commit": {
            "abbreviatedOid": "741c48e"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-12-14T16:33:03Z",
          "updatedAt": "2022-12-14T16:33:03Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "Who is detecting a failure due to stale config? The origin or the client?",
              "createdAt": "2022-12-14T16:33:03Z",
              "updatedAt": "2022-12-14T16:33:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85ImSwT",
          "commit": {
            "abbreviatedOid": "741c48e"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-12-14T18:16:48Z",
          "updatedAt": "2022-12-14T18:16:48Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "Either of them could presumably detect a failure, though in practice it's usually the client. ",
              "createdAt": "2022-12-14T18:16:48Z",
              "updatedAt": "2022-12-14T18:16:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85Imxo2",
          "commit": {
            "abbreviatedOid": "741c48e"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-12-14T19:48:12Z",
          "updatedAt": "2022-12-14T19:48:12Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "I think it might be useful to clarify this; since the client also gets the key information from a challenge, it seems a bit odd that the caching would mess it up?",
              "createdAt": "2022-12-14T19:48:12Z",
              "updatedAt": "2022-12-14T19:48:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85ImyCf",
          "commit": {
            "abbreviatedOid": "741c48e"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-12-14T19:49:41Z",
          "updatedAt": "2022-12-14T19:49:41Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "Well if the origin has a stale cached copy of the key and gives it to the client in the challenge, the client's issuance request would fail. I suppose we can be more specific, but it just seems like more words than required here.",
              "createdAt": "2022-12-14T19:49:41Z",
              "updatedAt": "2022-12-14T19:49:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85InVCw",
          "commit": {
            "abbreviatedOid": "a738f9c"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-12-14T21:26:28Z",
          "updatedAt": "2022-12-14T21:26:29Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "```suggestion\r\n```",
              "createdAt": "2022-12-14T21:26:28Z",
              "updatedAt": "2022-12-14T21:26:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85I1-NC",
          "commit": {
            "abbreviatedOid": "34c72d9"
          },
          "author": "Smithad499",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-12-18T23:12:17Z",
          "updatedAt": "2022-12-18T23:12:17Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODeTEy85I6EVZ",
          "commit": {
            "abbreviatedOid": "34c72d9"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-12-19T16:24:06Z",
          "updatedAt": "2022-12-19T16:24:06Z",
          "comments": []
        }
      ]
    },
    {
      "number": 298,
      "id": "PR_kwDODeTEy85FXrZZ",
      "title": "Relocate Issuer request processing details",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/298",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #277",
      "createdAt": "2022-12-13T21:13:59Z",
      "updatedAt": "2022-12-13T22:46:31Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "c441e05f632c0f941304f2083406d37e2d95b4af",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/relocate-request-processing",
      "headRefOid": "2af80d6e20578c216152c39076fa0fa8e93a0a59",
      "closedAt": "2022-12-13T22:46:31Z",
      "mergedAt": "2022-12-13T22:46:31Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "2458fae94381cf044705ffcb2f0774ac65c747e2"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85IgslC",
          "commit": {
            "abbreviatedOid": "2af80d6"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-12-13T22:46:26Z",
          "updatedAt": "2022-12-13T22:46:26Z",
          "comments": []
        }
      ]
    },
    {
      "number": 299,
      "id": "PR_kwDODeTEy85FYSLb",
      "title": "Clarify deployment and configuration for the issuance protocol",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/299",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #267",
      "createdAt": "2022-12-13T23:55:15Z",
      "updatedAt": "2022-12-14T17:52:27Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "b5c037ff30386f114a65353d2fdc675ebde1e47c",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/deployment-models",
      "headRefOid": "6e1ba7f97499f61c063656f7b23d8e2b08adddd1",
      "closedAt": "2022-12-14T17:52:27Z",
      "mergedAt": "2022-12-14T17:52:27Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "c2f1520ec61c27152414d7f57f79f0f79d24a827"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85Ig65i",
          "commit": {
            "abbreviatedOid": "bb9ccca"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-12-14T00:00:27Z",
          "updatedAt": "2022-12-14T00:00:27Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "This sentence seems incomplete/typoed?",
              "createdAt": "2022-12-14T00:00:27Z",
              "updatedAt": "2022-12-14T00:00:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85Ig69w",
          "commit": {
            "abbreviatedOid": "bb9ccca"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-12-14T00:00:54Z",
          "updatedAt": "2022-12-14T00:00:55Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "Do we want the fancy stuff Martin added?\r\n```+-----------------------------------.```, etc?",
              "createdAt": "2022-12-14T00:00:55Z",
              "updatedAt": "2022-12-14T00:00:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85Ig7BY",
          "commit": {
            "abbreviatedOid": "bb9ccca"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-12-14T00:01:17Z",
          "updatedAt": "2022-12-14T00:01:18Z",
          "comments": [
            {
              "originalPosition": 119,
              "body": "This is good, thanks.",
              "createdAt": "2022-12-14T00:01:18Z",
              "updatedAt": "2022-12-14T00:01:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85Ig7MM",
          "commit": {
            "abbreviatedOid": "bb9ccca"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-12-14T00:02:21Z",
          "updatedAt": "2022-12-14T00:02:21Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "Yep, fixed.",
              "createdAt": "2022-12-14T00:02:21Z",
              "updatedAt": "2022-12-14T00:02:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85Ig7Pp",
          "commit": {
            "abbreviatedOid": "bb9ccca"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-12-14T00:02:42Z",
          "updatedAt": "2022-12-14T00:02:42Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "Oh, I must have missed that. Let me apply it. Stand by.",
              "createdAt": "2022-12-14T00:02:42Z",
              "updatedAt": "2022-12-14T00:02:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85Ig7jE",
          "commit": {
            "abbreviatedOid": "bb9ccca"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-12-14T00:04:31Z",
          "updatedAt": "2022-12-14T00:04:32Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "Fixed",
              "createdAt": "2022-12-14T00:04:31Z",
              "updatedAt": "2022-12-14T00:04:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85IliuP",
          "commit": {
            "abbreviatedOid": "c509d9a"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-12-14T16:26:27Z",
          "updatedAt": "2022-12-14T16:26:27Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "What is `emody` supposed to be?",
              "createdAt": "2022-12-14T16:26:27Z",
              "updatedAt": "2022-12-14T16:26:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85IljA0",
          "commit": {
            "abbreviatedOid": "c509d9a"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-12-14T16:26:56Z",
          "updatedAt": "2022-12-14T16:26:57Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "Ah:\r\n```suggestion\r\nThe issuance protocols defined in this document embody the core of Privacy Pass.\r\n```",
              "createdAt": "2022-12-14T16:26:57Z",
              "updatedAt": "2022-12-14T16:26:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85IljVE",
          "commit": {
            "abbreviatedOid": "d7b26ef"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-12-14T16:27:37Z",
          "updatedAt": "2022-12-14T16:27:37Z",
          "comments": []
        }
      ]
    },
    {
      "number": 301,
      "id": "PR_kwDODeTEy85Fc8hR",
      "title": "Improve privacy and consistency discussion",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/301",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #278 \r\nCloses #280\r\n\r\nThe new aligned diagrams that match across the architecture, protocol, and auth-scheme documents should address #280 by making it clear how the tokens are used. ",
      "createdAt": "2022-12-14T13:53:58Z",
      "updatedAt": "2022-12-15T16:49:54Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "c2f1520ec61c27152414d7f57f79f0f79d24a827",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/better-consistency-and-privacy",
      "headRefOid": "aec652482b94e625cd7191a234ee1fa899e2e2c4",
      "closedAt": "2022-12-15T16:49:53Z",
      "mergedAt": "2022-12-15T16:49:53Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "4dc7f7816ca7e2df71a284debabecfb45acfc17d"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85Ilm-G",
          "commit": {
            "abbreviatedOid": "7287c53"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-12-14T16:34:46Z",
          "updatedAt": "2022-12-14T16:34:47Z",
          "comments": [
            {
              "originalPosition": 105,
              "body": "Should this be elevated to a SHOULD instead of a MAY?",
              "createdAt": "2022-12-14T16:34:46Z",
              "updatedAt": "2022-12-14T16:34:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85IloW7",
          "commit": {
            "abbreviatedOid": "7287c53"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-12-14T16:36:26Z",
          "updatedAt": "2022-12-14T16:36:26Z",
          "comments": [
            {
              "originalPosition": 288,
              "body": "Would Tor need a citation here? Or should we just not include the example?",
              "createdAt": "2022-12-14T16:36:26Z",
              "updatedAt": "2022-12-14T16:36:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85ImPzY",
          "commit": {
            "abbreviatedOid": "7287c53"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-12-14T18:07:20Z",
          "updatedAt": "2022-12-14T18:07:21Z",
          "comments": [
            {
              "originalPosition": 105,
              "body": "I think it depends on your threat model. Maybe we just drop normative language here altogether and say \"Clients can apply some form of consistency check... Failure to do so may allow Client-specific keys to impact the Client anonymity set.\"",
              "createdAt": "2022-12-14T18:07:20Z",
              "updatedAt": "2022-12-14T18:07:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85ImP7y",
          "commit": {
            "abbreviatedOid": "7287c53"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-12-14T18:07:45Z",
          "updatedAt": "2022-12-14T18:07:45Z",
          "comments": [
            {
              "originalPosition": 288,
              "body": "We don't currently include a citation for Tor when used elsewhere, but we can drop one in. ",
              "createdAt": "2022-12-14T18:07:45Z",
              "updatedAt": "2022-12-14T18:07:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85Imxpw",
          "commit": {
            "abbreviatedOid": "7287c53"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-12-14T19:48:15Z",
          "updatedAt": "2022-12-14T19:48:16Z",
          "comments": [
            {
              "originalPosition": 105,
              "body": "I made this change -- how's it look?",
              "createdAt": "2022-12-14T19:48:15Z",
              "updatedAt": "2022-12-14T19:48:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85Imxrc",
          "commit": {
            "abbreviatedOid": "7287c53"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-12-14T19:48:21Z",
          "updatedAt": "2022-12-14T19:48:22Z",
          "comments": [
            {
              "originalPosition": 288,
              "body": "Added a citation.",
              "createdAt": "2022-12-14T19:48:21Z",
              "updatedAt": "2022-12-14T19:48:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85Imx03",
          "commit": {
            "abbreviatedOid": "7287c53"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-12-14T19:48:54Z",
          "updatedAt": "2022-12-14T19:48:54Z",
          "comments": [
            {
              "originalPosition": 105,
              "body": "Looks good!",
              "createdAt": "2022-12-14T19:48:54Z",
              "updatedAt": "2022-12-14T19:48:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85Imx25",
          "commit": {
            "abbreviatedOid": "aec6524"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-12-14T19:49:01Z",
          "updatedAt": "2022-12-14T19:49:01Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODeTEy85IsDH-",
          "commit": {
            "abbreviatedOid": "aec6524"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-12-15T16:01:51Z",
          "updatedAt": "2022-12-15T16:01:51Z",
          "comments": []
        }
      ]
    },
    {
      "number": 310,
      "id": "PR_kwDODeTEy85HBQVV",
      "title": "Clarify how architecture is introduced",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/310",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "tfpauly"
      ],
      "labels": [
        "architecture"
      ],
      "body": "Closes #304\r\nCloses #305",
      "createdAt": "2023-01-09T22:02:08Z",
      "updatedAt": "2023-01-23T20:08:54Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "35b2f5332181b597980e221ac0a88314757b0c8d",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "tfp/arch-intro",
      "headRefOid": "3da6c78656e7b4ccbef98e82201de209cd2a2565",
      "closedAt": "2023-01-23T20:08:53Z",
      "mergedAt": "2023-01-23T20:08:53Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "f0a25f6917a7d84a370708dcc68dbf5c8d1346ad"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85KO4_j",
          "commit": {
            "abbreviatedOid": "6abce8e"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "I like the new flow. This covers the basic interaction models pretty well! The one thing I think we need to improve (visually) is how we show the attestation step during issuance. I offered a suggestion but it's not the best. ",
          "createdAt": "2023-01-12T11:18:05Z",
          "updatedAt": "2023-01-12T11:56:18Z",
          "comments": [
            {
              "originalPosition": 80,
              "body": "This is good! Should we also add the attestation context, or were you thinking that the issuance context would subsume the attestation context? ",
              "createdAt": "2023-01-12T11:18:05Z",
              "updatedAt": "2023-01-12T11:56:18Z"
            },
            {
              "originalPosition": 101,
              "body": "```suggestion\r\nresource normally, or with the specific intent of triggering a Token\r\nChallenge.\r\n```\r\n\r\nIf we're introducing Token Request/Response here (to be defined in the issuance doc), do we also want to introduce Token Challenge and Token?",
              "createdAt": "2023-01-12T11:31:50Z",
              "updatedAt": "2023-01-12T11:56:18Z"
            },
            {
              "originalPosition": 123,
              "body": "```suggestion\r\nchallenge, it can skip to step 5 and redeem its token. Otherwise, it\r\ninvokes the issuance protocol to request a token from the designated Issuer.\r\n\r\n3. The first step in the issuance protocol is attestation. Specifically, the Attester\r\nperforms attestation checks on the Client. These checks\r\ncould be proof of solving a CAPTCHA, device trust, hardware attestation,\r\netc (see {{attester}}). \r\n\r\n4. If attestation succeeds, the client creates a Token Request to send\r\nto the designated Issuer (generally via the Attester). The Attester and Issuer\r\nmight be functions on the same server, depending on the deployment model\r\n(see {{deployment}}). Depending on the details of Attestation, the Client can\r\nsend the Token Request to the Attester alongside any attestation information.\r\nIf attestation fails, the Client receives an error and issuance aborts without a token.\r\n\r\n4. The Issuer generates a Token Response based on the Token Request, which\r\nis returned to the Client (generally via the Attester). Upon receiving the Token\r\nResponse, the Client computes a token from the token challenge and Token\r\nResponse. This token can be validated by anyone with the per-Issuer key, but\r\ncannot be linked to the content of the Token Request or Token Response.\r\n\r\n5. If the Client has a token, it includes it in a subsequent HTTP\r\nrequest to the Origin, as authorization. This token is sent only once.\r\nThe Origin validates that the token was generated by the expected Issuer\r\nand has not already been redeemed for the corresponding token challenge.\r\nIf the Client does not have a token, perhaps because issuance failed, the client\r\ndoes not reply to the Origin's challenge with a new request.\r\n```\r\n\r\nI made a couple of changes in this big suggestion, with perhaps the biggest one being around the attestation language. The current text seemed to imply that attestation was a non-interactive thing that has to be done alongside sending the Token Request, but I don't think that's true. It seems plausible for these to run in sequence, e.g., for the client and attester to first do attestation, and then if that succeeds, for the client and attester to exchange a token request and token response.  \r\n\r\nI also added some language in step 5 about what the client does in the event of issuance failure. ",
              "createdAt": "2023-01-12T11:34:57Z",
              "updatedAt": "2023-01-12T11:56:18Z"
            },
            {
              "originalPosition": 132,
              "body": "```suggestion\r\n                   | <--- (attest) --->             |\r\n                   | TokenRequest ---------->         |\r\n```\r\n\r\nI think it's important to make clear that attestation can happen before the token request and response, and not necessarily something in parallel. \r\n\r\nAlso, we use different notation to show the process of attestation in the deployment diagrams (\"----> Attest\"). I'm wondering if there's a better way to draw this to make it clear that attestation is _not_ specified here, is an entirely separate and deployment specific protocol, etc. Maybe something like this?\r\n\r\n~~~ aasvg\r\n    Origin           Client      Attester     Issuer\r\n     Request <-----+                                  \r\n                                                       \r\n TokenChallenge --->                                  \r\n                    +-----------------.\r\n                    |    Attestation   |\r\n                     `----------------'  \r\n                      TokenRequest ---------->\r\n~~~",
              "createdAt": "2023-01-12T11:53:32Z",
              "updatedAt": "2023-01-12T11:56:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85KSJHV",
          "commit": {
            "abbreviatedOid": "6abce8e"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-01-12T18:39:08Z",
          "updatedAt": "2023-01-12T18:39:09Z",
          "comments": [
            {
              "originalPosition": 80,
              "body": "I did view the issuance context as being a superset of the attestation context, but if you think it should be here too, that's fine!",
              "createdAt": "2023-01-12T18:39:09Z",
              "updatedAt": "2023-01-12T18:39:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85KSLzG",
          "commit": {
            "abbreviatedOid": "b8b42db"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-01-12T18:43:03Z",
          "updatedAt": "2023-01-12T18:43:03Z",
          "comments": [
            {
              "originalPosition": 110,
              "body": "```suggestion\r\netc (see {{attester}}).\r\n```",
              "createdAt": "2023-01-12T18:43:03Z",
              "updatedAt": "2023-01-12T18:43:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85KoQQy",
          "commit": {
            "abbreviatedOid": "6abce8e"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-01-17T17:15:56Z",
          "updatedAt": "2023-01-17T17:15:56Z",
          "comments": [
            {
              "originalPosition": 132,
              "body": "How about this as the full picture?\r\n```\r\n    Origin           Client         Attester     Issuer\r\n    \r\n     Request <------                                  \r\n                                                       \r\n TokenChallenge --->   \r\n                      <- (Attestation) ->                               \r\n  \r\n                      TokenRequest -------------->\r\n                              <-------------- TokenResponse\r\n Request + Token <--\r\n```",
              "createdAt": "2023-01-17T17:15:56Z",
              "updatedAt": "2023-01-17T17:15:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85KobKA",
          "commit": {
            "abbreviatedOid": "6abce8e"
          },
          "author": "elreydetodo",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-01-17T17:34:43Z",
          "updatedAt": "2023-01-17T17:34:43Z",
          "comments": [
            {
              "originalPosition": 132,
              "body": "This diagram has been confusing me since the very first time I looked at the draft. Since the process initiates with a client, can we please put the client on the leftmost column?",
              "createdAt": "2023-01-17T17:34:43Z",
              "updatedAt": "2023-01-17T17:34:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85KpJ_B",
          "commit": {
            "abbreviatedOid": "6abce8e"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-01-17T19:32:19Z",
          "updatedAt": "2023-01-17T19:32:20Z",
          "comments": [
            {
              "originalPosition": 132,
              "body": "The issue is that the client has an interaction with the origin on one hand, and with the attester/issuer on the other, and they are separated contexts.\r\n\r\n@chris-wood thoughts?",
              "createdAt": "2023-01-17T19:32:19Z",
              "updatedAt": "2023-01-17T19:32:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85Kvxzj",
          "commit": {
            "abbreviatedOid": "d9b4199"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-01-18T17:58:51Z",
          "updatedAt": "2023-01-18T17:58:51Z",
          "comments": [
            {
              "originalPosition": 147,
              "body": "```suggestion\r\n    Origin           Client         Attester     Issuer\r\n    \r\n     Request <------                                  \r\n                                                       \r\n TokenChallenge --->   \r\n                      <- (Attestation) ->                               \r\n  \r\n                      TokenRequest -------------->\r\n                              <-------------- TokenResponse\r\n Request + Token <--\r\n```",
              "createdAt": "2023-01-18T17:58:51Z",
              "updatedAt": "2023-01-18T17:58:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85Kvy65",
          "commit": {
            "abbreviatedOid": "432ed62"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-01-18T18:01:39Z",
          "updatedAt": "2023-01-18T18:01:39Z",
          "comments": [
            {
              "originalPosition": 142,
              "body": "```suggestion\r\n    Origin           Client         Attester     Issuer\r\n\r\n     Request <------\r\n\r\n TokenChallenge --->\r\n                      <- (Attestation) ->\r\n  \r\n                      TokenRequest -------------->\r\n                              <-------------- TokenResponse\r\n Request + Token <--\r\n```",
              "createdAt": "2023-01-18T18:01:39Z",
              "updatedAt": "2023-01-18T18:01:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85KvzRp",
          "commit": {
            "abbreviatedOid": "d5de336"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-01-18T18:02:45Z",
          "updatedAt": "2023-01-18T18:02:46Z",
          "comments": [
            {
              "originalPosition": 80,
              "body": "```suggestion\r\nbetween the Client, Attester, and Issuer.\r\n- Attestation context: The interactions and set of information shared between\r\nthe Client and Attester only, for the purposes of attesting the vailidity of the Client.\r\n```",
              "createdAt": "2023-01-18T18:02:45Z",
              "updatedAt": "2023-01-18T18:02:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85Kvzv9",
          "commit": {
            "abbreviatedOid": "048b5b9"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-01-18T18:04:11Z",
          "updatedAt": "2023-01-18T18:04:11Z",
          "comments": [
            {
              "originalPosition": 141,
              "body": "```suggestion\r\n\r\n```",
              "createdAt": "2023-01-18T18:04:11Z",
              "updatedAt": "2023-01-18T18:04:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85Kv0sO",
          "commit": {
            "abbreviatedOid": "f505647"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-01-18T18:06:56Z",
          "updatedAt": "2023-01-18T18:06:57Z",
          "comments": [
            {
              "originalPosition": 132,
              "body": "```suggestion\r\n2. If the Client already has a token available that satisfies the token\r\nchallenge, it can skip to step 6 and redeem its token. Otherwise, it\r\ninvokes the issuance protocol to request a token from the designated Issuer.\r\n\r\n3. The first step in the issuance protocol is attestation. Specifically, the Attester\r\nperforms attestation checks on the Client. These checks\r\ncould be proof of solving a CAPTCHA, device trust, hardware attestation,\r\netc (see {{attester}}).\r\n\r\n4. If attestation succeeds, the client creates a Token Request to send\r\nto the designated Issuer (generally via the Attester). The Attester and Issuer\r\nmight be functions on the same server, depending on the deployment model\r\n(see {{deployment}}). Depending on the details of Attestation, the Client can\r\nsend the Token Request to the Attester alongside any attestation information.\r\nIf attestation fails, the Client receives an error and issuance aborts without a token.\r\n\r\n5. The Issuer generates a Token Response based on the Token Request, which\r\nis returned to the Client (generally via the Attester). Upon receiving the Token\r\nResponse, the Client computes a token from the token challenge and Token\r\nResponse. This token can be validated by anyone with the per-Issuer key, but\r\ncannot be linked to the content of the Token Request or Token Response.\r\n\r\n6. If the Client has a token, it includes it in a subsequent HTTP\r\nrequest to the Origin, as authorization. This token is sent only once.\r\nThe Origin validates that the token was generated by the expected Issuer\r\nand has not already been redeemed for the corresponding token challenge.\r\nIf the Client does not have a token, perhaps because issuance failed, the client\r\ndoes not reply to the Origin's challenge with a new request.\r\n```",
              "createdAt": "2023-01-18T18:06:56Z",
              "updatedAt": "2023-01-18T18:06:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85Kv1Qg",
          "commit": {
            "abbreviatedOid": "3da6c78"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-01-18T18:08:42Z",
          "updatedAt": "2023-01-18T18:08:43Z",
          "comments": [
            {
              "originalPosition": 101,
              "body": "We do in the diagram, but here I was using it in a bit more colloquial sense.",
              "createdAt": "2023-01-18T18:08:42Z",
              "updatedAt": "2023-01-18T18:08:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85LeX2m",
          "commit": {
            "abbreviatedOid": "3da6c78"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-01-23T20:08:41Z",
          "updatedAt": "2023-01-23T20:08:41Z",
          "comments": []
        }
      ]
    },
    {
      "number": 311,
      "id": "PR_kwDODeTEy85IXLYS",
      "title": "Mention ordering of multiple challenges",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/311",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "tfpauly"
      ],
      "labels": [
        "auth-scheme"
      ],
      "body": "",
      "createdAt": "2023-01-23T20:33:53Z",
      "updatedAt": "2023-01-23T21:10:35Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "f0a25f6917a7d84a370708dcc68dbf5c8d1346ad",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "tfpauly-patch-17",
      "headRefOid": "982707d76d943de336cb94909363db675dc525db",
      "closedAt": "2023-01-23T21:10:35Z",
      "mergedAt": "2023-01-23T21:10:35Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "a7db6b20ad7aa91067f09d5339a9ce0a91a6650b"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85LetQ8",
          "commit": {
            "abbreviatedOid": "982707d"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-01-23T21:08:25Z",
          "updatedAt": "2023-01-23T21:08:25Z",
          "comments": []
        }
      ]
    },
    {
      "number": 312,
      "id": "PR_kwDODeTEy85Ii-Xz",
      "title": "Promote and reframe privacy properties",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/312",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #306\r\nCloses #307 \r\nCloses #308",
      "createdAt": "2023-01-25T21:15:06Z",
      "updatedAt": "2023-01-30T15:07:05Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "a7db6b20ad7aa91067f09d5339a9ce0a91a6650b",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/better-privacy",
      "headRefOid": "dbf065de1bec409ead5582bb92b814378a7c8863",
      "closedAt": "2023-01-30T15:07:04Z",
      "mergedAt": "2023-01-30T15:07:04Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "28d3cbc3a9d033aaa366dbe825284fd6e2138db5"
      },
      "comments": [
        {
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "body": "Looks good with the reframe.",
          "createdAt": "2023-01-30T15:06:46Z",
          "updatedAt": "2023-01-30T15:06:46Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85Lt598",
          "commit": {
            "abbreviatedOid": "c133bb2"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-01-26T00:42:25Z",
          "updatedAt": "2023-01-26T00:48:29Z",
          "comments": [
            {
              "originalPosition": 39,
              "body": "Hm, this seems to be duplicated from the terminology above. Do we want to remove them there?",
              "createdAt": "2023-01-26T00:42:25Z",
              "updatedAt": "2023-01-26T00:48:29Z"
            },
            {
              "originalPosition": 44,
              "body": "The redemption/issuer split here is a bit confusing to read. I know it would be redundant to explain both, but it may be easier to read.",
              "createdAt": "2023-01-26T00:43:33Z",
              "updatedAt": "2023-01-26T00:48:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85LxtzA",
          "commit": {
            "abbreviatedOid": "c133bb2"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-01-26T15:54:16Z",
          "updatedAt": "2023-01-26T15:54:17Z",
          "comments": [
            {
              "originalPosition": 39,
              "body": "I considered it, yeah. I'll delete the prior mentions in a followup commit.",
              "createdAt": "2023-01-26T15:54:16Z",
              "updatedAt": "2023-01-26T15:56:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85Lxu4R",
          "commit": {
            "abbreviatedOid": "c133bb2"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-01-26T15:56:41Z",
          "updatedAt": "2023-01-26T15:56:41Z",
          "comments": [
            {
              "originalPosition": 44,
              "body": "ACK -- I'll try to unwrap that in a followup commit.",
              "createdAt": "2023-01-26T15:56:41Z",
              "updatedAt": "2023-01-26T15:56:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85Lycqa",
          "commit": {
            "abbreviatedOid": "c133bb2"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-01-26T17:48:28Z",
          "updatedAt": "2023-01-26T17:48:29Z",
          "comments": [
            {
              "originalPosition": 44,
              "body": "OK, I split unlinkability into three distinct properties: Origin-Client, Issuer-Client, and Attester-Origin unlinkability. How does this read now?",
              "createdAt": "2023-01-26T17:48:28Z",
              "updatedAt": "2023-01-26T17:48:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85L8Dvt",
          "commit": {
            "abbreviatedOid": "5a5e29c"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Looking good, just some minor comments",
          "createdAt": "2023-01-28T22:39:59Z",
          "updatedAt": "2023-01-28T22:45:55Z",
          "comments": [
            {
              "originalPosition": 73,
              "body": "I think this is now the earliest mention of Tor in the document? If so, we should move the reference here.",
              "createdAt": "2023-01-28T22:39:59Z",
              "updatedAt": "2023-01-28T22:45:55Z"
            },
            {
              "originalPosition": 257,
              "body": "I wonder if we should call out here or in the next section that many token types won't have any metadata, and that we have an implicit recommendation to avoid metadata unless necessary and justified and properly analyzed...",
              "createdAt": "2023-01-28T22:43:54Z",
              "updatedAt": "2023-01-28T22:45:55Z"
            },
            {
              "originalPosition": 346,
              "body": "Can we also make this clear that it is conditional on the Client being willing to send tokens from all of those issuers? (Since it can just choose not to use those tokens...)",
              "createdAt": "2023-01-28T22:45:01Z",
              "updatedAt": "2023-01-28T22:45:55Z"
            },
            {
              "originalPosition": 357,
              "body": "I guess my comment above could turn into another recommendation here to avoid using multiple issuers with a particular origin.",
              "createdAt": "2023-01-28T22:45:36Z",
              "updatedAt": "2023-01-28T22:45:55Z"
            }
          ]
        }
      ]
    },
    {
      "number": 313,
      "id": "PR_kwDODeTEy85Ii-sO",
      "title": "Reframe how challenges are used",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/313",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #303",
      "createdAt": "2023-01-25T21:16:29Z",
      "updatedAt": "2023-01-26T00:34:58Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "a7db6b20ad7aa91067f09d5339a9ce0a91a6650b",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/challenge-usage",
      "headRefOid": "fd1fda0ed3e407f0c5f83dc85814f6de426ae65b",
      "closedAt": "2023-01-26T00:34:58Z",
      "mergedAt": "2023-01-26T00:34:58Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "15caa459d1704b4169bde7229a8628feb2f64aa8"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85LtQC-",
          "commit": {
            "abbreviatedOid": "fd1fda0"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-01-25T21:30:53Z",
          "updatedAt": "2023-01-25T21:30:53Z",
          "comments": []
        }
      ]
    },
    {
      "number": 314,
      "id": "PR_kwDODeTEy85In982",
      "title": "Forward pointer to Nk constant definition",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/314",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-01-26T21:02:28Z",
      "updatedAt": "2023-01-26T21:11:36Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "15caa459d1704b4169bde7229a8628feb2f64aa8",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "chris-wood-patch-1",
      "headRefOid": "c98861777df53d83f513256ee1e015234eb50aec",
      "closedAt": "2023-01-26T21:11:36Z",
      "mergedAt": "2023-01-26T21:11:36Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "0c29b4658f0139a98cc8016c1e079f7bfbacd321"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85Lzcnv",
          "commit": {
            "abbreviatedOid": "c988617"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-01-26T21:03:14Z",
          "updatedAt": "2023-01-26T21:03:14Z",
          "comments": []
        }
      ]
    },
    {
      "number": 315,
      "id": "PR_kwDODeTEy85IvYnh",
      "title": "Add token_challenge to test vector",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/315",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #309 \r\n\r\ncc @raphaelrobert",
      "createdAt": "2023-01-28T19:43:30Z",
      "updatedAt": "2023-01-30T16:14:34Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "0c29b4658f0139a98cc8016c1e079f7bfbacd321",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/add-token-challenge",
      "headRefOid": "0251008c1027710fe7787aff908ac48dcd92c71a",
      "closedAt": "2023-01-30T16:14:33Z",
      "mergedAt": "2023-01-30T16:14:33Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "e7431efc689f98abe162b996689812fb5e748ab8"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85L8DmJ",
          "commit": {
            "abbreviatedOid": "0251008"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-01-28T22:29:23Z",
          "updatedAt": "2023-01-28T22:29:23Z",
          "comments": []
        }
      ]
    },
    {
      "number": 316,
      "id": "PR_kwDODeTEy85IvaLW",
      "title": "Use RATS terminology",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/316",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #302 \r\n",
      "createdAt": "2023-01-28T20:12:56Z",
      "updatedAt": "2023-01-30T16:50:38Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "0c29b4658f0139a98cc8016c1e079f7bfbacd321",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/rats-terms",
      "headRefOid": "8f9e0bb6f63b4637b3ccc72d47116b6a1035daa1",
      "closedAt": "2023-01-30T16:50:38Z",
      "mergedAt": "2023-01-30T16:50:38Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "70aa397282aac95236369a9e023148ca252456b4"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85L8Dlw",
          "commit": {
            "abbreviatedOid": "15eff31"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-01-28T22:28:56Z",
          "updatedAt": "2023-01-28T22:28:57Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "I wonder if our Attester also shares some of the RATS Endorser role in this case?\r\n\r\nI also think we should disambiguate with adding RATS in the names\r\n```suggestion\r\nRATS attesters that produce attestation evidence, and Attesters are RATS verififiers that\r\n```",
              "createdAt": "2023-01-28T22:28:57Z",
              "updatedAt": "2023-01-28T22:28:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85L_jZl",
          "commit": {
            "abbreviatedOid": "15eff31"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-01-30T11:13:43Z",
          "updatedAt": "2023-01-30T11:13:44Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "I think that for the current PAT deployment the attester is also an endorser, but it's not clear to me if that's generally true for all types of attestation procedures, so I left it out for now.",
              "createdAt": "2023-01-30T11:13:43Z",
              "updatedAt": "2023-01-30T11:13:57Z"
            }
          ]
        }
      ]
    },
    {
      "number": 317,
      "id": "PR_kwDODeTEy85I1t_w",
      "title": "Pass on architecture",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/317",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "cc @tfpauly ",
      "createdAt": "2023-01-30T17:53:56Z",
      "updatedAt": "2023-01-30T20:30:03Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "70aa397282aac95236369a9e023148ca252456b4",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/arch-pass",
      "headRefOid": "7d1da50f897f373ae165540ae3af1171989191e8",
      "closedAt": "2023-01-30T20:30:03Z",
      "mergedAt": "2023-01-30T20:30:03Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "4476a3c27880bbe6f0a0009cd12bcf7086f36fd9"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85MDXaH",
          "commit": {
            "abbreviatedOid": "856d48e"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-01-30T20:14:46Z",
          "updatedAt": "2023-01-30T20:15:35Z",
          "comments": [
            {
              "originalPosition": 80,
              "body": "```suggestion\r\nany Client visible information (including the IP address), and the\r\n```",
              "createdAt": "2023-01-30T20:14:46Z",
              "updatedAt": "2023-01-30T20:15:35Z"
            },
            {
              "originalPosition": 117,
              "body": "```suggestion\r\nin that a Client in an issuer context is indistinguishable from any other\r\n```",
              "createdAt": "2023-01-30T20:15:29Z",
              "updatedAt": "2023-01-30T20:15:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85MDYAb",
          "commit": {
            "abbreviatedOid": "856d48e"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-01-30T20:15:44Z",
          "updatedAt": "2023-01-30T20:15:45Z",
          "comments": [
            {
              "originalPosition": 117,
              "body": "```suggestion\r\nin that a Client in an issuer context is indistinguishable from any other\r\n```",
              "createdAt": "2023-01-30T20:15:45Z",
              "updatedAt": "2023-01-30T20:15:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85MDZG-",
          "commit": {
            "abbreviatedOid": "69a84e3"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-01-30T20:18:01Z",
          "updatedAt": "2023-01-30T20:18:02Z",
          "comments": [
            {
              "originalPosition": 432,
              "body": "```suggestion\r\nOrigin-Client unlinkabiity guarantees that the Origin cannot link any two\r\n```",
              "createdAt": "2023-01-30T20:18:02Z",
              "updatedAt": "2023-01-30T20:18:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85MDZUh",
          "commit": {
            "abbreviatedOid": "4224bb6"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-01-30T20:18:28Z",
          "updatedAt": "2023-01-30T20:18:28Z",
          "comments": [
            {
              "originalPosition": 87,
              "body": "the wording here seems a little odd, maybe implying IP address and other information is necessarily visible?",
              "createdAt": "2023-01-30T20:18:28Z",
              "updatedAt": "2023-01-30T20:18:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85MDZWP",
          "commit": {
            "abbreviatedOid": "69a84e3"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-01-30T20:18:31Z",
          "updatedAt": "2023-01-30T20:18:31Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODeTEy85MDZ9_",
          "commit": {
            "abbreviatedOid": "00d3273"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-01-30T20:19:47Z",
          "updatedAt": "2023-01-30T20:19:48Z",
          "comments": [
            {
              "originalPosition": 88,
              "body": "```suggestion\r\nincluding information needed for the attestation procedure to complete.\r\n```",
              "createdAt": "2023-01-30T20:19:47Z",
              "updatedAt": "2023-01-30T20:19:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85MDaVv",
          "commit": {
            "abbreviatedOid": "4224bb6"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-01-30T20:20:34Z",
          "updatedAt": "2023-01-30T20:20:34Z",
          "comments": [
            {
              "originalPosition": 87,
              "body": "Rephrased slightly to focus just on attestation information.",
              "createdAt": "2023-01-30T20:20:34Z",
              "updatedAt": "2023-01-30T20:20:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85MDagE",
          "commit": {
            "abbreviatedOid": "4224bb6"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-01-30T20:20:54Z",
          "updatedAt": "2023-01-30T20:20:54Z",
          "comments": [
            {
              "originalPosition": 250,
              "body": "Do we need to explicitly refer to this property as \"blindness\" or just leave it as Unconditional input secrecy? ",
              "createdAt": "2023-01-30T20:20:54Z",
              "updatedAt": "2023-01-30T20:20:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85MDaws",
          "commit": {
            "abbreviatedOid": "4224bb6"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-01-30T20:21:18Z",
          "updatedAt": "2023-01-30T20:21:18Z",
          "comments": [
            {
              "originalPosition": 432,
              "body": "nit: the",
              "createdAt": "2023-01-30T20:21:18Z",
              "updatedAt": "2023-01-30T20:21:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85MDYij",
          "commit": {
            "abbreviatedOid": "856d48e"
          },
          "author": "smhendrickson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-01-30T20:16:50Z",
          "updatedAt": "2023-01-30T20:22:26Z",
          "comments": [
            {
              "originalPosition": 117,
              "body": "sp: indistinguishable",
              "createdAt": "2023-01-30T20:16:50Z",
              "updatedAt": "2023-01-30T20:22:52Z"
            },
            {
              "originalPosition": 432,
              "body": "sp: the",
              "createdAt": "2023-01-30T20:21:58Z",
              "updatedAt": "2023-01-30T20:22:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85MDfge",
          "commit": {
            "abbreviatedOid": "4224bb6"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-01-30T20:29:53Z",
          "updatedAt": "2023-01-30T20:29:53Z",
          "comments": [
            {
              "originalPosition": 250,
              "body": "Let's leave this as-is. ",
              "createdAt": "2023-01-30T20:29:53Z",
              "updatedAt": "2023-01-30T20:29:53Z"
            }
          ]
        }
      ]
    },
    {
      "number": 318,
      "id": "PR_kwDODeTEy85JH64T",
      "title": "CIRCL was out of date",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/318",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Let's hold until interop is confirmed.\r\n\r\ncc @raphaelrobert",
      "createdAt": "2023-02-02T15:57:56Z",
      "updatedAt": "2023-02-22T21:09:48Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "4476a3c27880bbe6f0a0009cd12bcf7086f36fd9",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/update-vector",
      "headRefOid": "4d775a6d30973bbd5abf23dc2465b6cc5e073555",
      "closedAt": "2023-02-22T21:09:48Z",
      "mergedAt": "2023-02-22T21:09:48Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "61ba09900919d246429b0be5b0c08ffe4a951db7"
      },
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Confirmed interop with @raphaelrobert. Thanks!",
          "createdAt": "2023-02-14T21:12:38Z",
          "updatedAt": "2023-02-14T21:12:38Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85NP8_i",
          "commit": {
            "abbreviatedOid": "b20fe53"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-02-13T16:36:06Z",
          "updatedAt": "2023-02-13T16:36:06Z",
          "comments": []
        }
      ]
    },
    {
      "number": 320,
      "id": "PR_kwDODeTEy85J2vgI",
      "title": "Token type determines structure and semantics",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/320",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #319 ",
      "createdAt": "2023-02-13T14:25:54Z",
      "updatedAt": "2023-02-13T20:11:26Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "4476a3c27880bbe6f0a0009cd12bcf7086f36fd9",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/type-determines-structure-and-semantics",
      "headRefOid": "ca3ba9482b3f93bd56666d48e037b826b4f0c0ad",
      "closedAt": "2023-02-13T20:11:26Z",
      "mergedAt": "2023-02-13T20:11:26Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "e6d6d5534916f296a9a39fda41b1c4b52988b193"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85NPP_F",
          "commit": {
            "abbreviatedOid": "4e33220"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-02-13T15:10:57Z",
          "updatedAt": "2023-02-13T15:11:15Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "nit: 80 characters.",
              "createdAt": "2023-02-13T15:10:57Z",
              "updatedAt": "2023-02-13T15:11:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85NP8c_",
          "commit": {
            "abbreviatedOid": "ad7e13f"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-02-13T16:34:50Z",
          "updatedAt": "2023-02-13T16:35:04Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "Should we mention the token type here? Like:\r\n```suggestion\r\non the issuance protocol and token type being used;\r\nsee {{AUTHSCHEME}} for more information.\r\n```",
              "createdAt": "2023-02-13T16:34:50Z",
              "updatedAt": "2023-02-13T16:35:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85NQkQY",
          "commit": {
            "abbreviatedOid": "ad7e13f"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-13T18:03:36Z",
          "updatedAt": "2023-02-13T18:03:37Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "Good idea -- I made this change in both occurrences.",
              "createdAt": "2023-02-13T18:03:36Z",
              "updatedAt": "2023-02-13T18:03:37Z"
            }
          ]
        }
      ]
    },
    {
      "number": 331,
      "id": "PR_kwDODeTEy85J6irS",
      "title": "Fixups",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/331",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Some editorial suggestions.",
      "createdAt": "2023-02-14T06:43:32Z",
      "updatedAt": "2023-02-17T11:53:47Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "e6d6d5534916f296a9a39fda41b1c4b52988b193",
      "headRepository": "martinthomson/privacy-pass",
      "headRefName": "fixups",
      "headRefOid": "aea48c32b99b88d0f8178f03361f16a584122405",
      "closedAt": "2023-02-17T11:53:47Z",
      "mergedAt": "2023-02-17T11:53:47Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "999d38fec6db196b5a1e567b6c1d75a7dc521d6e"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85NYSXj",
          "commit": {
            "abbreviatedOid": "d0483d4"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-02-14T18:43:38Z",
          "updatedAt": "2023-02-14T18:43:38Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODeTEy85Nrodm",
          "commit": {
            "abbreviatedOid": "aea48c3"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Awesome \ud83d\ude4f Thanks!",
          "createdAt": "2023-02-17T11:53:40Z",
          "updatedAt": "2023-02-17T11:53:40Z",
          "comments": []
        }
      ]
    },
    {
      "number": 335,
      "id": "PR_kwDODeTEy85KTyWm",
      "title": "Move the IAL on step 6 to the step and not the list",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/335",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Sorry, I had to wrap this.",
      "createdAt": "2023-02-20T05:28:28Z",
      "updatedAt": "2023-02-22T21:11:05Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "999d38fec6db196b5a1e567b6c1d75a7dc521d6e",
      "headRepository": "martinthomson/privacy-pass",
      "headRefName": "step-6",
      "headRefOid": "ca8c59d46beb0f43f8ee4de513a241a6bf219968",
      "closedAt": "2023-02-22T21:11:05Z",
      "mergedAt": "2023-02-22T21:11:05Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "c19d41c477398f8da6ab4088eed0c948bbe55228"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85OGIwo",
          "commit": {
            "abbreviatedOid": "ca8c59d"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-02-22T21:11:00Z",
          "updatedAt": "2023-02-22T21:11:00Z",
          "comments": []
        }
      ]
    },
    {
      "number": 336,
      "id": "PR_kwDODeTEy85Km7o1",
      "title": "Not specific to HTTP",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/336",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #323",
      "createdAt": "2023-02-23T13:39:32Z",
      "updatedAt": "2023-02-27T16:03:51Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "c19d41c477398f8da6ab4088eed0c948bbe55228",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/not-specific-to-http",
      "headRefOid": "5f2611fd18e37e8c3adb6d3cd7a68844e275c4e4",
      "closedAt": "2023-02-27T16:03:51Z",
      "mergedAt": "2023-02-27T16:03:51Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "6b18351efac227bc2861ff115d95655716592696"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85OODB6",
          "commit": {
            "abbreviatedOid": "5f2611f"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Request/response is still a bit implying HTTP, but I'm OK with this change. ",
          "createdAt": "2023-02-23T23:45:13Z",
          "updatedAt": "2023-02-23T23:45:13Z",
          "comments": []
        }
      ]
    },
    {
      "number": 337,
      "id": "PR_kwDODeTEy85KnCU9",
      "title": "Attestation is a prerequisite for issuance",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/337",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #322.",
      "createdAt": "2023-02-23T13:57:35Z",
      "updatedAt": "2023-02-27T16:04:21Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "c19d41c477398f8da6ab4088eed0c948bbe55228",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/attest-before-issue",
      "headRefOid": "59cc9e1f8aeb1a012b86930ae02702dead596649",
      "closedAt": "2023-02-27T16:04:21Z",
      "mergedAt": "2023-02-27T16:04:21Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "a3585096828b6611513649db27baf2352c6b7c15"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85OODMC",
          "commit": {
            "abbreviatedOid": "59cc9e1"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-02-23T23:46:13Z",
          "updatedAt": "2023-02-23T23:46:13Z",
          "comments": []
        }
      ]
    },
    {
      "number": 338,
      "id": "PR_kwDODeTEy85KnMnO",
      "title": "Converge on \"attestation procedure\" ",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/338",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #327",
      "createdAt": "2023-02-23T14:28:39Z",
      "updatedAt": "2023-02-27T16:04:02Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "c19d41c477398f8da6ab4088eed0c948bbe55228",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/no-formats",
      "headRefOid": "95d8e0dd7fc45fc24de48dc6fdc8194f4d5d688b",
      "closedAt": "2023-02-27T16:04:02Z",
      "mergedAt": "2023-02-27T16:04:02Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "03a3352469d5977c48a4fe82ff2deaeeda442ccc"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85OODVh",
          "commit": {
            "abbreviatedOid": "95d8e0d"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-02-23T23:47:11Z",
          "updatedAt": "2023-02-23T23:47:11Z",
          "comments": []
        }
      ]
    },
    {
      "number": 339,
      "id": "PR_kwDODeTEy85Kno4u",
      "title": "Discuss what happens to tokens in circulation after compromise",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/339",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #329 ",
      "createdAt": "2023-02-23T15:45:57Z",
      "updatedAt": "2023-02-28T22:23:39Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "a3585096828b6611513649db27baf2352c6b7c15",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/tokens-in-issuance",
      "headRefOid": "99998741e0f33491941427f666906ef1492be140",
      "closedAt": "2023-02-28T22:23:39Z",
      "mergedAt": "2023-02-28T22:23:39Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "0917db5bcb6d96b18c88fc15b6d924212b263948"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85Omo2i",
          "commit": {
            "abbreviatedOid": "84f8266"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Approved pending one comment",
          "createdAt": "2023-02-28T22:20:45Z",
          "updatedAt": "2023-02-28T22:21:30Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "What does \"maliciously automated\" mean? You could just remove that:\r\n```suggestion\r\nattestation procedure is compromised. Broken\r\n```",
              "createdAt": "2023-02-28T22:20:45Z",
              "updatedAt": "2023-02-28T22:21:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85Omphv",
          "commit": {
            "abbreviatedOid": "9999874"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-28T22:23:22Z",
          "updatedAt": "2023-02-28T22:23:22Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "This was existing text, but removing it is better!",
              "createdAt": "2023-02-28T22:23:22Z",
              "updatedAt": "2023-02-28T22:23:22Z"
            }
          ]
        }
      ]
    },
    {
      "number": 340,
      "id": "PR_kwDODeTEy85KnpmJ",
      "title": "Fix copy-pasta error in issuance context definition",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/340",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #324",
      "createdAt": "2023-02-23T15:48:10Z",
      "updatedAt": "2023-02-27T20:04:13Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "c19d41c477398f8da6ab4088eed0c948bbe55228",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/copy-pasta",
      "headRefOid": "81512746a1a993e4a94ca2c8a7db37aefc7f48a2",
      "closedAt": "2023-02-27T20:04:13Z",
      "mergedAt": "2023-02-27T20:04:13Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "392146e4ed997579affb2a845a8ae271caa0d0f5"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85OcY5Q",
          "commit": {
            "abbreviatedOid": "8151274"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-02-27T17:27:40Z",
          "updatedAt": "2023-02-27T17:27:40Z",
          "comments": []
        }
      ]
    },
    {
      "number": 341,
      "id": "PR_kwDODeTEy85Kn-UV",
      "title": "Token caching security considerations",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/341",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #334 ",
      "createdAt": "2023-02-23T16:50:19Z",
      "updatedAt": "2023-02-28T22:29:21Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "a3585096828b6611513649db27baf2352c6b7c15",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/hoarding",
      "headRefOid": "63afb2b82ebe0b90a9e864ab5d0957195b35f679",
      "closedAt": "2023-02-28T22:29:21Z",
      "mergedAt": "2023-02-28T22:29:20Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "07b63e549f968da1678906266986fde2cda6b473"
      },
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "@tfpauly good suggestions! I merged them all.",
          "createdAt": "2023-02-28T22:27:16Z",
          "updatedAt": "2023-02-28T22:27:16Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85Ompf_",
          "commit": {
            "abbreviatedOid": "ca05b42"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-28T22:23:15Z",
          "updatedAt": "2023-02-28T22:25:10Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "```suggestion\r\nthan one token using an issuance protocol. Cached tokens help improve privacy by\r\n```",
              "createdAt": "2023-02-28T22:23:16Z",
              "updatedAt": "2023-02-28T22:25:10Z"
            },
            {
              "originalPosition": 18,
              "body": "```suggestion\r\nalso allow Clients to reduce the overhead of receiving new tokens via the\r\n```",
              "createdAt": "2023-02-28T22:23:42Z",
              "updatedAt": "2023-02-28T22:25:11Z"
            },
            {
              "originalPosition": 29,
              "body": "```suggestion\r\nattack.\" As an example of this attack, many distributed Clients could obtain\r\n```",
              "createdAt": "2023-02-28T22:24:26Z",
              "updatedAt": "2023-02-28T22:25:11Z"
            },
            {
              "originalPosition": 32,
              "body": "```suggestion\r\nClient. Depending on the deployment model, it can be possible to detect these\r\n```",
              "createdAt": "2023-02-28T22:24:47Z",
              "updatedAt": "2023-02-28T22:25:11Z"
            },
            {
              "originalPosition": 34,
              "body": "```suggestion\r\ntypes of attacks by comparing issuance and redemption contexts; for example,\r\nthis is possible in the Joint Origin and Issuer model.\r\n```",
              "createdAt": "2023-02-28T22:25:07Z",
              "updatedAt": "2023-02-28T22:25:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85OmrAs",
          "commit": {
            "abbreviatedOid": "63afb2b"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-02-28T22:29:02Z",
          "updatedAt": "2023-02-28T22:29:02Z",
          "comments": []
        }
      ]
    },
    {
      "number": 342,
      "id": "PR_kwDODeTEy85Koi5U",
      "title": "Explicit trust relationships (and privacy considerations)",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/342",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #326 \r\nCloses #333",
      "createdAt": "2023-02-23T18:53:37Z",
      "updatedAt": "2023-02-28T23:21:04Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "07b63e549f968da1678906266986fde2cda6b473",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/explicit-trust",
      "headRefOid": "25eee0b3a1680b3797389aacd00f48a95a9ed711",
      "closedAt": "2023-02-28T23:21:03Z",
      "mergedAt": "2023-02-28T23:21:03Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "1b69f9ec46446240ae13a657392d02344ff256e1"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85OmqR8",
          "commit": {
            "abbreviatedOid": "0ae13a5"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-28T22:26:16Z",
          "updatedAt": "2023-02-28T22:28:43Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "```suggestion\r\nprivacy goals of the architecture, and the goals and requirements of the\r\nredemption and issuance protocols.\r\n```",
              "createdAt": "2023-02-28T22:26:16Z",
              "updatedAt": "2023-02-28T22:28:43Z"
            },
            {
              "originalPosition": 45,
              "body": "```suggestion\r\nissued to a Client that successfully completed attestation with an Attester that\r\n```",
              "createdAt": "2023-02-28T22:26:50Z",
              "updatedAt": "2023-02-28T22:28:43Z"
            },
            {
              "originalPosition": 47,
              "body": "```suggestion\r\ntokens issued by an Issuer that trusts multiple Attesters, then a Client can\r\n```",
              "createdAt": "2023-02-28T22:27:06Z",
              "updatedAt": "2023-02-28T22:28:43Z"
            },
            {
              "originalPosition": 48,
              "body": "```suggestion\r\nuse any one of these Attesters to issue and redeem tokens for the Origin.\r\n```",
              "createdAt": "2023-02-28T22:27:14Z",
              "updatedAt": "2023-02-28T22:28:43Z"
            },
            {
              "originalPosition": 51,
              "body": "```suggestion\r\nare deployment-specific. For example, in settings where Attesters and Issuers\r\n```",
              "createdAt": "2023-02-28T22:27:23Z",
              "updatedAt": "2023-02-28T22:28:43Z"
            },
            {
              "originalPosition": 89,
              "body": "What does it mean for a \"token challenge to admit a choice of Issuer\"?",
              "createdAt": "2023-02-28T22:28:10Z",
              "updatedAt": "2023-02-28T22:28:43Z"
            },
            {
              "originalPosition": 110,
              "body": "```suggestion\r\nmutually-authenticated TLS. However, alternative authentication mechanisms are\r\n```",
              "createdAt": "2023-02-28T22:28:35Z",
              "updatedAt": "2023-02-28T22:28:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85OmrdC",
          "commit": {
            "abbreviatedOid": "bdffe50"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-28T22:30:52Z",
          "updatedAt": "2023-02-28T22:30:52Z",
          "comments": [
            {
              "originalPosition": 89,
              "body": "As a hypothetical, imagine a token challenge specified more than one issuer, or if clients were given two challenges for two different issuers.",
              "createdAt": "2023-02-28T22:30:52Z",
              "updatedAt": "2023-02-28T22:30:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85Om3HT",
          "commit": {
            "abbreviatedOid": "4dd89fc"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-28T23:12:48Z",
          "updatedAt": "2023-02-28T23:12:49Z",
          "comments": [
            {
              "originalPosition": 89,
              "body": "I see. Our current challenge does not allow this to be expressed. How about:\r\n```suggestion\r\nFor example, if an Origin allows the Client to choose an Issuer, then the choice\r\n```",
              "createdAt": "2023-02-28T23:12:48Z",
              "updatedAt": "2023-02-28T23:12:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85Om3Lm",
          "commit": {
            "abbreviatedOid": "4dd89fc"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-02-28T23:13:07Z",
          "updatedAt": "2023-02-28T23:13:07Z",
          "comments": []
        }
      ]
    },
    {
      "number": 343,
      "id": "PR_kwDODeTEy85Ko-vM",
      "title": "More clear context descriptions",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/343",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #325",
      "createdAt": "2023-02-23T20:41:28Z",
      "updatedAt": "2023-02-28T10:09:57Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "c19d41c477398f8da6ab4088eed0c948bbe55228",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/context-clarity",
      "headRefOid": "54e78b275841e0aca993b95e98cac669e364cf0c",
      "closedAt": "2023-02-28T10:09:57Z",
      "mergedAt": "2023-02-28T10:09:57Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "da8789e60520a997a0a2bc989ee08437f00ea7ba"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85OelLX",
          "commit": {
            "abbreviatedOid": "64f947e"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-02-28T00:39:44Z",
          "updatedAt": "2023-02-28T00:40:56Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "and the challenge too?",
              "createdAt": "2023-02-28T00:39:44Z",
              "updatedAt": "2023-02-28T00:40:56Z"
            },
            {
              "originalPosition": 24,
              "body": "This does not include the challenge, right?  It includes configuration information from the challenge (the type of issuance protocol), but not the challenge content itself, which needs to remain secret.",
              "createdAt": "2023-02-28T00:40:01Z",
              "updatedAt": "2023-02-28T00:40:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85Oelia",
          "commit": {
            "abbreviatedOid": "64f947e"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-28T00:42:02Z",
          "updatedAt": "2023-02-28T00:42:02Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "The Origin constructs that, so I think it's sort of implicit, but we can add that too.",
              "createdAt": "2023-02-28T00:42:02Z",
              "updatedAt": "2023-02-28T00:42:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85Oelkp",
          "commit": {
            "abbreviatedOid": "64f947e"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-28T00:42:16Z",
          "updatedAt": "2023-02-28T00:42:16Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "```suggestion\r\nto identify a Client and construct a token challenge. This context includes all information associated\r\n```",
              "createdAt": "2023-02-28T00:42:16Z",
              "updatedAt": "2023-02-28T00:42:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85Oel3A",
          "commit": {
            "abbreviatedOid": "6cddf93"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-28T00:44:07Z",
          "updatedAt": "2023-02-28T00:44:08Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "```suggestion\r\naddress), and the Origin name (if revealed during issuance). This does not include\r\nthe token challenge in its entirety, as that is kept secret from the Issuer during the\r\nissuance protocol.\r\n```",
              "createdAt": "2023-02-28T00:44:07Z",
              "updatedAt": "2023-02-28T00:44:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85OfHjP",
          "commit": {
            "abbreviatedOid": "54e78b2"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-02-28T04:20:43Z",
          "updatedAt": "2023-02-28T04:20:43Z",
          "comments": []
        }
      ]
    },
    {
      "number": 344,
      "id": "PR_kwDODeTEy85KpD3D",
      "title": "Fix the diagrams",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/344",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #330.",
      "createdAt": "2023-02-23T21:02:34Z",
      "updatedAt": "2023-02-28T10:10:35Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "c19d41c477398f8da6ab4088eed0c948bbe55228",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/better-figures",
      "headRefOid": "b3526f23ed3cd3c916145660b05215039b201fb2",
      "closedAt": "2023-02-28T10:10:34Z",
      "mergedAt": "2023-02-28T10:10:34Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "b845fd0abe205876755f66abf9a94be9bd5d0438"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85OfHbX",
          "commit": {
            "abbreviatedOid": "b3526f2"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-02-28T04:19:48Z",
          "updatedAt": "2023-02-28T04:19:48Z",
          "comments": []
        }
      ]
    },
    {
      "number": 345,
      "id": "PR_kwDODeTEy85Kpjr-",
      "title": "Attester partitioning considerations",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/345",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #328 ",
      "createdAt": "2023-02-23T23:41:43Z",
      "updatedAt": "2023-02-28T23:21:15Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "a3585096828b6611513649db27baf2352c6b7c15",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/attester-trust",
      "headRefOid": "b0a8ac740ef10aaabb659434739be192e130a13d",
      "closedAt": "2023-02-28T23:21:15Z",
      "mergedAt": "2023-02-28T23:21:15Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "0db18463ce1034af6f6d9e8eebfa9b72ec4c77a9"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85OmrM3",
          "commit": {
            "abbreviatedOid": "13db0f2"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-28T22:29:49Z",
          "updatedAt": "2023-02-28T22:31:10Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "```suggestion\r\nwitness to, confirms, or authenticates a Client so as to verify properties\r\nabout the Client that are required for Issuance. Issuers trust Attesters\r\n```",
              "createdAt": "2023-02-28T22:29:49Z",
              "updatedAt": "2023-02-28T22:31:10Z"
            },
            {
              "originalPosition": 33,
              "body": "```suggestion\r\nsolved a CAPTCHA in the past day. Attesters SHOULD NOT be based on attestation\r\n```",
              "createdAt": "2023-02-28T22:30:25Z",
              "updatedAt": "2023-02-28T22:31:10Z"
            },
            {
              "originalPosition": 36,
              "body": "```suggestion\r\nDepending on the issuance protocol, the Issuer might learn\r\n```",
              "createdAt": "2023-02-28T22:30:45Z",
              "updatedAt": "2023-02-28T22:31:10Z"
            },
            {
              "originalPosition": 46,
              "body": "```suggestion\r\nexplicitly trust the Attester in this regard.\r\n```",
              "createdAt": "2023-02-28T22:31:08Z",
              "updatedAt": "2023-02-28T22:31:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85Om3O9",
          "commit": {
            "abbreviatedOid": "b0a8ac7"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-02-28T23:13:24Z",
          "updatedAt": "2023-02-28T23:13:24Z",
          "comments": []
        }
      ]
    },
    {
      "number": 346,
      "id": "PR_kwDODeTEy85K3s0Z",
      "title": "Information flow",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/346",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #332\r\n\r\ncc @martinthomson, this is largely inspired by your feedback! The intent here is to explain roughly how information flows throughout the various parties in the system, and then to lean on that flow of information in the deployment model section.",
      "createdAt": "2023-02-27T20:40:40Z",
      "updatedAt": "2023-03-02T22:00:13Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "0db18463ce1034af6f6d9e8eebfa9b72ec4c77a9",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/request-leaks",
      "headRefOid": "cb5e8bc8564f2747e5b534ef36c38081f4369600",
      "closedAt": "2023-03-02T17:31:41Z",
      "mergedAt": "2023-03-02T17:31:41Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "9ae562a69b20c0a1e922e936e490a5221a265b21"
      },
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "@martinthomson I think we've faithfully responded to your helpful comments and review, so I'm going to merge this. Please do let us know if you think there's more that should be done, though! ",
          "createdAt": "2023-03-02T17:31:36Z",
          "updatedAt": "2023-03-02T17:31:36Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "I pushed fixes directly to main -- thanks again!",
          "createdAt": "2023-03-02T22:00:13Z",
          "updatedAt": "2023-03-02T22:00:13Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85OeIAK",
          "commit": {
            "abbreviatedOid": "753adfa"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-27T22:18:09Z",
          "updatedAt": "2023-02-27T23:23:40Z",
          "comments": [
            {
              "originalPosition": 40,
              "body": "This is where \"redemption context\" really starts to be critical.  Is it data?  This sentence makes it seem like it is, but that doesn't fit with other explanations.\r\n\r\nI think that you could strike it here:\r\n\r\n```suggestion\r\nIssuer it shares with the Client. This token\r\n```\r\n\r\nThen you could later say something like:\r\n\r\n> The Client needs to assume that the Origin is able to take any information that is available to it and include that in a token challenge.  Any entity that sees the challenge might then learn things about the Client as known to the Origin.  This is why input secrecy is a requirement for issuance protocols, as it ensures that the challenge is not directly available to the Issuer.\r\n\r\nOr something.",
              "createdAt": "2023-02-27T22:18:09Z",
              "updatedAt": "2023-02-27T23:23:40Z"
            },
            {
              "originalPosition": 45,
              "body": "Do you really want to lump these together?",
              "createdAt": "2023-02-27T22:19:45Z",
              "updatedAt": "2023-02-27T23:23:41Z"
            },
            {
              "originalPosition": 54,
              "body": "Why would the issuance protocol choice leak information to the issuance context?  That's not immediately obvious.\r\n\r\nI think that what you are saying is that the choice made *by the Origin* regarding the issuance protocol might be used to carry information from the Origin to the Issuer if the Client requests issuance when it receives a challenge.  If the issuance protocol choice is exposed to the Attester, then it too learns this information.  If there are multiple options available, some information about the Client can be encoded in the choice between those options.",
              "createdAt": "2023-02-27T22:22:15Z",
              "updatedAt": "2023-02-27T23:23:41Z"
            },
            {
              "originalPosition": 57,
              "body": "Does the token challenge include information about the Issuer's public key?  Again, this seems to assume something about where the information originates without saying it.  Is this information passing from Origin to Issuer (and maybe Attester)?",
              "createdAt": "2023-02-27T22:29:46Z",
              "updatedAt": "2023-02-27T23:23:41Z"
            },
            {
              "originalPosition": 62,
              "body": "```suggestion\r\nbe capable of completing the designated attestation procedure.\r\n```",
              "createdAt": "2023-02-27T22:30:25Z",
              "updatedAt": "2023-02-27T23:23:41Z"
            },
            {
              "originalPosition": 62,
              "body": "This is necessary information, isn't it?  We really do need the Issuer to be convinced that the Client passed whatever tests the Attester set.\r\n\r\nThe other aspect to consider is what unwanted information might be revealed here.  If the Attester would accept a Client that meets criterion A, B, or C, then it should not be the case that the Issuer learns which of A, B, or C was used.  That seems fine.  However, if there are multiple valid Attesters, I don't see a way to avoid the Issuer learning which Attester was used.  The choice of Attester therefore says something about the client.  There is a transitory flow of information here though: if Attester A supports method A and Attester B supports method B, then the choice of Attester indirectly reveals the choice of method.",
              "createdAt": "2023-02-27T23:14:44Z",
              "updatedAt": "2023-02-27T23:23:41Z"
            },
            {
              "originalPosition": 66,
              "body": "I think that you might infer that the Client had received a challenge from one of the Origins that trust that Issuer, but you can't guarantee that this is the case.  Clients could proactively retrieve tokens.  Those tokens wouldn't be bound to something the Origin cares about necessarily, so maybe a per-Origin token doesn't fit this cleanly, but it does seem possible.",
              "createdAt": "2023-02-27T23:16:52Z",
              "updatedAt": "2023-02-27T23:23:41Z"
            },
            {
              "originalPosition": 75,
              "body": "I'll repeat my previous complaint.  The Client interacting with the Issuer *via the Attester* is something that is assumed far too often in the document.  This needs to be conditional at a minimum.  Also, in those protocols that encapsulate the Client-Issuer exchange, the information that leaks is only based on traffic analysis.",
              "createdAt": "2023-02-27T23:19:18Z",
              "updatedAt": "2023-02-27T23:23:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85Oea0d",
          "commit": {
            "abbreviatedOid": "753adfa"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-27T23:41:08Z",
          "updatedAt": "2023-02-27T23:41:09Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "Yeah, I think so, since they're both happening in issuance.",
              "createdAt": "2023-02-27T23:41:08Z",
              "updatedAt": "2023-02-27T23:41:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85OebRS",
          "commit": {
            "abbreviatedOid": "753adfa"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-27T23:43:14Z",
          "updatedAt": "2023-02-27T23:43:14Z",
          "comments": [
            {
              "originalPosition": 40,
              "body": "I think we need to keep redemption context here, since that's the information the Origin has available to it to construct a token challenge. I like the other suggestion to explain why issuance secrecy is important.",
              "createdAt": "2023-02-27T23:43:14Z",
              "updatedAt": "2023-02-27T23:43:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85Oebrg",
          "commit": {
            "abbreviatedOid": "753adfa"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-27T23:45:33Z",
          "updatedAt": "2023-02-27T23:45:33Z",
          "comments": [
            {
              "originalPosition": 57,
              "body": "I relaxed this to be more general and just say \"issuer configuration,\" as that's generally what the token challenge conveys.",
              "createdAt": "2023-02-27T23:45:33Z",
              "updatedAt": "2023-02-27T23:45:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85OecAu",
          "commit": {
            "abbreviatedOid": "753adfa"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-27T23:47:28Z",
          "updatedAt": "2023-02-27T23:47:29Z",
          "comments": [
            {
              "originalPosition": 62,
              "body": "This list isn't meant to be exhaustive, as I don't expect us to be able to list all exhaustive things. It contains the list of what seem to me to be the obvious things that might be revealed, and the type of attestation that's done is one of those obvious things. It is necessarily revealed to the issuer through the process here.",
              "createdAt": "2023-02-27T23:47:28Z",
              "updatedAt": "2023-02-28T10:11:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85Oecwq",
          "commit": {
            "abbreviatedOid": "753adfa"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-27T23:51:55Z",
          "updatedAt": "2023-02-27T23:51:55Z",
          "comments": [
            {
              "originalPosition": 54,
              "body": "> Why would the issuance protocol choice leak information to the issuance context? That's not immediately obvious.\r\n\r\nAs an example, maybe an Issuer only supports the rate-limiting issuance protocol for one origin. This would be pretty silly, but it would be possible, and as a result, the issuance protocol immediately reveals unwanted information to the issuer.\r\n\r\n> I think that what you are saying is that the choice made by the Origin regarding the issuance protocol might be used to carry information from the Origin to the Issuer if the Client requests issuance when it receives a challenge. If the issuance protocol choice is exposed to the Attester, then it too learns this information. If there are multiple options available, some information about the Client can be encoded in the choice between those options.\r\n\r\nThat's a good clarification, yeah. I'll include it.",
              "createdAt": "2023-02-27T23:51:55Z",
              "updatedAt": "2023-02-27T23:51:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85OedZj",
          "commit": {
            "abbreviatedOid": "753adfa"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-27T23:55:34Z",
          "updatedAt": "2023-02-27T23:55:35Z",
          "comments": [
            {
              "originalPosition": 66,
              "body": "Good call out. I've clarified that it's only a possibility.",
              "createdAt": "2023-02-27T23:55:34Z",
              "updatedAt": "2023-02-27T23:55:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85OeduU",
          "commit": {
            "abbreviatedOid": "753adfa"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-27T23:57:29Z",
          "updatedAt": "2023-02-27T23:57:30Z",
          "comments": [
            {
              "originalPosition": 40,
              "body": "I still don't understand whether \"redemption context\" refers to data or something else though.",
              "createdAt": "2023-02-27T23:57:29Z",
              "updatedAt": "2023-02-27T23:57:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85OeeOQ",
          "commit": {
            "abbreviatedOid": "753adfa"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-28T00:00:07Z",
          "updatedAt": "2023-02-28T00:00:07Z",
          "comments": [
            {
              "originalPosition": 75,
              "body": "This is fair criticism. It's noted that this is an option in the overview section, but I don't think it's obvious enough. I'll try to clarify.",
              "createdAt": "2023-02-28T00:00:07Z",
              "updatedAt": "2023-02-28T00:00:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85Oef_H",
          "commit": {
            "abbreviatedOid": "753adfa"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-28T00:09:30Z",
          "updatedAt": "2023-02-28T00:09:31Z",
          "comments": [
            {
              "originalPosition": 40,
              "body": "It refers to _anything that the origin can see during redemption_ (defined earlier in the doc).",
              "createdAt": "2023-02-28T00:09:30Z",
              "updatedAt": "2023-02-28T00:09:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85OeiKv",
          "commit": {
            "abbreviatedOid": "753adfa"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-28T00:21:09Z",
          "updatedAt": "2023-02-28T00:21:09Z",
          "comments": [
            {
              "originalPosition": 40,
              "body": "(Unresolving) @martinthomson does the improved description in #343 work?",
              "createdAt": "2023-02-28T00:21:09Z",
              "updatedAt": "2023-02-28T00:21:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85OfAPM",
          "commit": {
            "abbreviatedOid": "03669e0"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-28T03:26:44Z",
          "updatedAt": "2023-02-28T03:36:49Z",
          "comments": [
            {
              "originalPosition": 40,
              "body": "```suggestion\r\nIssuer and information from the redemption context it shares with the Client. This token\r\n```",
              "createdAt": "2023-02-28T03:26:44Z",
              "updatedAt": "2023-02-28T03:36:49Z"
            },
            {
              "originalPosition": 77,
              "body": "I'm still not convinced by this being a single section.  The attestation context only gains information from the issuance context transitively.  That is, if you need to use attestation method W to execute issuance protocol X and you need issuance protocol X to get token Y to answer challenge Z, then you can trace the way from Z to W, but each step is its own and the client is more or less in control of whether to proceed in each, provided that it understands what information carries over.",
              "createdAt": "2023-02-28T03:33:45Z",
              "updatedAt": "2023-02-28T03:36:49Z"
            },
            {
              "originalPosition": 62,
              "body": "Obvious or not, it is still worth spelling out explicitly.  These are points where information leaks as a direct result of the architectural choices.",
              "createdAt": "2023-02-28T03:35:42Z",
              "updatedAt": "2023-02-28T03:36:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85OgrvU",
          "commit": {
            "abbreviatedOid": "753adfa"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-28T10:11:40Z",
          "updatedAt": "2023-02-28T10:11:41Z",
          "comments": [
            {
              "originalPosition": 62,
              "body": "Agreed. Let's keep it in the list.",
              "createdAt": "2023-02-28T10:11:40Z",
              "updatedAt": "2023-02-28T10:11:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85Ogzg1",
          "commit": {
            "abbreviatedOid": "6502333"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-28T10:26:32Z",
          "updatedAt": "2023-02-28T10:26:32Z",
          "comments": [
            {
              "originalPosition": 77,
              "body": "The attestation context does sometimes gain information explicitly from issuance, as in the rate limited protocol. I'll try to clarify that in the definitions.",
              "createdAt": "2023-02-28T10:26:32Z",
              "updatedAt": "2023-02-28T10:26:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85OmryR",
          "commit": {
            "abbreviatedOid": "eea6cf9"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-28T22:32:11Z",
          "updatedAt": "2023-02-28T22:33:12Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "Two \"for the purposes of...\" here?",
              "createdAt": "2023-02-28T22:32:11Z",
              "updatedAt": "2023-02-28T22:33:12Z"
            },
            {
              "originalPosition": 32,
              "body": "```suggestion\r\nIssuers through an Attester, Attesters and Issuers might use\r\n```",
              "createdAt": "2023-02-28T22:32:28Z",
              "updatedAt": "2023-02-28T22:33:12Z"
            },
            {
              "originalPosition": 68,
              "body": "```suggestion\r\nThe end-to-end process of redemption and issuance protocols involves information\r\n```",
              "createdAt": "2023-02-28T22:32:59Z",
              "updatedAt": "2023-02-28T22:33:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85Om3h0",
          "commit": {
            "abbreviatedOid": "6b1e95e"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-02-28T23:14:57Z",
          "updatedAt": "2023-02-28T23:14:57Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODeTEy85O1xrG",
          "commit": {
            "abbreviatedOid": "cb5e8bc"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "Thanks for all the work on this.",
          "createdAt": "2023-03-02T21:53:30Z",
          "updatedAt": "2023-03-02T21:58:06Z",
          "comments": [
            {
              "originalPosition": 93,
              "body": "typo: mult~~u~~iple",
              "createdAt": "2023-03-02T21:53:30Z",
              "updatedAt": "2023-03-02T21:58:06Z"
            },
            {
              "originalPosition": 94,
              "body": "typo: contr[i]bute",
              "createdAt": "2023-03-02T21:53:45Z",
              "updatedAt": "2023-03-02T21:58:06Z"
            },
            {
              "originalPosition": 127,
              "body": "I suggest that you avoid saying \"In general\" before \"exceptional\".",
              "createdAt": "2023-03-02T21:56:27Z",
              "updatedAt": "2023-03-02T21:58:06Z"
            }
          ]
        }
      ]
    },
    {
      "number": 347,
      "id": "PR_kwDODeTEy85K8q29",
      "title": "Extend diagram improvements to other docs",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/347",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "cc @tfpauly ",
      "createdAt": "2023-02-28T16:24:13Z",
      "updatedAt": "2023-02-28T17:24:36Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "b845fd0abe205876755f66abf9a94be9bd5d0438",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/other-doc-diagrams",
      "headRefOid": "817b659223d9b4bba7d66875d409b9919dd769ab",
      "closedAt": "2023-02-28T17:24:36Z",
      "mergedAt": "2023-02-28T17:24:36Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "4c90ec28165faaa74883114e52269d84abffbd58"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85OkOt4",
          "commit": {
            "abbreviatedOid": "817b659"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-02-28T17:09:42Z",
          "updatedAt": "2023-02-28T17:09:42Z",
          "comments": []
        }
      ]
    },
    {
      "number": 348,
      "id": "PR_kwDODeTEy85K_TwS",
      "title": "Clarify key ID with an example",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/348",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #321\r\n\r\ncc @jedisct1, @fredericjacobs for an extra set of eyes to check me here -- ASN.1 is not my forte. I went based on the implementation [here](https://github.com/cloudflare/pat-go/blob/main/x509util.go#L66-L89), which I think matches what Frank did [here](https://github.com/jedisct1/rust-blind-rsa-signatures/blob/master/src/lib.rs#L320), but I would definitely appreciate confirmation!",
      "createdAt": "2023-03-01T03:33:51Z",
      "updatedAt": "2023-03-06T23:49:38Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "0db18463ce1034af6f6d9e8eebfa9b72ec4c77a9",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "key-id-specifics",
      "headRefOid": "ddeb1787cbaea2abdf51f497725dcaf16bd5e58c",
      "closedAt": "2023-03-06T20:03:45Z",
      "mergedAt": "2023-03-06T20:03:45Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "87ebe472424e9e841ca7b0e22007e4d67665bf76"
      },
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Friendly bump @jedisct1 and @fredericjacobs =)",
          "createdAt": "2023-03-06T10:44:11Z",
          "updatedAt": "2023-03-06T10:44:11Z"
        },
        {
          "author": "FredericJacobs",
          "authorAssociation": "NONE",
          "body": "Do you have a test vector / example to make sure it matches what I believe?",
          "createdAt": "2023-03-06T15:07:11Z",
          "updatedAt": "2023-03-06T15:07:11Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "@FredericJacobs yeah, each [issuance protocol test vector](https://ietf-wg-privacypass.github.io/base-drafts/draft-ietf-privacypass-protocol.html#name-issuance-protocol-2-blind-r) includes the encoded public key (`pkS`).",
          "createdAt": "2023-03-06T15:22:27Z",
          "updatedAt": "2023-03-06T15:22:27Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Example, taken from the current test vector:\r\n\r\n```\r\n$ echo 30820152303d06092a864886f70d01010a3030a00d300b0609608648016503040202a11a301806092a864886f70d010108300b0609608648016503040202a2030201300382010f003082010a0282010100cb1aed6b6a95f5b1ce013a4cfcab25b94b2e64a23034e4250a7eab43c0df3a8c12993af12b111908d4b471bec31d4b6c9ad9cdda90612a2ee903523e6de5a224d6b02f09e5c374d0cfe01d8f529c500a78a2f67908fa682b5a2b430c81eaf1af72d7b5e794fc98a3139276879757ce453b526ef9bf6ceb99979b8423b90f4461a22af37aab0cf5733f7597abe44d31c732db68a181c6cbbe607d8c0e52e0655fd9996dc584eca0be87afbcd78a337d17b1dba9e828bbd81e291317144e7ff89f55619709b096cbb9ea474cead264c2073fe49740c01f00e109106066983d21e5f83f086e2e823c879cd43cef700d2a352a9babd612d03cad02db134b7e225a5f0203010001 | xxd -r -p | openssl asn1parse -dump -inform DER\r\n    0:d=0  hl=4 l= 338 cons: SEQUENCE          \r\n    4:d=1  hl=2 l=  61 cons: SEQUENCE          \r\n    6:d=2  hl=2 l=   9 prim: OBJECT            :rsassaPss\r\n   17:d=2  hl=2 l=  48 cons: SEQUENCE          \r\n   19:d=3  hl=2 l=  13 cons: cont [ 0 ]        \r\n   21:d=4  hl=2 l=  11 cons: SEQUENCE          \r\n   23:d=5  hl=2 l=   9 prim: OBJECT            :sha384\r\n   34:d=3  hl=2 l=  26 cons: cont [ 1 ]        \r\n   36:d=4  hl=2 l=  24 cons: SEQUENCE          \r\n   38:d=5  hl=2 l=   9 prim: OBJECT            :mgf1\r\n   49:d=5  hl=2 l=  11 cons: SEQUENCE          \r\n   51:d=6  hl=2 l=   9 prim: OBJECT            :sha384\r\n   62:d=3  hl=2 l=   3 cons: cont [ 2 ]        \r\n   64:d=4  hl=2 l=   1 prim: INTEGER           :30\r\n   67:d=1  hl=4 l= 271 prim: BIT STRING        \r\n      0000 - 00 30 82 01 0a 02 82 01-01 00 cb 1a ed 6b 6a 95   .0...........kj.\r\n      0010 - f5 b1 ce 01 3a 4c fc ab-25 b9 4b 2e 64 a2 30 34   ....:L..%.K.d.04\r\n      0020 - e4 25 0a 7e ab 43 c0 df-3a 8c 12 99 3a f1 2b 11   .%.~.C..:...:.+.\r\n      0030 - 19 08 d4 b4 71 be c3 1d-4b 6c 9a d9 cd da 90 61   ....q...Kl.....a\r\n      0040 - 2a 2e e9 03 52 3e 6d e5-a2 24 d6 b0 2f 09 e5 c3   *...R>m..$../...\r\n      0050 - 74 d0 cf e0 1d 8f 52 9c-50 0a 78 a2 f6 79 08 fa   t.....R.P.x..y..\r\n      0060 - 68 2b 5a 2b 43 0c 81 ea-f1 af 72 d7 b5 e7 94 fc   h+Z+C.....r.....\r\n      0070 - 98 a3 13 92 76 87 97 57-ce 45 3b 52 6e f9 bf 6c   ....v..W.E;Rn..l\r\n      0080 - eb 99 97 9b 84 23 b9 0f-44 61 a2 2a f3 7a ab 0c   .....#..Da.*.z..\r\n      0090 - f5 73 3f 75 97 ab e4 4d-31 c7 32 db 68 a1 81 c6   .s?u...M1.2.h...\r\n      00a0 - cb be 60 7d 8c 0e 52 e0-65 5f d9 99 6d c5 84 ec   ..`}..R.e_..m...\r\n      00b0 - a0 be 87 af bc d7 8a 33-7d 17 b1 db a9 e8 28 bb   .......3}.....(.\r\n      00c0 - d8 1e 29 13 17 14 4e 7f-f8 9f 55 61 97 09 b0 96   ..)...N...Ua....\r\n      00d0 - cb b9 ea 47 4c ea d2 64-c2 07 3f e4 97 40 c0 1f   ...GL..d..?..@..\r\n      00e0 - 00 e1 09 10 60 66 98 3d-21 e5 f8 3f 08 6e 2e 82   ....`f.=!..?.n..\r\n      00f0 - 3c 87 9c d4 3c ef 70 0d-2a 35 2a 9b ab d6 12 d0   <...<.p.*5*.....\r\n      0100 - 3c ad 02 db 13 4b 7e 22-5a 5f 02 03 01 00 01      <....K~\"Z_.....\r\n```",
          "createdAt": "2023-03-06T15:23:57Z",
          "updatedAt": "2023-03-06T15:23:57Z"
        },
        {
          "author": "jedisct1",
          "authorAssociation": "NONE",
          "body": "Looks good to me. But yeah, ASN.1 is not the most concise nor readable format.",
          "createdAt": "2023-03-06T16:24:13Z",
          "updatedAt": "2023-03-06T16:24:13Z"
        },
        {
          "author": "smhendrickson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "ASN1 matches my expectations as well.",
          "createdAt": "2023-03-06T23:49:38Z",
          "updatedAt": "2023-03-06T23:49:38Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85OnjAq",
          "commit": {
            "abbreviatedOid": "8a4bc6b"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-01T03:34:32Z",
          "updatedAt": "2023-03-01T03:34:32Z",
          "comments": [
            {
              "originalPosition": 29,
              "body": "```suggestion\r\n```",
              "createdAt": "2023-03-01T03:34:32Z",
              "updatedAt": "2023-03-01T03:34:32Z"
            }
          ]
        }
      ]
    },
    {
      "number": 349,
      "id": "PR_kwDODeTEy85NUAvn",
      "title": "Align with VOPRF identifiers",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/349",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Oops.",
      "createdAt": "2023-03-31T03:06:07Z",
      "updatedAt": "2023-04-04T08:57:45Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "d880759a004468dabe65d0dc0e34d014a4398959",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "chris-wood-patch-2",
      "headRefOid": "2a4c0a7ec47e6c93b892a59b8767623d3edc9d14",
      "closedAt": "2023-04-04T08:57:44Z",
      "mergedAt": "2023-04-04T08:57:44Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "d00bbf0adf877ddf4e0acbdb2e444c67d9a77c02"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85Rbmi-",
          "commit": {
            "abbreviatedOid": "2a4c0a7"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-03-31T03:06:39Z",
          "updatedAt": "2023-03-31T03:06:39Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODeTEy85Rbn2R",
          "commit": {
            "abbreviatedOid": "2a4c0a7"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-03-31T03:17:03Z",
          "updatedAt": "2023-03-31T03:17:03Z",
          "comments": []
        }
      ]
    },
    {
      "number": 350,
      "id": "PR_kwDODeTEy85NUCwU",
      "title": "Add text about discriminatory behavior",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/350",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "cc @martinthomson for \ud83d\udc40 ",
      "createdAt": "2023-03-31T03:22:04Z",
      "updatedAt": "2023-04-05T10:32:54Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "d880759a004468dabe65d0dc0e34d014a4398959",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/discrimination",
      "headRefOid": "27045b9ccb046768233773ca084d41a51123028d",
      "closedAt": "2023-04-05T10:32:53Z",
      "mergedAt": "2023-04-05T10:32:53Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "9da4d9a5d2407ef5f08d83895c7ba9c817f07959"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85Rbov7",
          "commit": {
            "abbreviatedOid": "c6a5241"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-31T03:24:09Z",
          "updatedAt": "2023-03-31T03:25:02Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "```suggestion\r\nstrive to work with a set of Attesters that are suitable for all possible Clients, thereby\r\n```",
              "createdAt": "2023-03-31T03:24:09Z",
              "updatedAt": "2023-03-31T03:25:02Z"
            },
            {
              "originalPosition": 10,
              "body": "```suggestion\r\nmitigating such discriminatory behavior. In practice, this may require tradeoffs\r\n```",
              "createdAt": "2023-03-31T03:24:20Z",
              "updatedAt": "2023-03-31T03:25:02Z"
            },
            {
              "originalPosition": 7,
              "body": "```suggestion\r\nis that Privacy Pass could enable discriminatory treatment of Clients based on Attestation support. This could\r\n```",
              "createdAt": "2023-03-31T03:24:56Z",
              "updatedAt": "2023-03-31T03:25:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85RcM-k",
          "commit": {
            "abbreviatedOid": "e65135e"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-31T06:51:21Z",
          "updatedAt": "2023-03-31T06:51:21Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "Did we mean to cite this? I don't see a citation above.",
              "createdAt": "2023-03-31T06:51:21Z",
              "updatedAt": "2023-03-31T06:51:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85RcNM2",
          "commit": {
            "abbreviatedOid": "e65135e"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-31T06:52:13Z",
          "updatedAt": "2023-03-31T06:52:14Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "I wanted to but then didn't, so I just left the change in for my future self.",
              "createdAt": "2023-03-31T06:52:13Z",
              "updatedAt": "2023-03-31T06:52:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85RcNU8",
          "commit": {
            "abbreviatedOid": "e65135e"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-03-31T06:52:41Z",
          "updatedAt": "2023-03-31T06:52:41Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODeTEy85Rc7o-",
          "commit": {
            "abbreviatedOid": "e65135e"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "I think that the new section is a fair characterization of the balance that needs to be struck regarding discrimination.  Maybe that's the title you should use.",
          "createdAt": "2023-03-31T08:51:39Z",
          "updatedAt": "2023-03-31T08:53:49Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\nchosen Issuer, and Clients that are not capable of doing the same. A consequence of this\r\n```",
              "createdAt": "2023-03-31T08:51:39Z",
              "updatedAt": "2023-03-31T08:53:49Z"
            },
            {
              "originalPosition": 4,
              "body": "This paragraph is probably an entire section.  It would read better if it were three or four paragraphs, I think",
              "createdAt": "2023-03-31T08:52:25Z",
              "updatedAt": "2023-03-31T08:53:49Z"
            },
            {
              "originalPosition": 15,
              "body": "```suggestion\r\nvalue of a Privacy Pass token is bound by the difficulty in spoofing or bypassing\r\n```",
              "createdAt": "2023-03-31T08:52:51Z",
              "updatedAt": "2023-03-31T08:53:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85RidYo",
          "commit": {
            "abbreviatedOid": "e65135e"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-01T23:30:48Z",
          "updatedAt": "2023-04-01T23:30:49Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "Yeah, I considered that originally, but was overcome by laziness. The latest commit moves the text to a section alongside deployment considerations like centralization, which feels like the right place for it.",
              "createdAt": "2023-04-01T23:30:49Z",
              "updatedAt": "2023-04-01T23:30:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85Rq_GN",
          "commit": {
            "abbreviatedOid": "03dd8c5"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-04T05:36:00Z",
          "updatedAt": "2023-04-04T05:37:09Z",
          "comments": [
            {
              "originalPosition": 33,
              "body": "```suggestion\r\nsuitable for all Clients, thereby mitigating such discriminatory behavior.\r\n```",
              "createdAt": "2023-04-04T05:36:00Z",
              "updatedAt": "2023-04-04T05:37:09Z"
            }
          ]
        }
      ]
    },
    {
      "number": 355,
      "id": "PR_kwDODeTEy85N9bYY",
      "title": "TokenChallenge validation steps",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/355",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #353.",
      "createdAt": "2023-04-10T19:46:51Z",
      "updatedAt": "2023-04-10T20:03:24Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "9b1cd1674a95cb50a4c4fc751cc153f051f9c3b5",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "chris-wood-patch-3",
      "headRefOid": "2413a98924fde85372259772f4b8615c7bd7ea4a",
      "closedAt": "2023-04-10T20:03:24Z",
      "mergedAt": "2023-04-10T20:03:24Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "d1ffb552aaed940f6de66486232425f8395f340a"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85SI17_",
          "commit": {
            "abbreviatedOid": "6872baf"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-10T19:54:32Z",
          "updatedAt": "2023-04-10T19:54:32Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "```suggestion\r\n  authentication challenge is included in the list of origin names.\r\n```",
              "createdAt": "2023-04-10T19:54:32Z",
              "updatedAt": "2023-04-10T19:54:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85SI2AQ",
          "commit": {
            "abbreviatedOid": "a4c2e34"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-10T19:54:48Z",
          "updatedAt": "2023-04-10T19:54:48Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "```suggestion\r\n- The token_type is recognized and supported by the client; and\r\n```",
              "createdAt": "2023-04-10T19:54:48Z",
              "updatedAt": "2023-04-10T19:54:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85SI4A4",
          "commit": {
            "abbreviatedOid": "2413a98"
          },
          "author": "smhendrickson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-04-10T20:01:57Z",
          "updatedAt": "2023-04-10T20:01:57Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODeTEy85SI4Xw",
          "commit": {
            "abbreviatedOid": "2413a98"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-04-10T20:03:15Z",
          "updatedAt": "2023-04-10T20:03:15Z",
          "comments": []
        }
      ]
    },
    {
      "number": 356,
      "id": "PR_kwDODeTEy85N9fcF",
      "title": "Recommend sending a minimal number of challenges",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/356",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "tfpauly"
      ],
      "labels": [
        "auth-scheme"
      ],
      "body": "Closes #351",
      "createdAt": "2023-04-10T20:02:46Z",
      "updatedAt": "2023-04-10T20:04:33Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "9b1cd1674a95cb50a4c4fc751cc153f051f9c3b5",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "tfpauly-patch-18",
      "headRefOid": "28989afa950cb24b2669f4daaeb1071e7565eb80",
      "closedAt": "2023-04-10T20:04:33Z",
      "mergedAt": "2023-04-10T20:04:33Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "cc549ee52b13463d2f69f1e93ec72dc2571c3b74"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85SI4i2",
          "commit": {
            "abbreviatedOid": "28989af"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-04-10T20:03:50Z",
          "updatedAt": "2023-04-10T20:03:50Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODeTEy85SI4ph",
          "commit": {
            "abbreviatedOid": "28989af"
          },
          "author": "smhendrickson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-04-10T20:04:13Z",
          "updatedAt": "2023-04-10T20:04:13Z",
          "comments": []
        }
      ]
    },
    {
      "number": 357,
      "id": "PR_kwDODeTEy85PEJNL",
      "title": "Adding IANA considerations section",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/357",
      "state": "MERGED",
      "author": "jsalowey",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "ID-nits requires IANA considerations section - https://authors.ietf.org/required-content",
      "createdAt": "2023-04-25T05:02:24Z",
      "updatedAt": "2023-04-25T13:28:26Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "cc549ee52b13463d2f69f1e93ec72dc2571c3b74",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "jsalowey-iana",
      "headRefOid": "a2a725781c0f451fffc29fab9b9722dfa5af085e",
      "closedAt": "2023-04-25T13:28:26Z",
      "mergedAt": "2023-04-25T13:28:26Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "a3e9c97349b4e75a80e94d072698115ff35c8037"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85TcSvn",
          "commit": {
            "abbreviatedOid": "a2a7257"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-04-25T13:28:21Z",
          "updatedAt": "2023-04-25T13:28:21Z",
          "comments": []
        }
      ]
    },
    {
      "number": 359,
      "id": "PR_kwDODeTEy85PndrG",
      "title": "Fix reference nit",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/359",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "auth-scheme"
      ],
      "body": "Closes #358",
      "createdAt": "2023-05-02T19:36:29Z",
      "updatedAt": "2023-05-02T20:58:34Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "a3e9c97349b4e75a80e94d072698115ff35c8037",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "tfpauly-patch-19",
      "headRefOid": "f6efd29d6b4393b0a212769ef8d79a80b733025a",
      "closedAt": "2023-05-02T20:58:34Z",
      "mergedAt": "2023-05-02T20:58:34Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "30c48676097e9adcb6f09b0e75dbe1a216daca64"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85UCINY",
          "commit": {
            "abbreviatedOid": "f6efd29"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-05-02T20:30:07Z",
          "updatedAt": "2023-05-02T20:30:08Z",
          "comments": []
        }
      ]
    },
    {
      "number": 360,
      "id": "PR_kwDODeTEy85QBJiK",
      "title": "Add HTTP header encoding test vectors",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/360",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #352 ",
      "createdAt": "2023-05-08T16:47:54Z",
      "updatedAt": "2023-05-08T19:28:49Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "30c48676097e9adcb6f09b0e75dbe1a216daca64",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/auth-test-vectors",
      "headRefOid": "b0c61ee9b6098f8a21a3f7d2acf75cef8ada66a4",
      "closedAt": "2023-05-08T19:28:48Z",
      "mergedAt": "2023-05-08T19:28:48Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "fccbaa47fd691e33d62ddc75b09cc81977cb1c99"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85UezHK",
          "commit": {
            "abbreviatedOid": "f53c836"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-05-08T19:12:15Z",
          "updatedAt": "2023-05-08T19:14:02Z",
          "comments": [
            {
              "originalPosition": 40,
              "body": "```suggestion\r\nmax-age, and token-challenge parameters are listed. Each challenge also\r\n```",
              "createdAt": "2023-05-08T19:12:15Z",
              "updatedAt": "2023-05-08T19:14:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85Ue1g1",
          "commit": {
            "abbreviatedOid": "b0c61ee"
          },
          "author": "smhendrickson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-05-08T19:19:56Z",
          "updatedAt": "2023-05-08T19:19:56Z",
          "comments": []
        }
      ]
    },
    {
      "number": 361,
      "id": "PR_kwDODeTEy85QHMc3",
      "title": "Redemption context unlinkability",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/361",
      "state": "MERGED",
      "author": "nikitaborisov",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "architecture"
      ],
      "body": "The unlinkability properties in the architecture document discuss the unlinkability of clients/origins in each individual context (attestation, issuance, redemption). An important property of privacy pass, as I understand it, is the unlinkability of the contexts themselves. So I added another property, calling it \"Redemption context unlinkability\" that adds this as a specific goal. (There may be a more descriptive name?)\r\n\r\nI also took the liberty of editing the Attestation-Origin anonymity paragraph; I'm pretty sure the relevant anonymity  set here is a set of Origins, not a set of Clients. ",
      "createdAt": "2023-05-09T16:43:24Z",
      "updatedAt": "2023-05-10T17:10:50Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "fccbaa47fd691e33d62ddc75b09cc81977cb1c99",
      "headRepository": "nikitaborisov/base-drafts",
      "headRefName": "issuance_redemption_unlinkability",
      "headRefOid": "bed05509e8423a0eb82c3d4091642b8ba4858a75",
      "closedAt": "2023-05-10T17:10:50Z",
      "mergedAt": "2023-05-10T17:10:50Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "9a2ca6a458ea4fe288163bd4ac38a68619ce59f0"
      },
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Nice and succinct \ud83d\udc4d Thanks for this change.",
          "createdAt": "2023-05-10T17:10:41Z",
          "updatedAt": "2023-05-10T17:10:41Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85Us-MZ",
          "commit": {
            "abbreviatedOid": "bed0550"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-10T17:10:14Z",
          "updatedAt": "2023-05-10T17:10:15Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Good catch!",
              "createdAt": "2023-05-10T17:10:14Z",
              "updatedAt": "2023-05-10T17:10:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85Us-R8",
          "commit": {
            "abbreviatedOid": "bed0550"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-05-10T17:10:28Z",
          "updatedAt": "2023-05-10T17:10:28Z",
          "comments": []
        }
      ]
    },
    {
      "number": 362,
      "id": "PR_kwDODeTEy85QJo1t",
      "title": "Update IANA media types section",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/362",
      "state": "MERGED",
      "author": "jsalowey",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "protocol"
      ],
      "body": "",
      "createdAt": "2023-05-10T04:43:48Z",
      "updatedAt": "2023-05-10T17:06:26Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "fccbaa47fd691e33d62ddc75b09cc81977cb1c99",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "jsalowey-iana-1",
      "headRefOid": "984c9cfba9d3a674e969846d20d58f867ca0f2ba",
      "closedAt": "2023-05-10T17:06:25Z",
      "mergedAt": "2023-05-10T17:06:25Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "ea1740811aa12e1bfcc079c8a7ccf7cf526af5ba"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85Us47_",
          "commit": {
            "abbreviatedOid": "984c9cf"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-05-10T16:56:23Z",
          "updatedAt": "2023-05-10T16:56:23Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODeTEy85Us80x",
          "commit": {
            "abbreviatedOid": "984c9cf"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-05-10T17:06:21Z",
          "updatedAt": "2023-05-10T17:06:21Z",
          "comments": []
        }
      ]
    },
    {
      "number": 363,
      "id": "PR_kwDODeTEy85QNwMj",
      "title": "Change to proposed standard",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/363",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-05-10T17:09:42Z",
      "updatedAt": "2023-05-12T20:39:38Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "ea1740811aa12e1bfcc079c8a7ccf7cf526af5ba",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/proposed-standard",
      "headRefOid": "a9563ef6e4d972883cd5f2c4726ff55c7ff6ce85",
      "closedAt": "2023-05-12T20:39:38Z",
      "mergedAt": "2023-05-12T20:39:38Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "9f680c59f457dd63a6abaaabbd845bd82d622844"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85UtW9C",
          "commit": {
            "abbreviatedOid": "a9563ef"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-05-10T18:24:52Z",
          "updatedAt": "2023-05-10T18:24:52Z",
          "comments": []
        }
      ]
    },
    {
      "number": 365,
      "id": "PR_kwDODeTEy85QOy5f",
      "title": "Note subdomain config differentiation",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/365",
      "state": "MERGED",
      "author": "smhendrickson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "protocol"
      ],
      "body": "",
      "createdAt": "2023-05-10T21:20:16Z",
      "updatedAt": "2023-05-17T15:08:29Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "aa1a006e6fc7a2277895c82828728c8856341a9a",
      "headRepository": "smhendrickson/base-drafts",
      "headRefName": "patch-2",
      "headRefOid": "ae5e298856217bfe0f93659f3c44c71453a2b910",
      "closedAt": "2023-05-16T21:22:30Z",
      "mergedAt": "2023-05-16T21:22:30Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "90bf8b9a139431b6afa4be237756296690a31c3d"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85Uzhme",
          "commit": {
            "abbreviatedOid": "ecdb512"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-11T14:47:47Z",
          "updatedAt": "2023-05-11T14:47:47Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "```suggestion\r\nunique subdomains for each so the TokenChallenge defined in\r\n{{Section 2.1 of !AUTHSCHEME=I-D.ietf-privacypass-auth-scheme}} can be\r\n```",
              "createdAt": "2023-05-11T14:47:47Z",
              "updatedAt": "2023-05-11T14:47:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85UzjYZ",
          "commit": {
            "abbreviatedOid": "98bfe1b"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-11T14:51:10Z",
          "updatedAt": "2023-05-11T14:51:16Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "```suggestion\r\nThe issuer directory and issuer resources SHOULD be available on the same domain. If\r\n```",
              "createdAt": "2023-05-11T14:51:10Z",
              "updatedAt": "2023-05-11T14:51:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85U0LVa",
          "commit": {
            "abbreviatedOid": "ae5e298"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-05-11T16:02:54Z",
          "updatedAt": "2023-05-11T16:02:54Z",
          "comments": []
        }
      ]
    },
    {
      "number": 366,
      "id": "PR_kwDODeTEy85Q92F7",
      "title": "Update draft-ietf-privacypass-protocol.md",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/366",
      "state": "MERGED",
      "author": "jsalowey",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "reference for derivekey",
      "createdAt": "2023-05-22T01:22:17Z",
      "updatedAt": "2023-05-22T11:31:27Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "d28b6dc0cd709761098410b87329a6e1d3eb1be9",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "jsalowey-drv-key",
      "headRefOid": "65c2a496eea34b1aa6ee7b3ee1703677366a8108",
      "closedAt": "2023-05-22T11:31:26Z",
      "mergedAt": "2023-05-22T11:31:26Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "40ac91791024b37effe2cba81219aad3fffc363b"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85VnheO",
          "commit": {
            "abbreviatedOid": "65c2a49"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-05-22T11:31:13Z",
          "updatedAt": "2023-05-22T11:31:13Z",
          "comments": []
        }
      ]
    },
    {
      "number": 367,
      "id": "PR_kwDODeTEy85Q95ax",
      "title": "Fixup 6.2 error response",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/367",
      "state": "MERGED",
      "author": "jsalowey",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-05-22T01:42:34Z",
      "updatedAt": "2023-05-22T11:32:09Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "d28b6dc0cd709761098410b87329a6e1d3eb1be9",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "jsalowey-62-error-resp",
      "headRefOid": "858dd8c8e58aaf4dfe18153cf64d54ef5b0ac7ad",
      "closedAt": "2023-05-22T11:32:09Z",
      "mergedAt": "2023-05-22T11:32:09Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "4bab78dcd61a48d634fe5f6dc9d56e27f84180f4"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85Vnhuk",
          "commit": {
            "abbreviatedOid": "86586c0"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-05-22T11:31:56Z",
          "updatedAt": "2023-05-22T11:32:01Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nto the Client. Otherwise, if the\r\n```",
              "createdAt": "2023-05-22T11:31:56Z",
              "updatedAt": "2023-05-22T11:32:01Z"
            }
          ]
        }
      ]
    },
    {
      "number": 368,
      "id": "PR_kwDODeTEy85Q96T7",
      "title": "Update reference",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/368",
      "state": "MERGED",
      "author": "jsalowey",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-05-22T01:48:07Z",
      "updatedAt": "2023-05-22T11:32:27Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "d28b6dc0cd709761098410b87329a6e1d3eb1be9",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "jsalowey-consist-ref",
      "headRefOid": "bd95a021ab62fa304d9003f1381f3177fe90707b",
      "closedAt": "2023-05-22T11:32:27Z",
      "mergedAt": "2023-05-22T11:32:27Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "a19a33cd44e24d46c09bdd556628026b94a5081a"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85Vnh41",
          "commit": {
            "abbreviatedOid": "bd95a02"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-05-22T11:32:23Z",
          "updatedAt": "2023-05-22T11:32:23Z",
          "comments": []
        }
      ]
    },
    {
      "number": 371,
      "id": "PR_kwDODeTEy85RLapT",
      "title": "More draft-irtf-cfrg-voprf alignment",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/371",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #370",
      "createdAt": "2023-05-23T19:41:03Z",
      "updatedAt": "2023-05-23T19:44:47Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "a19a33cd44e24d46c09bdd556628026b94a5081a",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/align-with-voprf",
      "headRefOid": "a3be0b50cb9cd69d8554bd118b8cfce6f89ef160",
      "closedAt": "2023-05-23T19:44:47Z",
      "mergedAt": "2023-05-23T19:44:47Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "4c45c3de3c2b12a12110db6a638da24733c9f18d"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85V24Qu",
          "commit": {
            "abbreviatedOid": "a3be0b5"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-05-23T19:43:59Z",
          "updatedAt": "2023-05-23T19:43:59Z",
          "comments": []
        }
      ]
    },
    {
      "number": 377,
      "id": "PR_kwDODeTEy85TAqwZ",
      "title": "Rename the Issuer directory media type to align with the PrivateToken type",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/377",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #373",
      "createdAt": "2023-06-14T15:49:20Z",
      "updatedAt": "2023-06-15T17:27:05Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "92c26026c205a2e5685a5e56cce0596e01cbd411",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/rename-directory-content-type",
      "headRefOid": "e5af1c746ef59a215b701f98795272ce16703d31",
      "closedAt": "2023-06-15T17:27:05Z",
      "mergedAt": "2023-06-15T17:27:05Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "151fa7ca2ad2ce8adae4b78dd25497f58a653ceb"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85YNByP",
          "commit": {
            "abbreviatedOid": "faa98c6"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-14T15:52:45Z",
          "updatedAt": "2023-06-14T15:52:45Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODeTEy85YNVfR",
          "commit": {
            "abbreviatedOid": "faa98c6"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-14T16:35:45Z",
          "updatedAt": "2023-06-14T16:35:45Z",
          "comments": []
        }
      ]
    },
    {
      "number": 378,
      "id": "PR_kwDODeTEy85TAt7d",
      "title": "Make future protocol requirements more clear",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/378",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #375 \r\nCloses #354",
      "createdAt": "2023-06-14T15:58:19Z",
      "updatedAt": "2023-06-15T17:26:28Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "e8c48052bb026836efcefefc614b8650953dcdbf",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/future-requirements",
      "headRefOid": "0262ab8ef7866b9d68e5ab7cc1c09beb28780fb7",
      "closedAt": "2023-06-15T17:26:27Z",
      "mergedAt": "2023-06-15T17:26:27Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "92c26026c205a2e5685a5e56cce0596e01cbd411"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85YNVJj",
          "commit": {
            "abbreviatedOid": "0262ab8"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-14T16:35:10Z",
          "updatedAt": "2023-06-14T16:35:10Z",
          "comments": []
        }
      ]
    },
    {
      "number": 379,
      "id": "PR_kwDODeTEy85TAvLr",
      "title": "Identifiers are unique",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/379",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #376",
      "createdAt": "2023-06-14T16:01:19Z",
      "updatedAt": "2023-06-15T17:26:21Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "e8c48052bb026836efcefefc614b8650953dcdbf",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/unique-identifiers",
      "headRefOid": "bea18378874faa022587005eabaab84a6b14b02a",
      "closedAt": "2023-06-15T17:26:20Z",
      "mergedAt": "2023-06-15T17:26:20Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "e4c8d52f291aa1fbd8a97937de12ce6764948cc2"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85YNUg6",
          "commit": {
            "abbreviatedOid": "bea1837"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-14T16:33:32Z",
          "updatedAt": "2023-06-14T16:33:32Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODeTEy85YNkK7",
          "commit": {
            "abbreviatedOid": "bea1837"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-14T17:12:43Z",
          "updatedAt": "2023-06-14T17:12:43Z",
          "comments": []
        }
      ]
    },
    {
      "number": 380,
      "id": "PR_kwDODeTEy85TA09K",
      "title": "Apply edits based on bemasc's review",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/380",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #372\r\n\r\n@bemasc at this point I think we would need substantial interest in moving away from a .well-known, so the text here simply clarifies why it exists.",
      "createdAt": "2023-06-14T16:17:05Z",
      "updatedAt": "2023-06-15T17:26:13Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "e8c48052bb026836efcefefc614b8650953dcdbf",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/bemasc-edits",
      "headRefOid": "af4645b84ec10c87f7c8154ef8ca336d9b644bb3",
      "closedAt": "2023-06-15T17:26:13Z",
      "mergedAt": "2023-06-15T17:26:13Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "557a8a69db774d0c7bea556d0c8605d20cf3671b"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85YNU4A",
          "commit": {
            "abbreviatedOid": "ff0afbe"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-14T16:34:27Z",
          "updatedAt": "2023-06-14T16:34:40Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "```suggestion\r\nat a well-known URI is that Issuers are defined by an origin name in TokenChallenge\r\n```",
              "createdAt": "2023-06-14T16:34:27Z",
              "updatedAt": "2023-06-14T16:34:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85YNcVH",
          "commit": {
            "abbreviatedOid": "6ab67e4"
          },
          "author": "bemasc",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-14T16:52:52Z",
          "updatedAt": "2023-06-14T16:58:27Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "It sounds like you're saying that the directory resource is fresh but invalid?  If so, it would be clearer to make that explicit.\r\n```suggestion\r\nIssuer has invalidated its directory resource before its expiration time and issuance requests using this\r\n```",
              "createdAt": "2023-06-14T16:52:52Z",
              "updatedAt": "2023-06-14T16:58:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85YNjf-",
          "commit": {
            "abbreviatedOid": "6ab67e4"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-14T17:10:53Z",
          "updatedAt": "2023-06-14T17:10:53Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODeTEy85YNlAi",
          "commit": {
            "abbreviatedOid": "ff0afbe"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-14T17:14:57Z",
          "updatedAt": "2023-06-14T17:14:58Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "Yes, exactly, thanks for the suggestion!",
              "createdAt": "2023-06-14T17:14:58Z",
              "updatedAt": "2023-06-14T17:14:58Z"
            }
          ]
        }
      ]
    },
    {
      "number": 381,
      "id": "PR_kwDODeTEy85THsjX",
      "title": "Add \"not-before\" field",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/381",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Based on [mailing list discussion](https://mailarchive.ietf.org/arch/msg/privacy-pass/vrhCH9cR2Ru1wUd6WJ5MC45lPqM/).",
      "createdAt": "2023-06-15T17:37:36Z",
      "updatedAt": "2023-06-26T12:26:33Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "151fa7ca2ad2ce8adae4b78dd25497f58a653ceb",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/not-before",
      "headRefOid": "fcc8a9032bf5082872b9f09808f961e0a45b6d21",
      "closedAt": "2023-06-26T12:26:32Z",
      "mergedAt": "2023-06-26T12:26:32Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "93b45530de5c1a839fbf438e25e8cc7ee5fe924b"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85YV0_h",
          "commit": {
            "abbreviatedOid": "4f2805a"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-15T17:48:42Z",
          "updatedAt": "2023-06-15T17:48:43Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "For keys without not-before, wouldn't clients always select the first key? What's the value of having multiple non-not-before keys?",
              "createdAt": "2023-06-15T17:48:42Z",
              "updatedAt": "2023-06-15T17:48:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85YV1BA",
          "commit": {
            "abbreviatedOid": "4f2805a"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-15T17:48:46Z",
          "updatedAt": "2023-06-15T17:48:46Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODeTEy85YV1qW",
          "commit": {
            "abbreviatedOid": "4f2805a"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-15T17:50:25Z",
          "updatedAt": "2023-06-15T17:50:25Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "Yeah, if there are no not-before values, clients would pick the first in the list.",
              "createdAt": "2023-06-15T17:50:25Z",
              "updatedAt": "2023-06-15T17:50:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85YV2aI",
          "commit": {
            "abbreviatedOid": "4f2805a"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-15T17:52:29Z",
          "updatedAt": "2023-06-15T17:52:30Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "I clarified how clients would consume a list based on not-before and the sorting order.",
              "createdAt": "2023-06-15T17:52:29Z",
              "updatedAt": "2023-06-15T17:52:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85YWGT0",
          "commit": {
            "abbreviatedOid": "c43ceb4"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-15T18:39:13Z",
          "updatedAt": "2023-06-15T18:39:45Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "Should the key also be defined in the table above?",
              "createdAt": "2023-06-15T18:39:13Z",
              "updatedAt": "2023-06-15T18:39:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85YWGwq",
          "commit": {
            "abbreviatedOid": "c43ceb4"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-15T18:40:39Z",
          "updatedAt": "2023-06-15T18:40:39Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "I left it out of the table because that is a list of required fields, whereas this one is optional.",
              "createdAt": "2023-06-15T18:40:39Z",
              "updatedAt": "2023-06-15T18:40:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85YWS3d",
          "commit": {
            "abbreviatedOid": "c43ceb4"
          },
          "author": "smhendrickson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-15T19:17:03Z",
          "updatedAt": "2023-06-15T19:17:03Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "Do you want to explicitly call out origin behavior, where they should attempt to verify using all present keys, or add some skew around the `not-before` for verification?\r\n\r\nI'm worried an origin will use the not-before as a hard cutoff, and clients with positive skew will use this before origins are allowing verification on it.",
              "createdAt": "2023-06-15T19:17:03Z",
              "updatedAt": "2023-06-15T19:17:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85YWT7p",
          "commit": {
            "abbreviatedOid": "c43ceb4"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-15T19:20:21Z",
          "updatedAt": "2023-06-15T19:20:22Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "That's a good idea. I'll add something about origins here.",
              "createdAt": "2023-06-15T19:20:21Z",
              "updatedAt": "2023-06-15T19:20:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85YWUdy",
          "commit": {
            "abbreviatedOid": "c43ceb4"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-15T19:22:03Z",
          "updatedAt": "2023-06-15T19:22:04Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "@smhendrickson done! How does it look?",
              "createdAt": "2023-06-15T19:22:04Z",
              "updatedAt": "2023-06-15T19:22:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85YWVdx",
          "commit": {
            "abbreviatedOid": "c43ceb4"
          },
          "author": "smhendrickson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-15T19:25:25Z",
          "updatedAt": "2023-06-15T19:25:25Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "LGTM",
              "createdAt": "2023-06-15T19:25:25Z",
              "updatedAt": "2023-06-15T19:25:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85YXMGV",
          "commit": {
            "abbreviatedOid": "6a227bc"
          },
          "author": "punkeel",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-15T22:26:06Z",
          "updatedAt": "2023-06-15T22:26:06Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODeTEy85YaFxd",
          "commit": {
            "abbreviatedOid": "6a227bc"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-16T11:09:42Z",
          "updatedAt": "2023-06-16T11:09:53Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "```suggestion\r\nThe value of this field is the UNIX timestamp (number of seconds since\r\n```",
              "createdAt": "2023-06-16T11:09:42Z",
              "updatedAt": "2023-06-16T11:09:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85YaF_b",
          "commit": {
            "abbreviatedOid": "6a05c24"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-16T11:10:25Z",
          "updatedAt": "2023-06-16T11:10:26Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "```suggestion\r\n        \"not-before\": 1686913811,\r\n```",
              "createdAt": "2023-06-16T11:10:25Z",
              "updatedAt": "2023-06-16T11:10:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85YaGDV",
          "commit": {
            "abbreviatedOid": "822bf6d"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-16T11:10:37Z",
          "updatedAt": "2023-06-16T11:10:38Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "```suggestion\r\nClients that use this directory resource before 1686913811 in UNIX time would use the\r\nsecond key in the \"token-keys\" list, whereas Clients that use this directory after\r\n1686913811 in UNIX time would use the first key in the \"token-keys\" list.\r\n```",
              "createdAt": "2023-06-16T11:10:37Z",
              "updatedAt": "2023-06-16T11:10:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85Yc1T2",
          "commit": {
            "abbreviatedOid": "fcc8a90"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-16T16:54:41Z",
          "updatedAt": "2023-06-16T16:54:41Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODeTEy85Ysmtx",
          "commit": {
            "abbreviatedOid": "fcc8a90"
          },
          "author": "smhendrickson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-20T12:55:42Z",
          "updatedAt": "2023-06-20T12:55:42Z",
          "comments": []
        }
      ]
    },
    {
      "number": 387,
      "id": "PR_kwDODeTEy85TiXVe",
      "title": "Clients MAY ignore challenges for any reason (but let's keep some examples)",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/387",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #385",
      "createdAt": "2023-06-21T11:40:48Z",
      "updatedAt": "2023-06-21T14:50:23Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "151fa7ca2ad2ce8adae4b78dd25497f58a653ceb",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/ignoring-challenges",
      "headRefOid": "144eb9d877b71d06f604141280fe92d32049c9d3",
      "closedAt": "2023-06-21T14:50:22Z",
      "mergedAt": "2023-06-21T14:50:22Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "7ecb04f1657c2b3dac04fc2bc102eeb7102336e4"
      },
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "> Not too sure about \"if desired\", but I couldn't come up with a better suggestion.\r\n\r\nYeah, I wasn't too sure about it either. I just dropped it. \ud83d\udc4d ",
          "createdAt": "2023-06-21T14:48:24Z",
          "updatedAt": "2023-06-21T14:48:24Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "Sold!",
          "createdAt": "2023-06-21T14:50:20Z",
          "updatedAt": "2023-06-21T14:50:20Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85Y3OCS",
          "commit": {
            "abbreviatedOid": "bd74b8d"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Not too sure about \"if desired\", but I couldn't come up with a better suggestion.",
          "createdAt": "2023-06-21T14:15:45Z",
          "updatedAt": "2023-06-21T14:15:45Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODeTEy85Y3mms",
          "commit": {
            "abbreviatedOid": "bd74b8d"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-21T14:47:59Z",
          "updatedAt": "2023-06-21T14:48:00Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\nClients MAY ignore the challenge, e.g., because the token-key is\r\n```",
              "createdAt": "2023-06-21T14:47:59Z",
              "updatedAt": "2023-06-21T14:48:00Z"
            }
          ]
        }
      ]
    },
    {
      "number": 388,
      "id": "PR_kwDODeTEy85TiamB",
      "title": "Clarify the link between token_type and messages",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/388",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #382",
      "createdAt": "2023-06-21T11:46:50Z",
      "updatedAt": "2023-06-21T14:26:42Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "151fa7ca2ad2ce8adae4b78dd25497f58a653ceb",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/clarify-token-type-and-content-link",
      "headRefOid": "e2faef3527d41f1dd6a100ec589055c18825447a",
      "closedAt": "2023-06-21T14:26:41Z",
      "mergedAt": "2023-06-21T14:26:41Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "8eb990917680e9f454739b186ee90010dd71caec"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85Y3Rg4",
          "commit": {
            "abbreviatedOid": "e2faef3"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-21T14:18:42Z",
          "updatedAt": "2023-06-21T14:18:42Z",
          "comments": []
        }
      ]
    },
    {
      "number": 389,
      "id": "PR_kwDODeTEy85Tieg9",
      "title": "Pretty pictures everywhere",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/389",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #386",
      "createdAt": "2023-06-21T11:53:33Z",
      "updatedAt": "2023-06-21T14:20:01Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "151fa7ca2ad2ce8adae4b78dd25497f58a653ceb",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/pretty-pictures",
      "headRefOid": "3e87da70ad064dae0d72a5b0e0027b512239b20a",
      "closedAt": "2023-06-21T14:20:01Z",
      "mergedAt": "2023-06-21T14:20:01Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "90cf5b486e86c5bc8e320ed5acccc6a7c04ded31"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85Y3S0E",
          "commit": {
            "abbreviatedOid": "3e87da7"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-21T14:19:55Z",
          "updatedAt": "2023-06-21T14:19:55Z",
          "comments": []
        }
      ]
    },
    {
      "number": 390,
      "id": "PR_kwDODeTEy85TiiBY",
      "title": "Make clear that strings are hostnames",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/390",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #383 \r\nCloses #384 \r\n\r\nWe might want to be a bit more crisp about the type of a `hostname`. It's generally a domain name, and with and without a trailing dot is acceptable. I'm comfortable with the text as-is, but if folks feel strongly about adding more specificity, let's do it.\r\n\r\ncc @paulwouters for \ud83d\udc40 ",
      "createdAt": "2023-06-21T12:03:19Z",
      "updatedAt": "2023-06-23T15:46:17Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "f4efa535d17ddc89677ab6071b832e7fa3f47839",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/strings-and-hostnames",
      "headRefOid": "f2e42d0c42d30b0ba4873a289e75b9ff46b410e2",
      "closedAt": "2023-06-23T15:46:17Z",
      "mergedAt": "2023-06-23T15:46:17Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "6daab25d04e25c7dba7ab259402918d71a14a40d"
      },
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "@tfpauly fixed the comments. @paulwouters, can you please let us know if this resolves your two comments about `origin_info` and `issuer_name`?",
          "createdAt": "2023-06-21T14:52:30Z",
          "updatedAt": "2023-06-21T14:52:36Z"
        },
        {
          "author": "paulwouters",
          "authorAssociation": "NONE",
          "body": "On Jun 21, 2023, at 16:56, Tommy Pauly ***@***.***> wrote:\ufeff\r\nYeah, this is the HTTP / URI style version of the hostname, not the DNS version of the name.You mean what I type in my address bar ?\u00a0I think when I type\u00a0noh\u00e2ts.ca\u00a0\u00a0I think it will do an a-label lookup ?\u00a0Anyway, make it very clear.\r\n\r\n\u2014Reply to this email directly, view it on GitHub, or unsubscribe.You are receiving this because you were mentioned.Message ID: ***@***.***>",
          "createdAt": "2023-06-21T22:17:12Z",
          "updatedAt": "2023-06-21T22:17:12Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "Yes, the thing in the address bar",
          "createdAt": "2023-06-21T23:41:33Z",
          "updatedAt": "2023-06-21T23:41:33Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "> Yes, the thing in the address bar\r\n\r\nI don't want to continue adding to the confusion here, but just so we're on the same page: I would describe this as the same exact format as the TLS SNI field. I don't _think_ that's the same as the thing as what one would punch into the address bar, since the latter allows all sorts of character sets?",
          "createdAt": "2023-06-22T11:43:12Z",
          "updatedAt": "2023-06-22T11:43:12Z"
        },
        {
          "author": "paulwouters",
          "authorAssociation": "NONE",
          "body": "```\r\n\"issuer_name\" is a UTF-8 string containing the hostname of the issuer, i.e., the\r\nfully qualified DNS hostname of the issuer using ASCII encoding without a trailing dot.\r\n```\r\n\r\nThat's a weird way of saying \"ASCII\".",
          "createdAt": "2023-06-22T14:06:42Z",
          "updatedAt": "2023-06-22T14:06:42Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "The SNI is defined as using A-labels:\r\n\r\n> \"HostName\" contains the fully qualified DNS hostname of the server,\r\n>    as understood by the client.  The hostname is represented as a byte\r\n>    string using ASCII encoding without a trailing dot.  This allows the\r\n>    support of internationalized domain names through the use of A-labels\r\n>    defined in [[RFC5890](https://datatracker.ietf.org/doc/html/rfc5890)].  DNS hostnames are case-insensitive.  The\r\n>    algorithm to compare hostnames is described in [[RFC5890](https://datatracker.ietf.org/doc/html/rfc5890)], [Section](https://datatracker.ietf.org/doc/html/rfc6066#section-2.3.2.4)\r\n>    [2.3.2.4](https://datatracker.ietf.org/doc/html/rfc6066#section-2.3.2.4).\r\n\r\nThe other approach is to have it be what HTTP uses for authority, which I think makes sense given the layer we are operating at:\r\n\r\n> \":authority\":\r\n> Contains the authority portion of the target URI ([Section 3.2](https://www.rfc-editor.org/rfc/rfc3986.html#section-3.2) of [[URI]](https://httpwg.org/specs/rfc9114.html#URI)). The authority MUST NOT include the deprecated userinfo subcomponent for URIs of scheme \"http\" or \"https\".",
          "createdAt": "2023-06-22T15:52:46Z",
          "updatedAt": "2023-06-22T15:52:46Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "The existing text pulls directly from RFC 6066, so I think we ought to keep it.",
          "createdAt": "2023-06-22T16:06:34Z",
          "updatedAt": "2023-06-22T16:06:34Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "@paulwouters please check the text now, should be clear what the format is",
          "createdAt": "2023-06-22T16:38:39Z",
          "updatedAt": "2023-06-22T16:38:39Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85Y3U6n",
          "commit": {
            "abbreviatedOid": "f052b80"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-21T14:22:01Z",
          "updatedAt": "2023-06-21T14:26:24Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "That doesn't necessarily clear up the format of the value/string.\r\n\r\nPerhaps\r\n\r\n```suggestion\r\n- \"issuer_name\" is a value containing the hostname of the issuer as a UTF-8 string. This is\r\n```",
              "createdAt": "2023-06-21T14:22:01Z",
              "updatedAt": "2023-06-21T14:26:24Z"
            },
            {
              "originalPosition": 26,
              "body": "Same for calling this out as UTF-8?",
              "createdAt": "2023-06-21T14:22:39Z",
              "updatedAt": "2023-06-21T14:26:24Z"
            },
            {
              "originalPosition": 31,
              "body": "Let's also include a comment that hostnames included here MUST NOT include commas in themselves?",
              "createdAt": "2023-06-21T14:26:05Z",
              "updatedAt": "2023-06-21T14:26:24Z"
            },
            {
              "originalPosition": 41,
              "body": "I'd lean towards still calling these strings?",
              "createdAt": "2023-06-21T14:26:20Z",
              "updatedAt": "2023-06-21T14:26:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85Y3ovO",
          "commit": {
            "abbreviatedOid": "f052b80"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-21T14:51:31Z",
          "updatedAt": "2023-06-21T14:51:31Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "I figured that was implied from the fact that these are hostnames, but I'm happy to include it.",
              "createdAt": "2023-06-21T14:51:31Z",
              "updatedAt": "2023-06-21T14:51:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85Y3o0w",
          "commit": {
            "abbreviatedOid": "f052b80"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-21T14:51:41Z",
          "updatedAt": "2023-06-21T14:51:42Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "Reverted. ",
              "createdAt": "2023-06-21T14:51:42Z",
              "updatedAt": "2023-06-21T14:51:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85Y3p1C",
          "commit": {
            "abbreviatedOid": "302b3e3"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-21T14:53:09Z",
          "updatedAt": "2023-06-21T14:53:09Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODeTEy85Y4oEy",
          "commit": {
            "abbreviatedOid": "f052b80"
          },
          "author": "paulwouters",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-21T16:46:16Z",
          "updatedAt": "2023-06-21T16:46:17Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "It is implied but it is always good to give a nudge to what could be a security issue if not considered, eg malicious hostnames with comma's",
              "createdAt": "2023-06-21T16:46:16Z",
              "updatedAt": "2023-06-21T16:46:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85Y4pa6",
          "commit": {
            "abbreviatedOid": "302b3e3"
          },
          "author": "paulwouters",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-21T16:48:53Z",
          "updatedAt": "2023-06-21T16:51:53Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "Is it UTF-8 hostnames? eg Ulabel? not A-label (eg punycode) ?\r\n\r\nIf the unit these things operate on are \"dns hostnames\", then I would expect this to use A-labels. That is not noh\u00e2ts.ca but xn--nohts-5qa.ca",
              "createdAt": "2023-06-21T16:48:53Z",
              "updatedAt": "2023-06-21T16:51:53Z"
            },
            {
              "originalPosition": 31,
              "body": "Can we say \"whitespace MUST be ignored\"?  Otherwise, what do you expect an implementation to do when it receives: origin_info\"foo.bar,  test.example\" ? If I follow this text strictly, the second entry would be \"  .test.example.com\", but that is not a valid hostname\r\n",
              "createdAt": "2023-06-21T16:51:40Z",
              "updatedAt": "2023-06-21T16:51:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85Y4v6-",
          "commit": {
            "abbreviatedOid": "302b3e3"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-21T17:01:28Z",
          "updatedAt": "2023-06-21T17:01:28Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "It's just a FQDN without the trailing dot, e.g., \"github.com\" or \"ietf.org\". Basically, the same thing that would go in the TLS SNI. It's _not_ an A-label with the bizarre xn-- prefix. I'll try to clarify.",
              "createdAt": "2023-06-21T17:01:28Z",
              "updatedAt": "2023-06-21T17:01:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85Y4v9i",
          "commit": {
            "abbreviatedOid": "302b3e3"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-21T17:01:33Z",
          "updatedAt": "2023-06-21T17:01:34Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "That seems fine, yes.",
              "createdAt": "2023-06-21T17:01:34Z",
              "updatedAt": "2023-06-21T17:01:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85Y41bP",
          "commit": {
            "abbreviatedOid": "302b3e3"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-21T17:11:06Z",
          "updatedAt": "2023-06-21T17:11:06Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "@paulwouters how does the new text look?",
              "createdAt": "2023-06-21T17:11:06Z",
              "updatedAt": "2023-06-21T17:11:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85Y41fA",
          "commit": {
            "abbreviatedOid": "302b3e3"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-21T17:11:10Z",
          "updatedAt": "2023-06-21T17:11:10Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "Fixed.",
              "createdAt": "2023-06-21T17:11:10Z",
              "updatedAt": "2023-06-21T17:11:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85Y6_Pi",
          "commit": {
            "abbreviatedOid": "302b3e3"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-21T20:55:59Z",
          "updatedAt": "2023-06-21T20:55:59Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "Yeah, this is the HTTP / URI style version of the hostname, not the DNS version of the name.",
              "createdAt": "2023-06-21T20:55:59Z",
              "updatedAt": "2023-06-21T20:55:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85ZBbYI",
          "commit": {
            "abbreviatedOid": "2de3573"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Suggesting to use URI format for encoding, since we're in HTTP and that's what the application is already dealing with.",
          "createdAt": "2023-06-22T15:57:31Z",
          "updatedAt": "2023-06-22T16:00:02Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "```suggestion\r\n- \"issuer_name\" is an ASCII string that identifies the issuer using the format of the authority portion of a URI\r\nas defined in {{Section 3.2 of !URI=RFC3986}}. This name identifies the issuer that is allowed to\r\nissue tokens that can be redeemed by this origin. The field that stores this string in the challenge\r\nis prefixed with a 2-octet integer indicating the length, in network byte order.\r\n```",
              "createdAt": "2023-06-22T15:57:31Z",
              "updatedAt": "2023-06-22T16:00:02Z"
            },
            {
              "originalPosition": 38,
              "body": "```suggestion\r\n- \"origin_info\" is an optional ASCII string containing one or more origin names, each of which\r\nuses the format of the authority portion of a URI as defined in {{Section 3.2 of URI}}. \r\nThe purpose of this field is to allow a token to be scoped to a specific set of origins.\r\nThe field that stores this string in the challenge is prefixed with a 2-octet integer\r\nindicating the length, in network byte order. If empty, any non-origin-specific\r\ntoken can be redeemed. If the string contains multiple origin hostnames, they are\r\ndelimited with commas \",\" without any whitespace. Moreover, any whitespace in the\r\nstring MUST be ignored. Each origin hostname MUST NOT include a comma \",\" character.\r\nIf the \"origin_info\" field is not empty, the Origin MUST include its own name as\r\none of the hostnames in the list.\r\n```",
              "createdAt": "2023-06-22T15:59:34Z",
              "updatedAt": "2023-06-22T16:00:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85ZBvJG",
          "commit": {
            "abbreviatedOid": "648a09a"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-22T16:44:19Z",
          "updatedAt": "2023-06-22T16:44:19Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": "```suggestion\r\nuses the format of the authority portion of a URI as defined in {{Section 3.2 of URI}}.\r\n```",
              "createdAt": "2023-06-22T16:44:19Z",
              "updatedAt": "2023-06-22T16:44:20Z"
            }
          ]
        }
      ]
    },
    {
      "number": 391,
      "id": "PR_kwDODeTEy85TkoDx",
      "title": "Tokens are one-time-use",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/391",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "We never actually say this explicitly, so I figured it'd be good to say it.",
      "createdAt": "2023-06-21T17:14:18Z",
      "updatedAt": "2023-06-21T21:20:17Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "7ecb04f1657c2b3dac04fc2bc102eeb7102336e4",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/one-time-use",
      "headRefOid": "395dce0f68cda827b89e9bb6158ff49769341b42",
      "closedAt": "2023-06-21T21:20:17Z",
      "mergedAt": "2023-06-21T21:20:17Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "909d25dfe45f51cf83949e8ad020638199c73241"
      },
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "I don't know if the one-time-use is necessarily a fundamental property of the auth scheme \u2014 it can be for a particular issuance protocol, but a new token type could theoretically have reused tokens for some use case. (I don't think that's generally a good idea, but I'm mainly saying this doesn't belong here)",
          "createdAt": "2023-06-21T20:57:21Z",
          "updatedAt": "2023-06-21T20:57:21Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Hmm, I don't agree with that. The text already hinges on the need to implement some form of double spending prevention at the origins to prevent replays, which means that replays (using more than once) is not intended. The document seems like it has a very clear stance on this. ",
          "createdAt": "2023-06-21T21:03:52Z",
          "updatedAt": "2023-06-21T21:03:52Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "Yeah, it does cover double spending as a SHOULD today. But it does leave a door open to other behaviors that still work with the auth scheme. I know your change isn't normative, but I see the one-time-use as a SHOULD, but not necessarily a MUST.",
          "createdAt": "2023-06-21T21:09:01Z",
          "updatedAt": "2023-06-21T21:09:01Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "I don't think we want to encourage those use cases. If they do arise, they can update this document to relax the requirement. ",
          "createdAt": "2023-06-21T21:15:26Z",
          "updatedAt": "2023-06-21T21:15:26Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "Okey doke",
          "createdAt": "2023-06-21T21:20:06Z",
          "updatedAt": "2023-06-21T21:20:06Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85Y7LJ8",
          "commit": {
            "abbreviatedOid": "395dce0"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-21T21:20:12Z",
          "updatedAt": "2023-06-21T21:20:12Z",
          "comments": []
        }
      ]
    },
    {
      "number": 392,
      "id": "PR_kwDODeTEy85TrN3x",
      "title": "Clarify default structures",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/392",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "tfpauly"
      ],
      "labels": [],
      "body": "Closes #382",
      "createdAt": "2023-06-22T16:28:26Z",
      "updatedAt": "2023-06-23T15:43:02Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "909d25dfe45f51cf83949e8ad020638199c73241",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "tfpauly-patch-20",
      "headRefOid": "f8334e65fbb877c1feec25d0d55e00ba3d6d122d",
      "closedAt": "2023-06-23T15:43:01Z",
      "mergedAt": "2023-06-23T15:43:01Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "f4efa535d17ddc89677ab6071b832e7fa3f47839"
      },
      "comments": [
        {
          "author": "paulwouters",
          "authorAssociation": "NONE",
          "body": "Thanks. I reviewed the text, and it is okay now.",
          "createdAt": "2023-06-23T15:01:14Z",
          "updatedAt": "2023-06-23T15:01:14Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85ZDHK-",
          "commit": {
            "abbreviatedOid": "b7a5ec4"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-22T20:57:49Z",
          "updatedAt": "2023-06-22T20:57:49Z",
          "comments": [
            {
              "originalPosition": 55,
              "body": "```suggestion\r\n- \"redemption_context\" is a field that is either 0 or 32 bytes, prefixed with a single\r\noctet indicating the length (either 0 or 32). If value is non-empty, it is a 32-byte value\r\ngenerated by the origin that allows the origin to require that clients fetch tokens\r\nbound to a specific context, as opposed to reusing tokens that were fetched for other\r\ncontexts. See {{context-construction}} for example contexts that might be useful in\r\npractice. Challenges with redemption_context values of invalid lengths MUST be ignored.\r\n```",
              "createdAt": "2023-06-22T20:57:49Z",
              "updatedAt": "2023-06-22T20:57:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85ZDHkY",
          "commit": {
            "abbreviatedOid": "b7a5ec4"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-22T20:59:05Z",
          "updatedAt": "2023-06-22T20:59:05Z",
          "comments": [
            {
              "originalPosition": 61,
              "body": "```suggestion\r\n- \"origin_info\" is a string that is either empty, or contains one or more origin\r\nnames that allow a token to be scoped to a specific set of origins. The string\r\nis prefixed with a 2-octet integer indicating the length, in network byte\r\norder. If empty, any non-origin-specific token can be redeemed. If the string\r\n```",
              "createdAt": "2023-06-22T20:59:05Z",
              "updatedAt": "2023-06-22T20:59:05Z"
            }
          ]
        }
      ]
    },
    {
      "number": 394,
      "id": "PR_kwDODeTEy85T7_TV",
      "title": "Annotate test vectors",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/394",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Generated [from this change](https://github.com/cloudflare/pat-go/pull/39).",
      "createdAt": "2023-06-26T15:50:06Z",
      "updatedAt": "2023-07-12T15:50:14Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "93b45530de5c1a839fbf438e25e8cc7ee5fe924b",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/annotate-vectors",
      "headRefOid": "d89399b84d5f2721b4a6c335d94333015faaf14e",
      "closedAt": "2023-07-12T15:50:13Z",
      "mergedAt": "2023-07-12T15:50:13Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "792fe9a1f68ac1267756dac25bf1bcf5c18c535d"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85aGhu2",
          "commit": {
            "abbreviatedOid": "d89399b"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-07-03T19:03:01Z",
          "updatedAt": "2023-07-03T19:03:01Z",
          "comments": []
        }
      ]
    },
    {
      "number": 410,
      "id": "PR_kwDODeTEy85VU_hs",
      "title": "Add token  key encoding to the registry",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/410",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #409",
      "createdAt": "2023-07-12T15:56:04Z",
      "updatedAt": "2023-07-23T20:52:04Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "792fe9a1f68ac1267756dac25bf1bcf5c18c535d",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/token-key-encoding",
      "headRefOid": "a87a6da094678a7a462b92e772639a02b8a2119a",
      "closedAt": "2023-07-23T20:52:03Z",
      "mergedAt": "2023-07-23T20:52:03Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "4bc8dae8f1f7bdc19aeef927c1c4698bd60e7865"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85a_8qi",
          "commit": {
            "abbreviatedOid": "117323e"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-07-12T15:59:46Z",
          "updatedAt": "2023-07-12T15:59:46Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODeTEy85a_9ua",
          "commit": {
            "abbreviatedOid": "117323e"
          },
          "author": "thibmeu",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-12T16:01:35Z",
          "updatedAt": "2023-07-12T16:01:36Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "maybe mention [RFC2692](https://www.rfc-editor.org/rfc/rfc2692.html)",
              "createdAt": "2023-07-12T16:01:36Z",
              "updatedAt": "2023-07-12T16:01:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85bABJz",
          "commit": {
            "abbreviatedOid": "117323e"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-12T16:08:09Z",
          "updatedAt": "2023-07-12T16:08:10Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "I went with a variation \ud83d\udc4d ",
              "createdAt": "2023-07-12T16:08:09Z",
              "updatedAt": "2023-07-12T16:08:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85bF9dG",
          "commit": {
            "abbreviatedOid": "ba8285c"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-13T12:08:01Z",
          "updatedAt": "2023-07-13T12:08:02Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "```suggestion\r\n* Token Key Encoding: Serialized as a DER-encoded SubjectPublicKeyInfo (SPKI) object using the RSASSA-PSS OID {{!RFC5756}}\r\n```",
              "createdAt": "2023-07-13T12:08:01Z",
              "updatedAt": "2023-07-13T12:08:02Z"
            }
          ]
        }
      ]
    },
    {
      "number": 411,
      "id": "PR_kwDODeTEy85VVLO5",
      "title": "GENART review",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/411",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #396",
      "createdAt": "2023-07-12T16:26:47Z",
      "updatedAt": "2023-07-12T19:04:37Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "792fe9a1f68ac1267756dac25bf1bcf5c18c535d",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/genart",
      "headRefOid": "4295f2a21d4ce6142f57bf72699683e6d8dc5252",
      "closedAt": "2023-07-12T19:04:36Z",
      "mergedAt": "2023-07-12T19:04:36Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "edb3abf38be11a393c1a2b963eb7cc6704d53bfc"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85bBScH",
          "commit": {
            "abbreviatedOid": "4295f2a"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-07-12T19:04:25Z",
          "updatedAt": "2023-07-12T19:04:25Z",
          "comments": []
        }
      ]
    },
    {
      "number": 413,
      "id": "PR_kwDODeTEy85WrW8J",
      "title": "Revise padding rationale",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/413",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "tfpauly"
      ],
      "labels": [
        "auth-scheme",
        "editorial"
      ],
      "body": "Closes #412",
      "createdAt": "2023-07-28T18:02:26Z",
      "updatedAt": "2023-08-01T23:54:07Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "4bc8dae8f1f7bdc19aeef927c1c4698bd60e7865",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "tfpauly-patch-21",
      "headRefOid": "e1ccea684a2d11029070c7acf9f8fca1e9a2e2bd",
      "closedAt": "2023-08-01T23:54:07Z",
      "mergedAt": "2023-08-01T23:54:07Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "34880ed2867cc52339634176d72f6d884fa9cafb"
      },
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "The old rationale was back from before this document was adopted, as part of the original individual document.",
          "createdAt": "2023-07-31T22:27:07Z",
          "updatedAt": "2023-07-31T22:27:07Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85cundj",
          "commit": {
            "abbreviatedOid": "e1ccea6"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Much better! Did we ever sort out where the current text rationale came from?",
          "createdAt": "2023-07-31T20:26:51Z",
          "updatedAt": "2023-07-31T20:26:51Z",
          "comments": []
        }
      ]
    },
    {
      "number": 414,
      "id": "PR_kwDODeTEy85WrbBD",
      "title": "Remove incorrect \"figure below\"",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/414",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "tfpauly"
      ],
      "labels": [
        "editorial"
      ],
      "body": "",
      "createdAt": "2023-07-28T18:12:43Z",
      "updatedAt": "2023-07-28T18:13:34Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "b55b4f372acc7a22c6cac3620f36ad06c46e3e06",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "tfpauly-patch-22",
      "headRefOid": "163eea0ee90efa7b4eda589d79ff0fa5d5cf10cf",
      "closedAt": "2023-07-28T18:13:34Z",
      "mergedAt": "2023-07-28T18:13:34Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "a579355585d2371bedfe9dc7614a52a22c81969b"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 423,
      "id": "PR_kwDODeTEy85XBQ50",
      "title": "Address hash agility DISCUSS",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/423",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #416\r\nCloses #418",
      "createdAt": "2023-08-02T15:02:50Z",
      "updatedAt": "2023-08-09T14:09:03Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "a2cf1096a791f9ef6cfcb537660f36c0f4e803a8",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/hashes",
      "headRefOid": "8bcdac3d438439c329032532fd1dfbe3b3773df7",
      "closedAt": "2023-08-09T14:09:03Z",
      "mergedAt": "2023-08-09T14:09:03Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "23874012056ebe886eca57bc04efd89ddbb1d052"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85dTi2a",
          "commit": {
            "abbreviatedOid": "d68b8d5"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-07T14:03:56Z",
          "updatedAt": "2023-08-07T14:03:57Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "Does this need new token structure or should it just say a new token_type?",
              "createdAt": "2023-08-07T14:03:57Z",
              "updatedAt": "2023-08-07T14:03:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85dUMi4",
          "commit": {
            "abbreviatedOid": "d68b8d5"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-07T15:09:10Z",
          "updatedAt": "2023-08-07T15:09:10Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "```suggestion\r\nother than SHA-256 would require defining a new token type and token structure, which can be\r\n```",
              "createdAt": "2023-08-07T15:09:10Z",
              "updatedAt": "2023-08-07T15:09:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85dUMkz",
          "commit": {
            "abbreviatedOid": "d68b8d5"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-07T15:09:13Z",
          "updatedAt": "2023-08-07T15:09:13Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "Both!",
              "createdAt": "2023-08-07T15:09:13Z",
              "updatedAt": "2023-08-07T15:09:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85dUP2f",
          "commit": {
            "abbreviatedOid": "a690b83"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-07T15:14:56Z",
          "updatedAt": "2023-08-07T15:14:57Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "```suggestion\r\n  F(client IP address prefix), where F is a pseudorandom function.\r\n```",
              "createdAt": "2023-08-07T15:14:56Z",
              "updatedAt": "2023-08-07T15:14:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85dUQa4",
          "commit": {
            "abbreviatedOid": "b2865c6"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-07T15:16:10Z",
          "updatedAt": "2023-08-07T15:16:10Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "```suggestion\r\nother than SHA-256 would require defining a new token type and token structure (since the contents of challenge_digest would be computed differently), which can be\r\n```",
              "createdAt": "2023-08-07T15:16:10Z",
              "updatedAt": "2023-08-07T15:16:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85dUYl-",
          "commit": {
            "abbreviatedOid": "6f3a452"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-08-07T15:34:03Z",
          "updatedAt": "2023-08-07T15:34:11Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "nit: wrapping",
              "createdAt": "2023-08-07T15:34:03Z",
              "updatedAt": "2023-08-07T15:34:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85c_YL_",
          "commit": {
            "abbreviatedOid": "6f3a452"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-03T01:59:07Z",
          "updatedAt": "2023-08-09T02:28:31Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Should we still give SHA256 as an example of such a function?",
              "createdAt": "2023-08-03T01:59:07Z",
              "updatedAt": "2023-08-09T02:28:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85dhtFm",
          "commit": {
            "abbreviatedOid": "6f3a452"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-09T09:18:21Z",
          "updatedAt": "2023-08-09T09:18:21Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Nah, I don't think it's necessary.",
              "createdAt": "2023-08-09T09:18:21Z",
              "updatedAt": "2023-08-09T09:18:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85dj20W",
          "commit": {
            "abbreviatedOid": "6f3a452"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-08-09T14:06:26Z",
          "updatedAt": "2023-08-09T14:06:26Z",
          "comments": []
        }
      ]
    },
    {
      "number": 424,
      "id": "PR_kwDODeTEy85XJPYR",
      "title": "Clearly specify token verification steps",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/424",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This references the issuance protocol document for details.\r\n\r\nCloses #420\r\nCloses #415 \r\n",
      "createdAt": "2023-08-03T20:54:09Z",
      "updatedAt": "2023-08-09T14:09:14Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "34880ed2867cc52339634176d72f6d884fa9cafb",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/specify-verification",
      "headRefOid": "404b0c139c6939ff47c66a933a133125573aac1b",
      "closedAt": "2023-08-09T14:09:14Z",
      "mergedAt": "2023-08-09T14:09:14Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "d39c5fb00bc65495af1520f08aafe34167e072bb"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85dfxso",
          "commit": {
            "abbreviatedOid": "64dc7d4"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-08-09T02:31:03Z",
          "updatedAt": "2023-08-09T02:32:07Z",
          "comments": [
            {
              "originalPosition": 39,
              "body": "Now that we're going back to this, does this need to be a normative MAY, or can it be:\r\n```suggestion\r\nTokenChallenge structures in order to validate the token. A TokenChallenge can\r\n```",
              "createdAt": "2023-08-09T02:31:03Z",
              "updatedAt": "2023-08-09T02:32:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85dhyDe",
          "commit": {
            "abbreviatedOid": "64dc7d4"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-09T09:29:29Z",
          "updatedAt": "2023-08-09T09:29:29Z",
          "comments": [
            {
              "originalPosition": 39,
              "body": "This was existing text, so I'm fine relaxing it.",
              "createdAt": "2023-08-09T09:29:29Z",
              "updatedAt": "2023-08-09T09:29:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85dj3jE",
          "commit": {
            "abbreviatedOid": "404b0c1"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-08-09T14:07:20Z",
          "updatedAt": "2023-08-09T14:07:20Z",
          "comments": []
        }
      ]
    },
    {
      "number": 425,
      "id": "PR_kwDODeTEy85XJUAf",
      "title": "Clean up authn and authz relationship in the intro",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/425",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #395",
      "createdAt": "2023-08-03T21:15:09Z",
      "updatedAt": "2023-08-09T15:18:06Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "faf4b83e43c82dd29f785980a6e5e9697bd685d5",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/authn-and-authz",
      "headRefOid": "202be68a0625ec7388947a84e93101ad6c079285",
      "closedAt": "2023-08-09T15:18:05Z",
      "mergedAt": "2023-08-09T15:18:05Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "19901996cc7fd7dcd110da0b705e71f285b7ced1"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85df0h3",
          "commit": {
            "abbreviatedOid": "a36f582"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-09T02:50:37Z",
          "updatedAt": "2023-08-09T02:52:03Z",
          "comments": [
            {
              "originalPosition": 33,
              "body": "I find the use of \"API\" here to be a bit odd. I would lean towards implying this and just saying that the authorization allows clients to access a resource.",
              "createdAt": "2023-08-09T02:50:37Z",
              "updatedAt": "2023-08-09T02:52:03Z"
            },
            {
              "originalPosition": 118,
              "body": "```suggestion\r\nto all other Clients. If the Attestation is not equally available to all legitimate clients, this can yield\r\n```",
              "createdAt": "2023-08-09T02:52:00Z",
              "updatedAt": "2023-08-09T02:52:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85dhykI",
          "commit": {
            "abbreviatedOid": "a36f582"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-09T09:30:37Z",
          "updatedAt": "2023-08-09T09:30:37Z",
          "comments": [
            {
              "originalPosition": 118,
              "body": "I don't think we can say this without also defining what legitimate means, and I don't think we have a good definition. That's why I went with equitable.",
              "createdAt": "2023-08-09T09:30:37Z",
              "updatedAt": "2023-08-09T09:30:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85dhyr2",
          "commit": {
            "abbreviatedOid": "a36f582"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-09T09:30:54Z",
          "updatedAt": "2023-08-09T09:30:54Z",
          "comments": [
            {
              "originalPosition": 33,
              "body": "Works for me!",
              "createdAt": "2023-08-09T09:30:54Z",
              "updatedAt": "2023-08-09T09:30:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85dhysP",
          "commit": {
            "abbreviatedOid": "a36f582"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-09T09:30:55Z",
          "updatedAt": "2023-08-09T09:30:55Z",
          "comments": [
            {
              "originalPosition": 33,
              "body": "```suggestion\r\nparticular resource or write access to a particular resource.\r\n```",
              "createdAt": "2023-08-09T09:30:55Z",
              "updatedAt": "2023-08-09T09:30:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85dj7V9",
          "commit": {
            "abbreviatedOid": "f80ed8c"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-09T14:11:59Z",
          "updatedAt": "2023-08-09T14:12:00Z",
          "comments": [
            {
              "originalPosition": 118,
              "body": "I feel that \"equitable\" is not necessarily clearly defined here either. That seems to imply some broader statement, as opposed to just saying that \"anyone who should be able to pass the bar can\". If the use for a particular token is saying \"you have a legitimate account to use this privacy proxy or OHTTP relay\", then it's OK for that to be limited. If the use is to access a website, it needs to be open to all browsers. Etc, etc.",
              "createdAt": "2023-08-09T14:11:59Z",
              "updatedAt": "2023-08-09T14:12:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85dj9eO",
          "commit": {
            "abbreviatedOid": "f80ed8c"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-09T14:14:43Z",
          "updatedAt": "2023-08-09T14:14:44Z",
          "comments": [
            {
              "originalPosition": 118,
              "body": "I agree, neither are really clearly defined. What if we just gave examples (like those which you listed)?",
              "createdAt": "2023-08-09T14:14:44Z",
              "updatedAt": "2023-08-09T14:14:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85dj-lK",
          "commit": {
            "abbreviatedOid": "a36f582"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-09T14:16:38Z",
          "updatedAt": "2023-08-09T14:16:38Z",
          "comments": [
            {
              "originalPosition": 118,
              "body": "Sure, maybe giving more concrete examples is the best route here.",
              "createdAt": "2023-08-09T14:16:38Z",
              "updatedAt": "2023-08-09T14:16:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85dkLBR",
          "commit": {
            "abbreviatedOid": "f80ed8c"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-09T14:35:56Z",
          "updatedAt": "2023-08-09T14:35:56Z",
          "comments": [
            {
              "originalPosition": 118,
              "body": "@tfpauly please take a look at the latest version and let me know what you think?",
              "createdAt": "2023-08-09T14:35:56Z",
              "updatedAt": "2023-08-09T14:35:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85dkb2O",
          "commit": {
            "abbreviatedOid": "2bd31d6"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-08-09T14:55:35Z",
          "updatedAt": "2023-08-09T14:55:35Z",
          "comments": []
        }
      ]
    },
    {
      "number": 426,
      "id": "PR_kwDODeTEy85XJeT7",
      "title": "Origin guidance and issuer details",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/426",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #417\r\nCloses #419 \r\nCloses #421\r\nCloses #422 ",
      "createdAt": "2023-08-03T22:07:05Z",
      "updatedAt": "2023-08-09T14:11:32Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "d39c5fb00bc65495af1520f08aafe34167e072bb",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/origin-guidance",
      "headRefOid": "aa2dad350922f9cb2f1e0568fe78af58aca38e44",
      "closedAt": "2023-08-09T14:11:32Z",
      "mergedAt": "2023-08-09T14:11:32Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "e1b18bec2298693409335aab3ec82ffa74003c29"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85dThzd",
          "commit": {
            "abbreviatedOid": "be3ec90"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-07T14:01:49Z",
          "updatedAt": "2023-08-07T14:01:49Z",
          "comments": [
            {
              "originalPosition": 90,
              "body": "Does \"ignoring a token challenge\" mean the client treats the 401 as if it didn't have a valid WWW-Authenticate or just that it falls back to whatever the operation is for not having a token available (in the cases where this is different). Maybe this is left to each UA/system, but there might be some edges where issuance protocol failing is distinguishable from not supporting privacy pass at all (though maybe that distinction is fine?).",
              "createdAt": "2023-08-07T14:01:49Z",
              "updatedAt": "2023-08-07T14:01:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85dUMJb",
          "commit": {
            "abbreviatedOid": "be3ec90"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-07T15:08:22Z",
          "updatedAt": "2023-08-07T15:08:22Z",
          "comments": [
            {
              "originalPosition": 90,
              "body": "I'm not sure I understand this comment. I would think that ignoring the challenge is the same as a failure to produce a token for any reason, including, e.g., the challenge being invalid. Do you have a specific instance where falling back to default behavior is distinguishable from acting as if the challenge never arrived, and if so, how the text could be updated to reflect that?",
              "createdAt": "2023-08-07T15:08:22Z",
              "updatedAt": "2023-08-07T15:08:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85df05q",
          "commit": {
            "abbreviatedOid": "be3ec90"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-08-09T02:53:11Z",
          "updatedAt": "2023-08-09T02:55:02Z",
          "comments": [
            {
              "originalPosition": 90,
              "body": "The client ignoring means that no valid auth token is provided \u2014 you can't detect on the origin _why_ that is.",
              "createdAt": "2023-08-09T02:53:11Z",
              "updatedAt": "2023-08-09T02:55:02Z"
            },
            {
              "originalPosition": 60,
              "body": "```suggestion\r\nInstead, token authentication can be used in similar ways to existing CAPTCHA\r\nvalidation flows, wherein validation sometimes proceeds alongside useful work,\r\ne.g., when loading contents of a web page, but without the need for user interaction.\r\nIf issuance is taking a long time, an origin can fall back to another method\r\nof user validation.\r\n```",
              "createdAt": "2023-08-09T02:54:27Z",
              "updatedAt": "2023-08-09T02:55:02Z"
            }
          ]
        }
      ]
    },
    {
      "number": 428,
      "id": "PR_kwDODeTEy85XM6ha",
      "title": "Address Vyncke's feedback",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/428",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #427 ",
      "createdAt": "2023-08-04T14:14:52Z",
      "updatedAt": "2023-08-09T02:55:53Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "34880ed2867cc52339634176d72f6d884fa9cafb",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/vyncke-feedback",
      "headRefOid": "596949b23e3e5b0f34af987c874c1fe21f2ff3dc",
      "closedAt": "2023-08-09T02:55:53Z",
      "mergedAt": "2023-08-09T02:55:53Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "7eecc312b739f9f488f8272276273c2cc1a0f3dd"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85dTe5B",
          "commit": {
            "abbreviatedOid": "596949b"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-08-07T13:56:10Z",
          "updatedAt": "2023-08-07T13:56:10Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODeTEy85df1Ru",
          "commit": {
            "abbreviatedOid": "596949b"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-08-09T02:55:47Z",
          "updatedAt": "2023-08-09T02:55:47Z",
          "comments": []
        }
      ]
    },
    {
      "number": 429,
      "id": "PR_kwDODeTEy85XVeox",
      "title": "Address Lars' nits",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/429",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "See [the review](https://mailarchive.ietf.org/arch/msg/privacy-pass/v1SYZs-9DSmEI0HlMwOOaBfM_Yk/)",
      "createdAt": "2023-08-07T13:26:18Z",
      "updatedAt": "2023-08-09T02:56:32Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "34880ed2867cc52339634176d72f6d884fa9cafb",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/lars-nits",
      "headRefOid": "3df81eb90cd81ba8d069d7f5db140562716272da",
      "closedAt": "2023-08-09T02:56:32Z",
      "mergedAt": "2023-08-09T02:56:32Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "ba02428097fc736edfed9c8b322413fae8469254"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85dTeeN",
          "commit": {
            "abbreviatedOid": "3df81eb"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-08-07T13:55:21Z",
          "updatedAt": "2023-08-07T13:55:21Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODeTEy85df1Xt",
          "commit": {
            "abbreviatedOid": "3df81eb"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-08-09T02:56:25Z",
          "updatedAt": "2023-08-09T02:56:25Z",
          "comments": []
        }
      ]
    },
    {
      "number": 431,
      "id": "PR_kwDODeTEy85XVifg",
      "title": "No provisional registry use",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/431",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #430 ",
      "createdAt": "2023-08-07T13:36:04Z",
      "updatedAt": "2023-08-09T02:57:33Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "34880ed2867cc52339634176d72f6d884fa9cafb",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/registry-tweaks",
      "headRefOid": "701adc810c546ab0a8aa4937d2b50d734acdf2c5",
      "closedAt": "2023-08-09T02:57:32Z",
      "mergedAt": "2023-08-09T02:57:32Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "a2cf1096a791f9ef6cfcb537660f36c0f4e803a8"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85dTeIB",
          "commit": {
            "abbreviatedOid": "701adc8"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-08-07T13:54:39Z",
          "updatedAt": "2023-08-07T13:54:44Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "Wonder if we should have an extra line that implementers should not rely on this being compatible on the public internet (since other private use implementations may collide). Though might be implicit in the \"interoperability\" bit.",
              "createdAt": "2023-08-07T13:54:39Z",
              "updatedAt": "2023-08-07T13:54:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85dUK9K",
          "commit": {
            "abbreviatedOid": "701adc8"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-07T15:05:57Z",
          "updatedAt": "2023-08-07T15:05:57Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "Right, that's the intent of that sentence.",
              "createdAt": "2023-08-07T15:05:57Z",
              "updatedAt": "2023-08-07T15:05:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85df1g3",
          "commit": {
            "abbreviatedOid": "701adc8"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-08-09T02:57:28Z",
          "updatedAt": "2023-08-09T02:57:28Z",
          "comments": []
        }
      ]
    },
    {
      "number": 432,
      "id": "PR_kwDODeTEy85XX57_",
      "title": "SECDIR review",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/432",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #397\r\nCloses #398 \r\nCloses #399\r\nCloses #400\r\nCloses #401 \r\nCloses #402 \r\nCloses #403 \r\nCloses #404 \r\nCloses #405 \r\nCloses #406\r\nCloses #407 \r\nCloses #408 ",
      "createdAt": "2023-08-07T20:37:39Z",
      "updatedAt": "2023-08-09T14:36:32Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "34880ed2867cc52339634176d72f6d884fa9cafb",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/secdir-review",
      "headRefOid": "31dbc9ded2fc1d05cd0fccdd13ab9ffdd6073ef5",
      "closedAt": "2023-08-09T14:36:31Z",
      "mergedAt": "2023-08-09T14:36:31Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "faf4b83e43c82dd29f785980a6e5e9697bd685d5"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85df15t",
          "commit": {
            "abbreviatedOid": "792829d"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-09T03:00:06Z",
          "updatedAt": "2023-08-09T03:06:01Z",
          "comments": [
            {
              "originalPosition": 47,
              "body": "Does this really need to be a definition, since it only used once below?",
              "createdAt": "2023-08-09T03:01:27Z",
              "updatedAt": "2023-08-09T03:06:02Z"
            },
            {
              "originalPosition": 66,
              "body": "I don't think the request is necessarily a \"retried\" one \u2014 it's a new request with a new header in it. It's in reaction to the challenge, certainly, but I don't know if \"retried\" is quite right.",
              "createdAt": "2023-08-09T03:02:38Z",
              "updatedAt": "2023-08-09T03:06:02Z"
            },
            {
              "originalPosition": 47,
              "body": "If anything, let's move more of this text below where we mention the service.",
              "createdAt": "2023-08-09T03:05:45Z",
              "updatedAt": "2023-08-09T03:06:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85dhznt",
          "commit": {
            "abbreviatedOid": "792829d"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-09T09:32:57Z",
          "updatedAt": "2023-08-09T09:32:58Z",
          "comments": [
            {
              "originalPosition": 66,
              "body": "Hm, true, I suppose it doesn't need to be the exact same request. Will revert.",
              "createdAt": "2023-08-09T09:32:58Z",
              "updatedAt": "2023-08-09T09:32:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85dhzrL",
          "commit": {
            "abbreviatedOid": "792829d"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-09T09:33:05Z",
          "updatedAt": "2023-08-09T09:33:06Z",
          "comments": [
            {
              "originalPosition": 66,
              "body": "```suggestion\r\n6. If the Client has a token, it includes it in a subsequent request to\r\n```",
              "createdAt": "2023-08-09T09:33:05Z",
              "updatedAt": "2023-08-09T09:33:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85dh3WL",
          "commit": {
            "abbreviatedOid": "792829d"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-09T09:41:24Z",
          "updatedAt": "2023-08-09T09:41:25Z",
          "comments": [
            {
              "originalPosition": 47,
              "body": "Done!",
              "createdAt": "2023-08-09T09:41:24Z",
              "updatedAt": "2023-08-09T09:41:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85dj-RB",
          "commit": {
            "abbreviatedOid": "31dbc9d"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-08-09T14:16:03Z",
          "updatedAt": "2023-08-09T14:16:03Z",
          "comments": []
        }
      ]
    },
    {
      "number": 433,
      "id": "PR_kwDODeTEy85XjO32",
      "title": "Address Kline's feedback",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/433",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "auth-scheme"
      ],
      "body": "See [this feedback](https://mailarchive.ietf.org/arch/msg/privacy-pass/ZtsUBcgD5LtSvDID_xr7qDyebok/).",
      "createdAt": "2023-08-09T15:25:47Z",
      "updatedAt": "2023-08-09T16:45:42Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "19901996cc7fd7dcd110da0b705e71f285b7ced1",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/origin-exact-match",
      "headRefOid": "552619936f5779215ad1f9e3d6d059617857ee95",
      "closedAt": "2023-08-09T16:45:42Z",
      "mergedAt": "2023-08-09T16:45:42Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "f285124c0578b32bf204d0a224d683784efa5b87"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85dks8O",
          "commit": {
            "abbreviatedOid": "53f46f3"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-09T15:25:59Z",
          "updatedAt": "2023-08-09T15:25:59Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "This is just line wrapping.",
              "createdAt": "2023-08-09T15:25:59Z",
              "updatedAt": "2023-08-09T15:25:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85dlXMr",
          "commit": {
            "abbreviatedOid": "5526199"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-08-09T16:27:21Z",
          "updatedAt": "2023-08-09T16:27:22Z",
          "comments": []
        }
      ]
    },
    {
      "number": 434,
      "id": "PR_kwDODeTEy85Xocal",
      "title": " Add RFC9110 reference when parsing header with multiple challenges",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/434",
      "state": "MERGED",
      "author": "thibmeu",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "`WWW-Authenticate` specifies how to pass multiple challenge headers. This commit adds a reference to the specific section of the RFC to help implementers support multiple challenges, should these be with the same scheme `PrivateToken`, or a mix that Privacy Pass Auth should not break.\r\n\r\nThis PR also updates all md file permissions to `644`.",
      "createdAt": "2023-08-10T12:06:02Z",
      "updatedAt": "2023-08-10T15:27:51Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "f285124c0578b32bf204d0a224d683784efa5b87",
      "headRepository": null,
      "headRefName": "main",
      "headRefOid": "fbbdb6e3c4fdcfc0bcaea9fb309cad7d4e6c531c",
      "closedAt": "2023-08-10T15:27:50Z",
      "mergedAt": "2023-08-10T15:27:50Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "338dd2ade302b441430b411edab47a09fb5989bf"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85drtFv",
          "commit": {
            "abbreviatedOid": "fbbdb6e"
          },
          "author": "thibmeu",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-10T12:10:41Z",
          "updatedAt": "2023-08-10T12:10:41Z",
          "comments": [
            {
              "originalPosition": 1,
              "body": "for review: I'm not deleting this file, only changing permission from `755` to `644`. It shows as empty on GitHub due to the diff being empty.",
              "createdAt": "2023-08-10T12:10:41Z",
              "updatedAt": "2023-08-10T12:10:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85dsyGg",
          "commit": {
            "abbreviatedOid": "fbbdb6e"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-08-10T14:18:23Z",
          "updatedAt": "2023-08-10T14:18:23Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODeTEy85dtX7p",
          "commit": {
            "abbreviatedOid": "fbbdb6e"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-08-10T15:24:29Z",
          "updatedAt": "2023-08-10T15:24:29Z",
          "comments": []
        }
      ]
    },
    {
      "number": 435,
      "id": "PR_kwDODeTEy85YFu5C",
      "title": "Address PaulW's feedback",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/435",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "See [the corresponding review](https://mailarchive.ietf.org/arch/msg/privacy-pass/4aTAx2npIhhARoyC2OY8py95Mlk/) for more information. Not all comments were addressed at the discretion of the editors and implementers.",
      "createdAt": "2023-08-16T18:19:14Z",
      "updatedAt": "2023-08-16T19:45:03Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "338dd2ade302b441430b411edab47a09fb5989bf",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/paul-review",
      "headRefOid": "18e6efdd8c67676b6df46152ca6458e040804636",
      "closedAt": "2023-08-16T19:45:03Z",
      "mergedAt": "2023-08-16T19:45:03Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "b7ce36c238de5b391d104430c4c1216e816ee5ee"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85eQI8j",
          "commit": {
            "abbreviatedOid": "18e6efd"
          },
          "author": "paulwouters",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-08-16T19:32:07Z",
          "updatedAt": "2023-08-16T19:32:07Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODeTEy85eQNil",
          "commit": {
            "abbreviatedOid": "18e6efd"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-08-16T19:44:57Z",
          "updatedAt": "2023-08-16T19:44:57Z",
          "comments": []
        }
      ]
    },
    {
      "number": 459,
      "id": "PR_kwDODeTEy85ZGcaX",
      "title": "Some editorial suggestions",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/459",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "These are mostly mechanical in nature.",
      "createdAt": "2023-08-30T05:29:52Z",
      "updatedAt": "2023-08-31T18:21:12Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "b22fabfceecfd45a153fadfdfadbdd7e9666a334",
      "headRepository": "martinthomson/privacy-pass",
      "headRefName": "auth-scheme-editorial",
      "headRefOid": "41fbe33e30065a1854d90fef3a99e2d3fad84b47",
      "closedAt": "2023-08-31T18:21:12Z",
      "mergedAt": "2023-08-31T18:21:12Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "70d7e38d982a142db5c73a616909def4de5d0887"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85fsNu4",
          "commit": {
            "abbreviatedOid": "5e79615"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-08-31T18:20:14Z",
          "updatedAt": "2023-08-31T18:20:58Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "```suggestion\r\ntoken issuer and issuance protocol. Token challenges optionally include\r\none or both of: a redemption context (see {{context-construction}}), and\r\na list of associated origins. These optional values are then\r\nbe bound to the token that is issued.\r\n```",
              "createdAt": "2023-08-31T18:20:14Z",
              "updatedAt": "2023-08-31T18:20:58Z"
            }
          ]
        }
      ]
    },
    {
      "number": 460,
      "id": "PR_kwDODeTEy85ZQi2-",
      "title": "Adding @cloudflare/privacypass-ts Typescript implementation.",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/460",
      "state": "MERGED",
      "author": "armfazh",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Adding Typescript implementation developed by @thibmeu @cdrubin and @armfazh . \r\n\r\nIt is compliant with test vectors as in the Draft v11.\r\nCurrently only supports Blind-RSA type of tokens, but we are currently working on supporting VOPRF ones too.\r\nCode is already published at NPMJS",
      "createdAt": "2023-08-31T16:51:28Z",
      "updatedAt": "2023-08-31T18:01:52Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "b22fabfceecfd45a153fadfdfadbdd7e9666a334",
      "headRepository": "armfazh/base-drafts",
      "headRefName": "addpp-ts",
      "headRefOid": "c89502feb9ab019c00ba9be8be63c623b1d4e5c0",
      "closedAt": "2023-08-31T17:29:26Z",
      "mergedAt": "2023-08-31T17:29:26Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "796feb91cf69e7762be65a406b0ef5f3f9411327"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85frq8z",
          "commit": {
            "abbreviatedOid": "c89502f"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-08-31T17:29:22Z",
          "updatedAt": "2023-08-31T17:29:22Z",
          "comments": []
        }
      ]
    },
    {
      "number": 461,
      "id": "PR_kwDODeTEy85ZQuyi",
      "title": "Soften language about single-use",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/461",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "tfpauly"
      ],
      "labels": [
        "auth-scheme"
      ],
      "body": "Closes #437",
      "createdAt": "2023-08-31T17:28:43Z",
      "updatedAt": "2023-09-05T18:23:36Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "b22fabfceecfd45a153fadfdfadbdd7e9666a334",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "tfpauly-patch-23",
      "headRefOid": "a25db5cc27f90fec1d16d337a60a324bbc656315",
      "closedAt": "2023-09-05T18:23:35Z",
      "mergedAt": "2023-09-05T18:23:35Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "3d722804eb002389bd392b602a6c0d641675428d"
      },
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "@martinthomson please check",
          "createdAt": "2023-08-31T17:28:55Z",
          "updatedAt": "2023-08-31T17:28:55Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85fuFUF",
          "commit": {
            "abbreviatedOid": "aa28a28"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-08-31T23:51:23Z",
          "updatedAt": "2023-08-31T23:51:23Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODeTEy85gAfcj",
          "commit": {
            "abbreviatedOid": "aa28a28"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Approved pending suggestions.",
          "createdAt": "2023-09-05T10:32:05Z",
          "updatedAt": "2023-09-05T10:37:12Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "```suggestion\r\navailable, it presents the token to the origin ({{redemption}}). The process of\r\npresenting a token in response to a challenge is also referred to as \"spending\" a token.\r\n```",
              "createdAt": "2023-09-05T10:32:05Z",
              "updatedAt": "2023-09-05T10:37:12Z"
            },
            {
              "originalPosition": 23,
              "body": "```suggestion\r\nwill often present a particular \"PrivateToken\" only once. Origins can link multiple\r\ntransactions to the same client if that client spends the same token value more\r\nthan once. In deployment scenarios where origins send token challenges\r\n```",
              "createdAt": "2023-09-05T10:32:58Z",
              "updatedAt": "2023-09-05T10:37:12Z"
            },
            {
              "originalPosition": 23,
              "body": "Less passive, more active",
              "createdAt": "2023-09-05T10:33:05Z",
              "updatedAt": "2023-09-05T10:37:12Z"
            },
            {
              "originalPosition": 25,
              "body": "```suggestion\r\nthe same client. As such, origins ought to expect at most one unique token\r\nvalue, carried in one request, for each challenge.\r\n```\r\n\r\nThis is also true in cases where the client isn't challenged. The suggestion also places emphasis on the uniqueness of the token, rather than of the request, since that's what this whole paragraph is about.",
              "createdAt": "2023-09-05T10:37:03Z",
              "updatedAt": "2023-09-05T10:37:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85gChLi",
          "commit": {
            "abbreviatedOid": "6907cad"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-05T15:01:39Z",
          "updatedAt": "2023-09-05T15:01:40Z",
          "comments": [
            {
              "originalPosition": 30,
              "body": "```suggestion\r\nthan once. As such, origins ought to expect at most one unique token\r\nvalue, carried in one request, for each challenge.\r\n```",
              "createdAt": "2023-09-05T15:01:40Z",
              "updatedAt": "2023-09-05T15:01:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85gChVB",
          "commit": {
            "abbreviatedOid": "aa28a28"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-05T15:01:57Z",
          "updatedAt": "2023-09-05T15:01:57Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "Applied in a new commit",
              "createdAt": "2023-09-05T15:01:57Z",
              "updatedAt": "2023-09-05T15:01:57Z"
            }
          ]
        }
      ]
    },
    {
      "number": 462,
      "id": "PR_kwDODeTEy85ZQ3Lu",
      "title": "Challenges don't need to be unique",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/462",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "tfpauly"
      ],
      "labels": [
        "auth-scheme"
      ],
      "body": "Closes #442",
      "createdAt": "2023-08-31T17:44:10Z",
      "updatedAt": "2023-09-05T10:22:34Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "796feb91cf69e7762be65a406b0ef5f3f9411327",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "tfpauly-patch-24",
      "headRefOid": "081facc82317ca74bfe3e94fb078675d8bf9dd13",
      "closedAt": "2023-09-05T10:22:34Z",
      "mergedAt": "2023-09-05T10:22:34Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "44ced39ade797701dc329cdeccfe7afe9c26799c"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85gAbwP",
          "commit": {
            "abbreviatedOid": "081facc"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-09-05T10:22:29Z",
          "updatedAt": "2023-09-05T10:22:29Z",
          "comments": []
        }
      ]
    },
    {
      "number": 463,
      "id": "PR_kwDODeTEy85ZQ5Wf",
      "title": "Remove may ignore",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/463",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "tfpauly"
      ],
      "labels": [
        "auth-scheme"
      ],
      "body": "Closes #443",
      "createdAt": "2023-08-31T17:48:19Z",
      "updatedAt": "2023-09-05T10:30:17Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "796feb91cf69e7762be65a406b0ef5f3f9411327",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "tfpauly-patch-25",
      "headRefOid": "2358ad85e236a1654830332c8ecc125df917d229",
      "closedAt": "2023-09-05T10:30:17Z",
      "mergedAt": "2023-09-05T10:30:17Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "d69d95ac9caab3c94888f61fd5254dcb50ed5eaa"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85gAetZ",
          "commit": {
            "abbreviatedOid": "2358ad8"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-09-05T10:30:11Z",
          "updatedAt": "2023-09-05T10:30:11Z",
          "comments": []
        }
      ]
    },
    {
      "number": 464,
      "id": "PR_kwDODeTEy85ZQ6Q3",
      "title": "Must ignore unknown parameters",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/464",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "tfpauly"
      ],
      "labels": [
        "auth-scheme"
      ],
      "body": "Closes #444",
      "createdAt": "2023-08-31T17:49:41Z",
      "updatedAt": "2023-09-05T21:07:02Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "796feb91cf69e7762be65a406b0ef5f3f9411327",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "tfpauly-patch-26",
      "headRefOid": "321d37d457cfd999f387ff1f2f59fc241f20d329",
      "closedAt": "2023-09-05T21:07:02Z",
      "mergedAt": "2023-09-05T21:07:02Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "3fcbb8dc26296c89cd6c10ca0a846791ea296132"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85gAd2G",
          "commit": {
            "abbreviatedOid": "9f3a42e"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "I don't agree with this change. We've not yet sorted out how extensions will be negotiated and this might be overly restrictive.",
          "createdAt": "2023-09-05T10:27:58Z",
          "updatedAt": "2023-09-05T10:27:58Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODeTEy85gE0f7",
          "commit": {
            "abbreviatedOid": "9f3a42e"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-05T20:24:25Z",
          "updatedAt": "2023-09-05T20:24:26Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "```suggestion\r\nIssuance protocols MAY define other parameters, some of which might be required.\r\nClients MUST ignore parameters in challenges that are not defined for the issuance\r\nprotocol corresponding to the token type in the challenge.\r\n```",
              "createdAt": "2023-09-05T20:24:25Z",
              "updatedAt": "2023-09-05T20:24:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85gE0j0",
          "commit": {
            "abbreviatedOid": "321d37d"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-09-05T20:24:36Z",
          "updatedAt": "2023-09-05T20:24:36Z",
          "comments": []
        }
      ]
    },
    {
      "number": 465,
      "id": "PR_kwDODeTEy85ZQ_sX",
      "title": "Clarify double-spend state",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/465",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "tfpauly"
      ],
      "labels": [
        "auth-scheme"
      ],
      "body": "Closes #446",
      "createdAt": "2023-08-31T18:02:26Z",
      "updatedAt": "2023-09-05T20:31:55Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "796feb91cf69e7762be65a406b0ef5f3f9411327",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "tfpauly-patch-27",
      "headRefOid": "f254ec9f101cb8823f28575211097d7643467b1f",
      "closedAt": "2023-09-05T20:31:55Z",
      "mergedAt": "2023-09-05T20:31:55Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "985cbfcc0d3bcf6c5b39b13fb7776539ab4bf16a"
      },
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "The point here is to remove the reference to the \"request connection\", and just say \"you need to keep the double spend state along with your redemption context\", whatever that may be.",
          "createdAt": "2023-09-05T18:25:22Z",
          "updatedAt": "2023-09-05T18:25:22Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Right, but I don't think that resolves the linked issue.",
          "createdAt": "2023-09-05T18:46:57Z",
          "updatedAt": "2023-09-05T18:46:57Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85gAhy4",
          "commit": {
            "abbreviatedOid": "01482f0"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "This is a fine improvement, but I don't think it addresses Martin's original comment.",
          "createdAt": "2023-09-05T10:38:08Z",
          "updatedAt": "2023-09-05T10:39:39Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "```suggestion\r\nneeds to be stored and shared across all origin servers that can accept tokens until\r\n```",
              "createdAt": "2023-09-05T10:38:09Z",
              "updatedAt": "2023-09-05T10:42:45Z"
            },
            {
              "originalPosition": 16,
              "body": "```suggestion\r\ndouble spend state only needs to be stored across the set of origin servers that will\r\n```",
              "createdAt": "2023-09-05T10:39:01Z",
              "updatedAt": "2023-09-05T10:39:39Z"
            }
          ]
        }
      ]
    },
    {
      "number": 466,
      "id": "PR_kwDODeTEy85ZRFVI",
      "title": "Clarify dropping tokens on network change",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/466",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "tfpauly"
      ],
      "labels": [
        "auth-scheme"
      ],
      "body": "Closes #456",
      "createdAt": "2023-08-31T18:18:59Z",
      "updatedAt": "2023-09-05T10:29:31Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "796feb91cf69e7762be65a406b0ef5f3f9411327",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "tfpauly-patch-28",
      "headRefOid": "59362ab87312450cc8a79d97bd2731bc3f3e51cf",
      "closedAt": "2023-09-05T10:29:31Z",
      "mergedAt": "2023-09-05T10:29:31Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "23a8d36fd01683938d13f471c44e7fde7d7a9dc2"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85gAeae",
          "commit": {
            "abbreviatedOid": "59362ab"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-09-05T10:29:26Z",
          "updatedAt": "2023-09-05T10:29:26Z",
          "comments": []
        }
      ]
    },
    {
      "number": 467,
      "id": "PR_kwDODeTEy85ZRGsM",
      "title": "Augment -> delay",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/467",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #457",
      "createdAt": "2023-08-31T18:22:53Z",
      "updatedAt": "2023-08-31T18:27:13Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "70d7e38d982a142db5c73a616909def4de5d0887",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "tfpauly-patch-29",
      "headRefOid": "e725afcd87f9ac399d7b5b8fa92871aa663bf29b",
      "closedAt": "2023-08-31T18:27:13Z",
      "mergedAt": "2023-08-31T18:27:13Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "fbacabafaf8e25f59d24a0b761032840045d83e5"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 468,
      "id": "PR_kwDODeTEy85ZRILL",
      "title": "Add randomness reference",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/468",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #455",
      "createdAt": "2023-08-31T18:27:16Z",
      "updatedAt": "2023-09-05T10:22:58Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "fbacabafaf8e25f59d24a0b761032840045d83e5",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "tfpauly-patch-30",
      "headRefOid": "0120cc4916f9c2965c15c4fd3f7ed495a77fe7b3",
      "closedAt": "2023-09-05T10:22:58Z",
      "mergedAt": "2023-09-05T10:22:58Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "8f33c918f22d3c113252291d20bfd7e85b79e430"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85gAb52",
          "commit": {
            "abbreviatedOid": "0120cc4"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-09-05T10:22:53Z",
          "updatedAt": "2023-09-05T10:22:53Z",
          "comments": []
        }
      ]
    },
    {
      "number": 469,
      "id": "PR_kwDODeTEy85Zlp2b",
      "title": "Remove Private Use Values",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/469",
      "state": "MERGED",
      "author": "smhendrickson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "To address #451",
      "createdAt": "2023-09-05T15:47:28Z",
      "updatedAt": "2023-09-05T20:48:52Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "d69d95ac9caab3c94888f61fd5254dcb50ed5eaa",
      "headRepository": "smhendrickson/base-drafts",
      "headRefName": "patch-3",
      "headRefOid": "2fb0ca5bcdf5a8873942a6c104ce6712959592c8",
      "closedAt": "2023-09-05T20:48:52Z",
      "mergedAt": "2023-09-05T20:48:51Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "7cf48960d60ec46e8cc8d267c3172b3ffeae8a3e"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85gEDCj",
          "commit": {
            "abbreviatedOid": "2fb0ca5"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-09-05T18:16:11Z",
          "updatedAt": "2023-09-05T18:16:11Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODeTEy85gEFgf",
          "commit": {
            "abbreviatedOid": "2fb0ca5"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-09-05T18:22:42Z",
          "updatedAt": "2023-09-05T18:22:42Z",
          "comments": []
        }
      ]
    },
    {
      "number": 470,
      "id": "PR_kwDODeTEy85ZnPaP",
      "title": "Update expert review requirements",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/470",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #452",
      "createdAt": "2023-09-05T20:56:08Z",
      "updatedAt": "2023-09-06T14:13:53Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "7cf48960d60ec46e8cc8d267c3172b3ffeae8a3e",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "tfpauly-patch-31",
      "headRefOid": "ee3925979cbae17b0f60528e0776c8624db1906b",
      "closedAt": "2023-09-06T14:13:52Z",
      "mergedAt": "2023-09-06T14:13:52Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "fc0c67fc243e96f1ef8757459d50042729af915e"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85gFA97",
          "commit": {
            "abbreviatedOid": "ee39259"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-09-05T21:01:41Z",
          "updatedAt": "2023-09-05T21:01:41Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODeTEy85gK0zp",
          "commit": {
            "abbreviatedOid": "ee39259"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-09-06T14:13:47Z",
          "updatedAt": "2023-09-06T14:13:47Z",
          "comments": []
        }
      ]
    },
    {
      "number": 471,
      "id": "PR_kwDODeTEy85ZnRBG",
      "title": "Fix formatting for HTTP examples.",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/471",
      "state": "MERGED",
      "author": "dvorak42",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "- Fix figure line length (set to 69 to match output limits).\r\n- Note use of obs-fold is just for presentation.\r\n\r\nFixes #436 and #436.",
      "createdAt": "2023-09-05T21:00:30Z",
      "updatedAt": "2023-09-05T21:05:55Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "7cf48960d60ec46e8cc8d267c3172b3ffeae8a3e",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "fix-auth-figures",
      "headRefOid": "087cbc676f273c7e9543504330c5746b6a2b9ecc",
      "closedAt": "2023-09-05T21:05:55Z",
      "mergedAt": "2023-09-05T21:05:55Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "80a54c9a89338f4d53e2617a3b2397f7e9ca061d"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85gFCMQ",
          "commit": {
            "abbreviatedOid": "087cbc6"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-09-05T21:05:44Z",
          "updatedAt": "2023-09-05T21:05:44Z",
          "comments": []
        }
      ]
    },
    {
      "number": 474,
      "id": "PR_kwDODeTEy85Zs_yw",
      "title": "Replace \"User Interaction\" With Client/Origin Behavior",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/474",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "tfpauly"
      ],
      "labels": [
        "auth-scheme"
      ],
      "body": "Closes #445 \r\nCloses #448 \r\nCloses #450",
      "createdAt": "2023-09-06T16:45:38Z",
      "updatedAt": "2023-09-08T15:14:45Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "fc0c67fc243e96f1ef8757459d50042729af915e",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "tfpauly-patch-32",
      "headRefOid": "84b36c0f4be21eb5707716919d5be0f7d66524c8",
      "closedAt": "2023-09-08T15:14:45Z",
      "mergedAt": "2023-09-08T15:14:45Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "444d08daf5ec0c8a21cc44feab9cd606327fb808"
      },
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "@martinthomson please check to see if this is more in line with what you were thinking",
          "createdAt": "2023-09-06T16:46:03Z",
          "updatedAt": "2023-09-06T16:46:03Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85gOLkN",
          "commit": {
            "abbreviatedOid": "e311664"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "Still not clear about the resolution to #450.  But this is a pretty significant improvement.",
          "createdAt": "2023-09-06T22:55:27Z",
          "updatedAt": "2023-09-06T23:18:32Z",
          "comments": [
            {
              "originalPosition": 108,
              "body": "As I mentioned in one of the issues, ignoring a challenge is not really an option if the challenge is attached to a denial (a 4xx).  If the client wanted to obtain a resource and got a 4xx with a challenge, that's going to be interpreted as a terminal error condition if it cannot obtain a token.  If there is a choice, it's [Hobson's](https://en.wikipedia.org/wiki/Hobson%27s_choice).\r\n\r\nSo I still don't know what \"ignore\" means in practice here and this doesn't really explain.",
              "createdAt": "2023-09-06T22:55:27Z",
              "updatedAt": "2023-09-06T23:18:32Z"
            },
            {
              "originalPosition": 156,
              "body": "```suggestion\r\ntypes (defined in {{token-types}}), with some non-trivial probability.\r\n```\r\n\r\np=0.000001 is probably not going to have the effect you intended.",
              "createdAt": "2023-09-06T22:58:12Z",
              "updatedAt": "2023-09-06T23:18:32Z"
            },
            {
              "originalPosition": 160,
              "body": "I'm really struggling with the incentive structure that surrounds this \"SHOULD\".  It almost reads like an [OUGHT TO](https://datatracker.ietf.org/doc/html/rfc6919#section-4).",
              "createdAt": "2023-09-06T23:07:22Z",
              "updatedAt": "2023-09-06T23:18:32Z"
            },
            {
              "originalPosition": 116,
              "body": "Reading this, I am reminded that it the potential for token hoarding and trading also produces a desire to rate limit issuance.  I went looking for something in the architecture draft and came up short.  The best I could do was [Section 7.1](https://datatracker.ietf.org/doc/html/draft-ietf-privacypass-architecture#section-7.1).  Is that worth spending some text on?",
              "createdAt": "2023-09-06T23:17:02Z",
              "updatedAt": "2023-09-06T23:18:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85gOTx3",
          "commit": {
            "abbreviatedOid": "e311664"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-06T23:46:53Z",
          "updatedAt": "2023-09-06T23:46:54Z",
          "comments": [
            {
              "originalPosition": 108,
              "body": "Another way to put this is \"if you are a client that can only sometimes actually get a token, even in cases where you _could_ get a token, act as if you can't\".\r\n\r\nVery practically speaking, if you're getting a challenge from a captcha provider, and you'll only sometimes reply (for example on macOS and iOS we only allow responding if you're actually in the foreground running app, and if you haven't gone over some rate limit for number of tokens in a given period of time), the client can choose to act as if it doesn't have a token, and thus the user would occasionally see a captcha. That's a legitimate choice to make, for these case where the services don't rely on receiving tokens.",
              "createdAt": "2023-09-06T23:46:53Z",
              "updatedAt": "2023-09-06T23:46:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85gOTzE",
          "commit": {
            "abbreviatedOid": "e311664"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-06T23:47:01Z",
          "updatedAt": "2023-09-06T23:47:01Z",
          "comments": [
            {
              "originalPosition": 156,
              "body": "Agreed.",
              "createdAt": "2023-09-06T23:47:01Z",
              "updatedAt": "2023-09-06T23:47:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85gOUDL",
          "commit": {
            "abbreviatedOid": "0026859"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-06T23:48:49Z",
          "updatedAt": "2023-09-06T23:49:09Z",
          "comments": [
            {
              "originalPosition": 107,
              "body": "```suggestion\r\nnon-trivial probability. See {{Section 5.1 of ARCHITECTURE}} for further considerations\r\n```",
              "createdAt": "2023-09-06T23:48:49Z",
              "updatedAt": "2023-09-06T23:49:09Z"
            },
            {
              "originalPosition": 160,
              "body": "```suggestion\r\nchoose to not challenge clients for tokens with some non-trivial probability.\r\n```",
              "createdAt": "2023-09-06T23:49:06Z",
              "updatedAt": "2023-09-06T23:49:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85gP6rb",
          "commit": {
            "abbreviatedOid": "e311664"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-07T07:44:19Z",
          "updatedAt": "2023-09-07T07:44:20Z",
          "comments": [
            {
              "originalPosition": 108,
              "body": "What does that look like in practice though?  `Authorization: PrivateToken \ud83d\ude45\" ?",
              "createdAt": "2023-09-07T07:44:19Z",
              "updatedAt": "2023-09-07T07:44:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85gRZMB",
          "commit": {
            "abbreviatedOid": "e311664"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-07T10:59:09Z",
          "updatedAt": "2023-09-07T10:59:10Z",
          "comments": [
            {
              "originalPosition": 108,
              "body": "It means you wouldn't send any authorization header, i.e., it's as if you were never challenged in the first place.",
              "createdAt": "2023-09-07T10:59:09Z",
              "updatedAt": "2023-09-07T10:59:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85gSLh7",
          "commit": {
            "abbreviatedOid": "d3d1a8e"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-07T13:02:19Z",
          "updatedAt": "2023-09-07T13:02:19Z",
          "comments": [
            {
              "originalPosition": 108,
              "body": "Right, the client just doesn't make any requests that include a token. Do what a client would do that doesn't even implement the auth scheme. ",
              "createdAt": "2023-09-07T13:02:19Z",
              "updatedAt": "2023-09-07T13:02:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85gR2mX",
          "commit": {
            "abbreviatedOid": "d3d1a8e"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-09-07T12:15:31Z",
          "updatedAt": "2023-09-07T14:12:09Z",
          "comments": [
            {
              "originalPosition": 82,
              "body": "```suggestion\r\n- Whether to redeem a previously issued and cached token, or redeem a token freshly issued from the issuance protocol.\r\n```",
              "createdAt": "2023-09-07T12:15:31Z",
              "updatedAt": "2023-09-07T14:12:09Z"
            },
            {
              "originalPosition": 95,
              "body": "```suggestion\r\nspecific user credential information, could use tokens that are based on attesting user\r\n```",
              "createdAt": "2023-09-07T12:17:45Z",
              "updatedAt": "2023-09-07T14:12:09Z"
            },
            {
              "originalPosition": 100,
              "body": "```suggestion\r\nMany other use cases for Privacy Pass tokens involve open services that must work\r\nwith any client, including those that either cannot redeem tokens, or can only sometimes redeem\r\n```",
              "createdAt": "2023-09-07T12:18:56Z",
              "updatedAt": "2023-09-07T14:12:09Z"
            },
            {
              "originalPosition": 104,
              "body": "```suggestion\r\npresenting CAPTCHAs to users. In such use cases, services will regularly encounter\r\nclients that cannot redeem a token or choose not to. In order to mitigate the risk\r\n```",
              "createdAt": "2023-09-07T12:21:56Z",
              "updatedAt": "2023-09-07T14:12:09Z"
            },
            {
              "originalPosition": 106,
              "body": "```suggestion\r\nof these services relying on always receiving tokens, clients that are capable of\r\nredeeming tokens can ignore token challenges (and thus not redeem a token on\r\na subsequent request) with some\r\n```",
              "createdAt": "2023-09-07T12:22:26Z",
              "updatedAt": "2023-09-07T14:12:09Z"
            },
            {
              "originalPosition": 116,
              "body": "Done: https://github.com/ietf-wg-privacypass/base-drafts/pull/475",
              "createdAt": "2023-09-07T12:32:21Z",
              "updatedAt": "2023-09-07T14:12:10Z"
            },
            {
              "originalPosition": 131,
              "body": "```suggestion\r\non token caching. Regardless of how the choice is made, it SHOULD be done in a\r\nconsistent manner to ensure that the choice does not reveal information about the\r\nspecific client; see {{Section 6.2 of ARCHITECTURE}} for more details on the privacy\r\nimplications of issuance consistency.\r\n```",
              "createdAt": "2023-09-07T12:34:58Z",
              "updatedAt": "2023-09-07T14:12:09Z"
            },
            {
              "originalPosition": 144,
              "body": "```suggestion\r\nfrom using cached tokens, and thus can add more delay before the client\r\n```",
              "createdAt": "2023-09-07T12:36:30Z",
              "updatedAt": "2023-09-07T14:12:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85gS7Pp",
          "commit": {
            "abbreviatedOid": "e311664"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-07T14:21:53Z",
          "updatedAt": "2023-09-07T14:21:54Z",
          "comments": [
            {
              "originalPosition": 108,
              "body": "What would change such that the client would expect a different outcome?  See also https://quoteinvestigator.com/2017/03/23/same/ ",
              "createdAt": "2023-09-07T14:21:53Z",
              "updatedAt": "2023-09-07T14:21:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85gTtsL",
          "commit": {
            "abbreviatedOid": "e311664"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-07T16:01:30Z",
          "updatedAt": "2023-09-07T16:01:31Z",
          "comments": [
            {
              "originalPosition": 108,
              "body": "The client would not issue a new request at all. That is what a client does that doesn't implement the auth scheme. I never said the client would issue the same request again.",
              "createdAt": "2023-09-07T16:01:31Z",
              "updatedAt": "2023-09-07T16:01:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85gUNQc",
          "commit": {
            "abbreviatedOid": "e71bcd2"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-07T17:11:49Z",
          "updatedAt": "2023-09-07T17:11:50Z",
          "comments": [
            {
              "originalPosition": 116,
              "body": "Marking as resolved since we now have text on that",
              "createdAt": "2023-09-07T17:11:50Z",
              "updatedAt": "2023-09-07T17:11:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85gUPKv",
          "commit": {
            "abbreviatedOid": "e71bcd2"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-07T17:15:18Z",
          "updatedAt": "2023-09-07T17:15:18Z",
          "comments": [
            {
              "originalPosition": 160,
              "body": "```suggestion\r\nAdditionally, for deployments where tokens are not required (such as when tokens\r\nare used as a way to avoiding showing CAPTCHAs), origins SHOULD randomly\u2028\r\nchoose to not challenge clients for tokens with some non-trivial probability.\r\nThis helps origins ensure that their behavior for handling clients that cannot\r\nredeem tokens is maintained and exercised consistently.\r\n```\r\n\r\nModifying the text here to explain. In the CAPTCHA scenario, the CAPTCHA providers already often do some amount of \"probing\" anyway to keep measuring the background fraud rates, and will choose to show CAPTCHAs instead of getting tokens for some small percentage of the population.",
              "createdAt": "2023-09-07T17:15:18Z",
              "updatedAt": "2023-09-07T17:15:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85gUP3h",
          "commit": {
            "abbreviatedOid": "1f4ccac"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-07T17:17:25Z",
          "updatedAt": "2023-09-07T17:17:26Z",
          "comments": [
            {
              "originalPosition": 107,
              "body": "```suggestion\r\nredeeming tokens can ignore token challenges (and instead behave as if they were a client\r\nthat either doesn't support redeeming tokens or is unable to generate a new token, by not\r\nsending a new request that contains a token to redeem) with some\r\nnon-trivial probability. See {{Section 5.1 of ARCHITECTURE}} for further considerations\r\non avoiding discriminatory behavior across clients when using Privacy Pass tokens.\r\n```",
              "createdAt": "2023-09-07T17:17:25Z",
              "updatedAt": "2023-09-07T17:17:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85gUQJZ",
          "commit": {
            "abbreviatedOid": "e311664"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-07T17:18:13Z",
          "updatedAt": "2023-09-07T17:18:13Z",
          "comments": [
            {
              "originalPosition": 108,
              "body": "It is now spelled out:\r\n```\r\ncan ignore token challenges (and instead behave as if they were a client\r\nthat either doesn't support redeeming tokens or is unable to generate a new token, by not\r\nsending a new request that contains a token to redeem) with some\r\nnon-trivial probability.\r\n```",
              "createdAt": "2023-09-07T17:18:13Z",
              "updatedAt": "2023-09-07T17:18:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85gUbBC",
          "commit": {
            "abbreviatedOid": "84b36c0"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-09-07T17:49:49Z",
          "updatedAt": "2023-09-07T17:49:49Z",
          "comments": []
        }
      ]
    },
    {
      "number": 475,
      "id": "PR_kwDODeTEy85Zxxyk",
      "title": "Add more text around hoarding",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/475",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-09-07T12:32:15Z",
      "updatedAt": "2023-09-07T17:09:21Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "fc0c67fc243e96f1ef8757459d50042729af915e",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "chris-wood-patch-4",
      "headRefOid": "58af9d657cec305a2960d4949ba391c1d489e5a6",
      "closedAt": "2023-09-07T17:09:21Z",
      "mergedAt": "2023-09-07T17:09:21Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "5a5bc654fd0c3a51f66054d0f9edf72487aecc08"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85gULrw",
          "commit": {
            "abbreviatedOid": "58af9d6"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-09-07T17:09:16Z",
          "updatedAt": "2023-09-07T17:09:16Z",
          "comments": []
        }
      ]
    },
    {
      "number": 476,
      "id": "PR_kwDODeTEy85ZzgJz",
      "title": "Normative reference to ARCH",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/476",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "tfpauly"
      ],
      "labels": [
        "auth-scheme"
      ],
      "body": "Closes #473",
      "createdAt": "2023-09-07T17:21:14Z",
      "updatedAt": "2023-09-08T15:14:56Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "5a5bc654fd0c3a51f66054d0f9edf72487aecc08",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "tfpauly-patch-33",
      "headRefOid": "8f9694a65d20a0cb9fca2cb4be7a83c62b27e090",
      "closedAt": "2023-09-08T15:14:56Z",
      "mergedAt": "2023-09-08T15:14:56Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "96ea9ae322bdda4f8f853724dbe9d61ba5155929"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85gZCh9",
          "commit": {
            "abbreviatedOid": "8f9694a"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-09-08T10:35:58Z",
          "updatedAt": "2023-09-08T10:35:58Z",
          "comments": []
        }
      ]
    },
    {
      "number": 477,
      "id": "PR_kwDODeTEy85Zzh5g",
      "title": "Clarify server name formats in issuer_name and origin_info",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/477",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "tfpauly"
      ],
      "labels": [
        "auth-scheme"
      ],
      "body": "Closes #440",
      "createdAt": "2023-09-07T17:28:06Z",
      "updatedAt": "2023-09-12T19:16:51Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "5a5bc654fd0c3a51f66054d0f9edf72487aecc08",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "tfpauly-patch-34",
      "headRefOid": "8dce42a24af62041b1bcbdc4c24633cfcaece490",
      "closedAt": "2023-09-12T19:16:51Z",
      "mergedAt": "2023-09-12T19:16:51Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "c1bc46003b753aaa25fdd107a040ba191898ce14"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85gtDua",
          "commit": {
            "abbreviatedOid": "da62428"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-09-12T14:39:46Z",
          "updatedAt": "2023-09-12T14:41:00Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "I think this would read better if we put this description in the terminology section and then referenced it in these two spots. ",
              "createdAt": "2023-09-12T14:39:46Z",
              "updatedAt": "2023-09-12T14:41:00Z"
            },
            {
              "originalPosition": 33,
              "body": "```suggestion\r\n\"issuer.example.com\" or \"issuer.example.com:8443\", but not \"issuer@example.com\".\r\n```",
              "createdAt": "2023-09-12T14:40:28Z",
              "updatedAt": "2023-09-12T14:41:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85gt8Z2",
          "commit": {
            "abbreviatedOid": "da62428"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-12T16:26:02Z",
          "updatedAt": "2023-09-12T16:26:03Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "@chris-wood I tried that, but it felt awkward in terminology.\r\n\r\nI've now updated the sections for challenges and redemption to include more subsections, and gave this its own subsection to refer to. I think this should make it cleaner to read. Thoughts?",
              "createdAt": "2023-09-12T16:26:02Z",
              "updatedAt": "2023-09-12T16:26:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85gt9J8",
          "commit": {
            "abbreviatedOid": "da62428"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-12T16:27:51Z",
          "updatedAt": "2023-09-12T16:27:51Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "See https://ietf-wg-privacypass.github.io/base-drafts/tfpauly-patch-34/draft-ietf-privacypass-auth-scheme.html",
              "createdAt": "2023-09-12T16:27:51Z",
              "updatedAt": "2023-09-12T16:27:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85gvA28",
          "commit": {
            "abbreviatedOid": "da62428"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-12T19:04:10Z",
          "updatedAt": "2023-09-12T19:04:10Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "Love it!",
              "createdAt": "2023-09-12T19:04:10Z",
              "updatedAt": "2023-09-12T19:04:10Z"
            }
          ]
        }
      ]
    },
    {
      "number": 478,
      "id": "PR_kwDODeTEy85aI4cc",
      "title": "Structure the security considerations",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/478",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #453",
      "createdAt": "2023-09-12T14:47:36Z",
      "updatedAt": "2023-09-12T19:20:27Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "96ea9ae322bdda4f8f853724dbe9d61ba5155929",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/structure-sec-considerations",
      "headRefOid": "e2c488132fe4c389a25a41fbfbf0129643d0dcab",
      "closedAt": "2023-09-12T19:20:27Z",
      "mergedAt": "2023-09-12T19:20:27Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "7162fa23cc2b2520f634957a899919c5a0fb65a9"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85gvFds",
          "commit": {
            "abbreviatedOid": "25fc9c0"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-09-12T19:17:46Z",
          "updatedAt": "2023-09-12T19:18:11Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "Are there places where we state otherwise? Or can we just say \"all...\"",
              "createdAt": "2023-09-12T19:17:46Z",
              "updatedAt": "2023-09-12T19:18:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85gvGSp",
          "commit": {
            "abbreviatedOid": "25fc9c0"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-12T19:20:09Z",
          "updatedAt": "2023-09-12T19:20:09Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "Sort of... when we talk about how to construct the redemption context, we say it can be random, but can also be something else. We are probably fine without the precondition though, so I'll just drop it.",
              "createdAt": "2023-09-12T19:20:09Z",
              "updatedAt": "2023-09-12T19:20:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85gvGUw",
          "commit": {
            "abbreviatedOid": "25fc9c0"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-12T19:20:14Z",
          "updatedAt": "2023-09-12T19:20:14Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "```suggestion\r\nAll random values in the challenge and token MUST be\r\n```",
              "createdAt": "2023-09-12T19:20:14Z",
              "updatedAt": "2023-09-12T19:20:14Z"
            }
          ]
        }
      ]
    },
    {
      "number": 479,
      "id": "PR_kwDODeTEy85aJC5y",
      "title": "Add overview content to token challenge section",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/479",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #438",
      "createdAt": "2023-09-12T15:13:02Z",
      "updatedAt": "2023-09-12T19:31:06Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "96ea9ae322bdda4f8f853724dbe9d61ba5155929",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/token-challenge-map",
      "headRefOid": "9ce5e06673a7c0914155cc51517267cc99161bf8",
      "closedAt": "2023-09-12T19:31:06Z",
      "mergedAt": "2023-09-12T19:31:06Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "845820ab3d7de7ba6c782093b75ad709636ae8c3"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85gvGOj",
          "commit": {
            "abbreviatedOid": "e6fb874"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-12T19:19:55Z",
          "updatedAt": "2023-09-12T19:21:24Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "Not all parameters to the auth scheme will necessarily be base64... I wonder if we shouldn't go into the key-value bit, since that's normal to an auth scheme.",
              "createdAt": "2023-09-12T19:19:55Z",
              "updatedAt": "2023-09-12T19:21:24Z"
            },
            {
              "originalPosition": 3,
              "body": "I wonder if we should mention \"(or \"Proxy-Authenticate\")",
              "createdAt": "2023-09-12T19:20:47Z",
              "updatedAt": "2023-09-12T19:21:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85gvHAW",
          "commit": {
            "abbreviatedOid": "e6fb874"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-12T19:22:07Z",
          "updatedAt": "2023-09-12T19:22:07Z",
          "comments": [
            {
              "originalPosition": 3,
              "body": "That seems like an increase in scope, so if we do we'd probably want to run it past the list.",
              "createdAt": "2023-09-12T19:22:07Z",
              "updatedAt": "2023-09-12T19:22:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85gvH1D",
          "commit": {
            "abbreviatedOid": "e6fb874"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-12T19:23:17Z",
          "updatedAt": "2023-09-12T19:23:17Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "```suggestion\r\nwith the \"PrivateToken\" scheme. This field is a series parameters, each a key-value pair. There are two mandatory parameters:\r\n```",
              "createdAt": "2023-09-12T19:23:17Z",
              "updatedAt": "2023-09-12T19:23:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85gvH72",
          "commit": {
            "abbreviatedOid": "e6fb874"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-12T19:23:36Z",
          "updatedAt": "2023-09-12T19:23:36Z",
          "comments": [
            {
              "originalPosition": 3,
              "body": "Yeah we don't necessarily need to mention that \u2014 it was just alluded to in one of martin's comments",
              "createdAt": "2023-09-12T19:23:36Z",
              "updatedAt": "2023-09-12T19:23:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85gvIK2",
          "commit": {
            "abbreviatedOid": "af49dba"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-12T19:24:19Z",
          "updatedAt": "2023-09-12T19:26:04Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "```suggestion\r\nwith the \"PrivateToken\" scheme. This authentication scheme has two mandatory parameters:\r\none containing a token challenge and another containing the token-key used for\r\n```",
              "createdAt": "2023-09-12T19:24:19Z",
              "updatedAt": "2023-09-12T19:26:04Z"
            },
            {
              "originalPosition": 8,
              "body": "Since this is just part of how auth schemes work...",
              "createdAt": "2023-09-12T19:25:47Z",
              "updatedAt": "2023-09-12T19:26:04Z"
            },
            {
              "originalPosition": 10,
              "body": "The challenge parameter isn't repeated, the entire authentication challenge with all parameters is repeated. Again, this is just how auth schemes work.\r\n\r\n```suggestion\r\nproducing (and verifying) a corresponding token.\r\n```",
              "createdAt": "2023-09-12T19:25:55Z",
              "updatedAt": "2023-09-12T19:26:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85gvJVv",
          "commit": {
            "abbreviatedOid": "2738c3b"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-12T19:27:50Z",
          "updatedAt": "2023-09-12T19:27:50Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "Right, right.",
              "createdAt": "2023-09-12T19:27:50Z",
              "updatedAt": "2023-09-12T19:27:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85gvJt4",
          "commit": {
            "abbreviatedOid": "9ce5e06"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-09-12T19:29:00Z",
          "updatedAt": "2023-09-12T19:29:00Z",
          "comments": []
        }
      ]
    },
    {
      "number": 480,
      "id": "PR_kwDODeTEy85aKVRH",
      "title": "Make reference to the PrivateToken object",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/480",
      "state": "CLOSED",
      "author": "armfazh",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "The `Authorization:` header contains a `Token` object, as well as the `WWW-Authenticate:` header contains a `PrivateToken` object.\r\n",
      "createdAt": "2023-09-12T19:14:57Z",
      "updatedAt": "2023-09-12T19:41:30Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "96ea9ae322bdda4f8f853724dbe9d61ba5155929",
      "headRepository": "armfazh/base-drafts",
      "headRefName": "patch-2",
      "headRefOid": "3bd058371108cecc3839006bc77a12f376bad55c",
      "closedAt": "2023-09-12T19:41:00Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "armfazh",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> Hmm, this isn't quite right. The challenge header contains a TokenChallenge.\r\n\r\nBut it is wrapped in a `PrivateToken` object, isn't it?\r\n\r\n> \"PrivateToken\" is the auth scheme.\r\n\r\nCorrect, this is why I'm proposing changes to the auth-scheme document.\r\n",
          "createdAt": "2023-09-12T19:31:42Z",
          "updatedAt": "2023-09-12T19:31:42Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "@armfazh there is no such thing as a \"PrivateToken\" object defined here. It's just an auth scheme name, not an object or struct.",
          "createdAt": "2023-09-12T19:33:38Z",
          "updatedAt": "2023-09-12T19:33:38Z"
        },
        {
          "author": "armfazh",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Ok, I think I understand it better, and just to clarify.\r\n\r\nThe authentication scheme is called `PrivateToken` and during the initial request looks like:\r\n```\r\nWWW-Authenticate:\r\n  PrivateToken challenge=\"abc...\", token-key=\"123...\"\r\n                          ^ \r\n                          | this is the encoded TokenChallenge struct\r\n```\r\n\r\nAnd during redemption, client sends:\r\n```\r\nAuthorization: PrivateToken token=\"abc...\"\r\n                                   ^\r\n                                   | this is the Token struct \r\n```\r\n\r\nSo the diagram is not exactly showing the auth scheme, but instead the messages that are send through it. So, it's a simplified version.\r\n\r\n\r\n",
          "createdAt": "2023-09-12T19:41:00Z",
          "updatedAt": "2023-09-12T19:41:00Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "That's right!",
          "createdAt": "2023-09-12T19:41:29Z",
          "updatedAt": "2023-09-12T19:41:29Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85gvGt7",
          "commit": {
            "abbreviatedOid": "3bd0583"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Hmm, this isn't quite right. The challenge header contains a TokenChallenge.",
          "createdAt": "2023-09-12T19:21:24Z",
          "updatedAt": "2023-09-12T19:21:24Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODeTEy85gvHug",
          "commit": {
            "abbreviatedOid": "3bd0583"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "\"PrivateToken\" is the auth scheme. The contents of the challenge are a \"TokenChallenge\" struct, and the redemption contains a \"Token\" struct.",
          "createdAt": "2023-09-12T19:23:00Z",
          "updatedAt": "2023-09-12T19:23:00Z",
          "comments": []
        }
      ]
    },
    {
      "number": 481,
      "id": "PR_kwDODeTEy85aKc6g",
      "title": "Clarify replay and reflect",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/481",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #454 ",
      "createdAt": "2023-09-12T19:40:32Z",
      "updatedAt": "2023-09-12T19:55:27Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "845820ab3d7de7ba6c782093b75ad709636ae8c3",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/clarify-replay",
      "headRefOid": "6e1b443c8a076a1e84489106e7267bd59a66cba4",
      "closedAt": "2023-09-12T19:55:27Z",
      "mergedAt": "2023-09-12T19:55:27Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "b2836b4d3e04b38b540da1cc1e92feaa3d4144fd"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85gvOTG",
          "commit": {
            "abbreviatedOid": "c904875"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-12T19:41:52Z",
          "updatedAt": "2023-09-12T19:41:52Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "```suggestion\r\n## Replay Attacks {#replay-attacks}\r\n```",
              "createdAt": "2023-09-12T19:41:52Z",
              "updatedAt": "2023-09-12T19:41:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85gvOum",
          "commit": {
            "abbreviatedOid": "c904875"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-09-12T19:42:49Z",
          "updatedAt": "2023-09-12T19:44:04Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "```suggestion\r\naccommodate replay attacks. Replaying tokens is not necessarily a security\r\n```\r\n\r\nSince we don't list the attacks before, they're not \"such\"",
              "createdAt": "2023-09-12T19:42:49Z",
              "updatedAt": "2023-09-12T19:44:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85gvPMK",
          "commit": {
            "abbreviatedOid": "c904875"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-12T19:44:16Z",
          "updatedAt": "2023-09-12T19:44:17Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "Is this for consistency? (This isn't needed for the build -- the anchor is automagically included if not explicitly written.)",
              "createdAt": "2023-09-12T19:44:16Z",
              "updatedAt": "2023-09-12T19:44:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85gvP49",
          "commit": {
            "abbreviatedOid": "c904875"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-12T19:45:28Z",
          "updatedAt": "2023-09-12T19:45:28Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "Ah okay, then you can skip it",
              "createdAt": "2023-09-12T19:45:28Z",
              "updatedAt": "2023-09-12T19:45:28Z"
            }
          ]
        }
      ]
    },
    {
      "number": 482,
      "id": "PR_kwDODeTEy85aKiZt",
      "title": "Remove text that refers to spending tokens as a \"response\"",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/482",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "auth-scheme"
      ],
      "body": "Closes #449",
      "createdAt": "2023-09-12T19:54:57Z",
      "updatedAt": "2023-09-12T19:58:18Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "845820ab3d7de7ba6c782093b75ad709636ae8c3",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "tfpauly-patch-35",
      "headRefOid": "221fbcecd9c7bfb990fc5ac3c5e0dab652365764",
      "closedAt": "2023-09-12T19:58:18Z",
      "mergedAt": "2023-09-12T19:58:18Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "dc410b6a5e71c15bed6fe64ec65ec0da95ab2999"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85gvVC1",
          "commit": {
            "abbreviatedOid": "221fbce"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-09-12T19:56:04Z",
          "updatedAt": "2023-09-12T19:56:04Z",
          "comments": []
        }
      ]
    },
    {
      "number": 483,
      "id": "PR_kwDODeTEy85aKigL",
      "title": "Rationalize multiple origins",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/483",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #441 ",
      "createdAt": "2023-09-12T19:55:19Z",
      "updatedAt": "2023-09-12T19:59:26Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "845820ab3d7de7ba6c782093b75ad709636ae8c3",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/multiple-origins",
      "headRefOid": "a897739bfa68432e25df0ded8e06c4fe19d712be",
      "closedAt": "2023-09-12T19:59:25Z",
      "mergedAt": "2023-09-12T19:59:25Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "0a565c133ab7c568c3c365a3ed8aeafbcf141440"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85gvVFf",
          "commit": {
            "abbreviatedOid": "a5526a9"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-12T19:56:10Z",
          "updatedAt": "2023-09-12T19:57:39Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "Cool, thanks for moving up here. That makes sense.",
              "createdAt": "2023-09-12T19:56:10Z",
              "updatedAt": "2023-09-12T19:57:39Z"
            },
            {
              "originalPosition": 24,
              "body": "```suggestion\r\nwith one of the origins in the list. See {{caching}} for more discussion about\r\n```",
              "createdAt": "2023-09-12T19:56:52Z",
              "updatedAt": "2023-09-12T19:57:39Z"
            },
            {
              "originalPosition": 87,
              "body": "```suggestion\r\n### Processing Token Challenges {#process-challenge}\r\n```\r\n\r\nWondering if this sounds better",
              "createdAt": "2023-09-12T19:57:35Z",
              "updatedAt": "2023-09-12T19:57:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85gvVsZ",
          "commit": {
            "abbreviatedOid": "a5526a9"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-09-12T19:57:48Z",
          "updatedAt": "2023-09-12T19:57:48Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODeTEy85gvWPE",
          "commit": {
            "abbreviatedOid": "a5526a9"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-12T19:59:17Z",
          "updatedAt": "2023-09-12T19:59:17Z",
          "comments": [
            {
              "originalPosition": 87,
              "body": "Yep, it does!",
              "createdAt": "2023-09-12T19:59:17Z",
              "updatedAt": "2023-09-12T19:59:17Z"
            }
          ]
        }
      ]
    },
    {
      "number": 484,
      "id": "PR_kwDODeTEy85aKnHa",
      "title": "Clarify some token properties",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/484",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #472 ",
      "createdAt": "2023-09-12T20:10:40Z",
      "updatedAt": "2023-09-12T20:18:00Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "0a565c133ab7c568c3c365a3ed8aeafbcf141440",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/clarify-token-properties",
      "headRefOid": "d6ce8e110008fdc5e851584575190a4a6ac25321",
      "closedAt": "2023-09-12T20:18:00Z",
      "mergedAt": "2023-09-12T20:18:00Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "ebdb7173b666e4cb67093c3b1922f3f2f1ded30b"
      },
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "> I assume we're happy leaving `Nid: N/A` for the greased values, yes?\r\n\r\nYeah, since they're sort of meaningless. I'd also be happy with 0. Honestly, whatever IANA folks prefer!",
          "createdAt": "2023-09-12T20:16:23Z",
          "updatedAt": "2023-09-12T20:16:23Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "body": "Cool, let's merge as is then.",
          "createdAt": "2023-09-12T20:17:56Z",
          "updatedAt": "2023-09-12T20:17:56Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85gvcbZ",
          "commit": {
            "abbreviatedOid": "d6ce8e1"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "I assume we're happy leaving `Nid: N/A` for the greased values, yes?",
          "createdAt": "2023-09-12T20:15:38Z",
          "updatedAt": "2023-09-12T20:15:38Z",
          "comments": []
        }
      ]
    },
    {
      "number": 485,
      "id": "PR_kwDODeTEy85aKs1t",
      "title": "Address mnot's review (modulo problem types)",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/485",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "See [the review here](https://mailarchive.ietf.org/arch/msg/privacy-pass/UY60WAavqC-ailiT2wgMINFfloQ/). This does not address the problem type question, which we should take to the list. \r\n\r\ncc @mnot in case you have spare eyes and time during TPAC.",
      "createdAt": "2023-09-12T20:29:23Z",
      "updatedAt": "2023-09-13T07:56:33Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "ebdb7173b666e4cb67093c3b1922f3f2f1ded30b",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/mnot-review",
      "headRefOid": "d40856201ec6618cf88263179b1e1e87d54072a8",
      "closedAt": "2023-09-12T20:39:15Z",
      "mergedAt": "2023-09-12T20:39:15Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "c02d9d56066baf4dd8224b8ca29af6c3f0d4d79c"
      },
      "comments": [
        {
          "author": "mnot",
          "authorAssociation": "NONE",
          "body": "Took a quick look, lgtm - thanks!",
          "createdAt": "2023-09-13T07:56:32Z",
          "updatedAt": "2023-09-13T07:56:32Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85gvi07",
          "commit": {
            "abbreviatedOid": "9763341"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-12T20:31:13Z",
          "updatedAt": "2023-09-12T20:32:54Z",
          "comments": [
            {
              "originalPosition": 39,
              "body": "These field names should be upper-case for H1 examples",
              "createdAt": "2023-09-12T20:31:13Z",
              "updatedAt": "2023-09-12T20:32:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85gvkl9",
          "commit": {
            "abbreviatedOid": "9763341"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-12T20:36:35Z",
          "updatedAt": "2023-09-12T20:36:35Z",
          "comments": [
            {
              "originalPosition": 39,
              "body": "Fixed",
              "createdAt": "2023-09-12T20:36:35Z",
              "updatedAt": "2023-09-12T20:36:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85gvklI",
          "commit": {
            "abbreviatedOid": "9763341"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-12T20:36:33Z",
          "updatedAt": "2023-09-12T20:36:37Z",
          "comments": [
            {
              "originalPosition": 34,
              "body": "I think you also need a Host header here",
              "createdAt": "2023-09-12T20:36:33Z",
              "updatedAt": "2023-09-12T20:36:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85gvk-3",
          "commit": {
            "abbreviatedOid": "d408562"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-12T20:37:41Z",
          "updatedAt": "2023-09-12T20:37:42Z",
          "comments": [
            {
              "originalPosition": 34,
              "body": "Fixed",
              "createdAt": "2023-09-12T20:37:42Z",
              "updatedAt": "2023-09-12T20:37:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85gvlcD",
          "commit": {
            "abbreviatedOid": "d408562"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-09-12T20:39:01Z",
          "updatedAt": "2023-09-12T20:39:01Z",
          "comments": []
        }
      ]
    },
    {
      "number": 486,
      "id": "PR_kwDODeTEy85aUtlz",
      "title": "Address Alexey's secdir review",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/486",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-09-14T09:59:02Z",
      "updatedAt": "2023-09-14T13:07:44Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "c02d9d56066baf4dd8224b8ca29af6c3f0d4d79c",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/secdir-protocol",
      "headRefOid": "5f0e43d16239c5f154207e88961ac515fb549180",
      "closedAt": "2023-09-14T13:07:44Z",
      "mergedAt": "2023-09-14T13:07:44Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "30649454ae542e624ddc4cd05f3f32fd0dcf550d"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85g9717",
          "commit": {
            "abbreviatedOid": "5f0e43d"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-09-14T13:07:38Z",
          "updatedAt": "2023-09-14T13:07:38Z",
          "comments": []
        }
      ]
    },
    {
      "number": 487,
      "id": "PR_kwDODeTEy85ad5zg",
      "title": "Change media type change controller to IETF",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/487",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Per IANA's suggestion",
      "createdAt": "2023-09-15T18:51:22Z",
      "updatedAt": "2023-09-15T19:53:58Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "30649454ae542e624ddc4cd05f3f32fd0dcf550d",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "chris-wood-patch-5",
      "headRefOid": "aebca6cdad0b096c71a74e0ec0ac3e370295eab5",
      "closedAt": "2023-09-15T19:53:58Z",
      "mergedAt": "2023-09-15T19:53:58Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "0367265e4e8687e44f0efb3210b7cf8f01c67e88"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85hIilh",
          "commit": {
            "abbreviatedOid": "aebca6c"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-09-15T19:53:53Z",
          "updatedAt": "2023-09-15T19:53:53Z",
          "comments": []
        }
      ]
    },
    {
      "number": 488,
      "id": "PR_kwDODeTEy85anG2t",
      "title": "One definition is enough",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/488",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-09-18T20:47:31Z",
      "updatedAt": "2023-09-18T21:41:34Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "0367265e4e8687e44f0efb3210b7cf8f01c67e88",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "chris-wood-patch-6",
      "headRefOid": "be83104dfcf667000f43801af5b97831e447d915",
      "closedAt": "2023-09-18T21:41:34Z",
      "mergedAt": "2023-09-18T21:41:34Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "8e775d0f1a58b87b018e4965f12f80c55bb70898"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85hRrMN",
          "commit": {
            "abbreviatedOid": "be83104"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-09-18T21:40:20Z",
          "updatedAt": "2023-09-18T21:40:20Z",
          "comments": []
        }
      ]
    },
    {
      "number": 489,
      "id": "PR_kwDODeTEy85a55lF",
      "title": "Address Rob's architecture review",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/489",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-09-21T15:34:17Z",
      "updatedAt": "2023-09-21T15:58:51Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "94db926b5ba74072f619e8e6a0b527041fb804fb",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/rob-iesg",
      "headRefOid": "80e53ae89c516d27491834360387a76df9a0c33c",
      "closedAt": "2023-09-21T15:58:51Z",
      "mergedAt": "2023-09-21T15:58:51Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "b27488203fd3a57298dbae2e1d40a0df54007a52"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85hpTlf",
          "commit": {
            "abbreviatedOid": "80e53ae"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-09-21T15:57:57Z",
          "updatedAt": "2023-09-21T15:57:57Z",
          "comments": []
        }
      ]
    },
    {
      "number": 490,
      "id": "PR_kwDODeTEy85a56WT",
      "title": "Address Lars' protocol review",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/490",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-09-21T15:36:14Z",
      "updatedAt": "2023-09-21T15:59:38Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "94db926b5ba74072f619e8e6a0b527041fb804fb",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/lars-protocol",
      "headRefOid": "f695b14b81be837f42e91e3b05404769a6495a5d",
      "closedAt": "2023-09-21T15:59:38Z",
      "mergedAt": "2023-09-21T15:59:38Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "0ffb133c8a4253b6f7cd21057deab90eb4db0813"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85hpUYp",
          "commit": {
            "abbreviatedOid": "f695b14"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-09-21T15:59:30Z",
          "updatedAt": "2023-09-21T15:59:30Z",
          "comments": []
        }
      ]
    },
    {
      "number": 491,
      "id": "PR_kwDODeTEy85a7bad",
      "title": "Address Roman's architecture IESG review",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/491",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-09-21T20:28:39Z",
      "updatedAt": "2023-09-21T23:27:01Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "0ffb133c8a4253b6f7cd21057deab90eb4db0813",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/roman-arch",
      "headRefOid": "b58dda567f5cd5844ad8104efebc51f5cf6283b4",
      "closedAt": "2023-09-21T23:27:01Z",
      "mergedAt": "2023-09-21T23:27:01Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "6efd75e4c897fe1e838ec9a3fb44d9cbe88f3136"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85hrZS2",
          "commit": {
            "abbreviatedOid": "9aaf146"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-09-21T21:59:42Z",
          "updatedAt": "2023-09-21T22:00:34Z",
          "comments": [
            {
              "originalPosition": 192,
              "body": "```suggestion\r\nFor this reason, deployments should take the amount of metadata used by an Issuer\r\n```",
              "createdAt": "2023-09-21T21:59:42Z",
              "updatedAt": "2023-09-21T22:00:34Z"
            },
            {
              "originalPosition": 204,
              "body": "```suggestion\r\nThe number of permitted metadata values often depends on deployment-specific\r\n```",
              "createdAt": "2023-09-21T22:00:00Z",
              "updatedAt": "2023-09-21T22:00:34Z"
            }
          ]
        }
      ]
    },
    {
      "number": 492,
      "id": "PR_kwDODeTEy85a7hhE",
      "title": "Address Murray's IESG review of the protocol document",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/492",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-09-21T20:49:14Z",
      "updatedAt": "2023-09-21T22:05:58Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "0ffb133c8a4253b6f7cd21057deab90eb4db0813",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/murray-protocol",
      "headRefOid": "d0af966fde28636d12d7f6918e485e9f38173763",
      "closedAt": "2023-09-21T22:05:58Z",
      "mergedAt": "2023-09-21T22:05:58Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "f938600e370b154d6e0725ee0e148b837a482e53"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85hrSBe",
          "commit": {
            "abbreviatedOid": "9c8bfb5"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-09-21T21:29:34Z",
          "updatedAt": "2023-09-21T21:30:43Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\n\"not-before\" value or has a \"not-before\" value in the past, since the first such key is the\r\nmost likely to be valid in the given time window. Origins can attempt\r\n```",
              "createdAt": "2023-09-21T21:29:34Z",
              "updatedAt": "2023-09-21T21:30:43Z"
            },
            {
              "originalPosition": 6,
              "body": "Is this clearer?",
              "createdAt": "2023-09-21T21:29:41Z",
              "updatedAt": "2023-09-21T21:30:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85hrY-C",
          "commit": {
            "abbreviatedOid": "9c8bfb5"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-21T21:58:09Z",
          "updatedAt": "2023-09-21T21:58:09Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "Yep!",
              "createdAt": "2023-09-21T21:58:09Z",
              "updatedAt": "2023-09-21T21:58:09Z"
            }
          ]
        }
      ]
    },
    {
      "number": 493,
      "id": "PR_kwDODeTEy85a-jSb",
      "title": "Address John's IESG review of the architecture document",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/493",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-09-22T10:27:21Z",
      "updatedAt": "2023-09-25T16:15:16Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "6efd75e4c897fe1e838ec9a3fb44d9cbe88f3136",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/john-architecture",
      "headRefOid": "c27c37745b085d38cedc25c97ddcb8817358a85c",
      "closedAt": "2023-09-25T16:15:16Z",
      "mergedAt": "2023-09-25T16:15:15Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "e669a808e78a5b474c889ddb451ebabac78c79a6"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85hwOQz",
          "commit": {
            "abbreviatedOid": "ec16644"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-22T14:02:46Z",
          "updatedAt": "2023-09-22T14:02:47Z",
          "comments": [
            {
              "originalPosition": 89,
              "body": "```suggestion\r\nEntities that are not encapsulated by a bounding box are assumed to not\r\n```",
              "createdAt": "2023-09-22T14:02:47Z",
              "updatedAt": "2023-09-22T14:02:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85hypRG",
          "commit": {
            "abbreviatedOid": "d438cbd"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-09-22T21:34:20Z",
          "updatedAt": "2023-09-22T21:34:24Z",
          "comments": [
            {
              "originalPosition": 91,
              "body": "```suggestion\r\nAttester, Issuer, and Origin. Entities drawn within the same bounding box are\r\nassumed to be operated by the same party and are therefore able to collude.\r\nCollusion can enable linking of attestation, issuance, and redemption contexts.\r\nEntities not drawn within the same bounding box are assumed to not\r\ncollude, meaning that entities operated by separate parties that do not collude.\r\nMechanisms for enforcing non-collusion are out of scope for this architecture.\r\n```",
              "createdAt": "2023-09-22T21:34:20Z",
              "updatedAt": "2023-09-22T21:34:24Z"
            }
          ]
        }
      ]
    },
    {
      "number": 494,
      "id": "PR_kwDODeTEy85bBgrG",
      "title": "Address Roman's IESG review of the protocol document",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/494",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-09-22T21:09:35Z",
      "updatedAt": "2023-09-25T16:15:33Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "6efd75e4c897fe1e838ec9a3fb44d9cbe88f3136",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/roman-protocol",
      "headRefOid": "2a23d1262cb4e821ece4f477aeb22427bd0ed8be",
      "closedAt": "2023-09-25T16:15:32Z",
      "mergedAt": "2023-09-25T16:15:32Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "63028a13c4bbfd49170dd0ab03485b58639f9fac"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85hyph8",
          "commit": {
            "abbreviatedOid": "88063ec"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-09-22T21:35:44Z",
          "updatedAt": "2023-09-22T21:35:55Z",
          "comments": [
            {
              "originalPosition": 61,
              "body": "Is putting echo / openssl commands standard for such document?",
              "createdAt": "2023-09-22T21:35:44Z",
              "updatedAt": "2023-09-22T21:35:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85hy4ZW",
          "commit": {
            "abbreviatedOid": "88063ec"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-22T23:08:25Z",
          "updatedAt": "2023-09-22T23:08:26Z",
          "comments": [
            {
              "originalPosition": 61,
              "body": "I don't know if it's standard, but we already do this elsewhere in the document \ud83e\udd37",
              "createdAt": "2023-09-22T23:08:26Z",
              "updatedAt": "2023-09-22T23:08:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85hy4mY",
          "commit": {
            "abbreviatedOid": "88063ec"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-22T23:10:25Z",
          "updatedAt": "2023-09-22T23:10:25Z",
          "comments": [
            {
              "originalPosition": 61,
              "body": "For the openssl part, yeah. Cool.",
              "createdAt": "2023-09-22T23:10:25Z",
              "updatedAt": "2023-09-22T23:10:25Z"
            }
          ]
        }
      ]
    },
    {
      "number": 495,
      "id": "PR_kwDODeTEy85btLMP",
      "title": "Make the timing correlation reference more specific",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/495",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #458",
      "createdAt": "2023-10-02T19:36:32Z",
      "updatedAt": "2023-10-02T21:53:09Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "63028a13c4bbfd49170dd0ab03485b58639f9fac",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "tfpauly-patch-36",
      "headRefOid": "8978ac288e389635290bcf83dac43a98289e8930",
      "closedAt": "2023-10-02T21:53:09Z",
      "mergedAt": "2023-10-02T21:53:09Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "1087ed345fdea3214ec90ce8562a3d8572070869"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85ijnfk",
          "commit": {
            "abbreviatedOid": "8978ac2"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-10-02T20:57:53Z",
          "updatedAt": "2023-10-02T20:57:53Z",
          "comments": []
        }
      ]
    },
    {
      "number": 496,
      "id": "PR_kwDODeTEy85btwIA",
      "title": "Address Roman's reference nit",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/496",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "See [this comment](https://mailarchive.ietf.org/arch/msg/privacy-pass/AEUTX8EV_kQuHSoVsGoir4rE9tE/).",
      "createdAt": "2023-10-02T21:02:00Z",
      "updatedAt": "2023-10-03T13:07:17Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "63028a13c4bbfd49170dd0ab03485b58639f9fac",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/roman-nit",
      "headRefOid": "df51070a3c898bad093609a480086ae47d862e96",
      "closedAt": "2023-10-03T13:07:17Z",
      "mergedAt": "2023-10-03T13:07:17Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "fd7354f4932fd03228fbaad75e3f19428a3be545"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85ijp6q",
          "commit": {
            "abbreviatedOid": "99d2e60"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-02T21:05:06Z",
          "updatedAt": "2023-10-02T21:05:06Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "```suggestion\r\nas a DER-encoded RSAPublicKey value {{?RFC5756}} in the subjectPublicKey\r\n```",
              "createdAt": "2023-10-02T21:05:06Z",
              "updatedAt": "2023-10-02T21:05:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85ij4xL",
          "commit": {
            "abbreviatedOid": "df51070"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-10-02T21:55:22Z",
          "updatedAt": "2023-10-02T21:55:22Z",
          "comments": []
        }
      ]
    },
    {
      "number": 497,
      "id": "PR_kwDODeTEy85byjhJ",
      "title": "Murray's exception rationale",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/497",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "See [this comment](https://mailarchive.ietf.org/arch/msg/privacy-pass/QP9cPHLqotg1TrEU_L-qKH9sZhY/).",
      "createdAt": "2023-10-03T13:09:05Z",
      "updatedAt": "2023-10-03T16:03:05Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "fd7354f4932fd03228fbaad75e3f19428a3be545",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "chris-wood-patch-7",
      "headRefOid": "d28411ecc6c03cd0cceb950e3973be90237d8006",
      "closedAt": "2023-10-03T16:03:05Z",
      "mergedAt": "2023-10-03T16:03:05Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "a8c671fe5f2fa193e7f4896c75caa5e1c3984d01"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85irjrM",
          "commit": {
            "abbreviatedOid": "d28411e"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-10-03T16:01:55Z",
          "updatedAt": "2023-10-03T16:01:55Z",
          "comments": []
        }
      ]
    },
    {
      "number": 500,
      "id": "PR_kwDODeTEy85cxot5",
      "title": "Fix typo",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/500",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "cc @DavidSchinazi",
      "createdAt": "2023-10-13T21:32:00Z",
      "updatedAt": "2023-10-16T13:23:15Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "a8c671fe5f2fa193e7f4896c75caa5e1c3984d01",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "chris-wood-patch-8",
      "headRefOid": "d7cadfa6a8c66e3308b5492b70bef092234fa324",
      "closedAt": "2023-10-16T13:23:15Z",
      "mergedAt": "2023-10-16T13:23:15Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "53f43a01926911b0453e789c0bfd00036a97f21e"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85j-zR4",
          "commit": {
            "abbreviatedOid": "d7cadfa"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-10-13T21:33:42Z",
          "updatedAt": "2023-10-13T21:33:42Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODeTEy85j-7Dj",
          "commit": {
            "abbreviatedOid": "d7cadfa"
          },
          "author": "DavidSchinazi",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-10-13T21:51:24Z",
          "updatedAt": "2023-10-13T21:51:24Z",
          "comments": []
        }
      ]
    },
    {
      "number": 502,
      "id": "PR_kwDODeTEy85dJPwP",
      "title": "Add test vector for greasing in draft-ietf-privacypass-auth-scheme",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/502",
      "state": "MERGED",
      "author": "thibmeu",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Test vectors for greasing would help implementation validate their handling of grease cases, at issuance and redemption.\r\n\r\nThis commit provide two new test vectors for token_type 0000 (RESERVED).",
      "createdAt": "2023-10-18T13:46:07Z",
      "updatedAt": "2023-10-23T15:57:29Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "82b858d8ca23faec197a29a6b008839cfc857326",
      "headRepository": "thibmeu/base-drafts",
      "headRefName": "main",
      "headRefOid": "899155788a3ee33d5e9cbbe061acc0a650e574a1",
      "closedAt": "2023-10-23T15:57:29Z",
      "mergedAt": "2023-10-23T15:57:29Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "e15a63b50ddeb5cf13688607305c53e95eb53c0d"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85khy6n",
          "commit": {
            "abbreviatedOid": "59e0ef3"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-10-19T03:10:19Z",
          "updatedAt": "2023-10-19T03:10:19Z",
          "comments": []
        },
        {
          "id": "PRR_kwDODeTEy85knCXY",
          "commit": {
            "abbreviatedOid": "59e0ef3"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2023-10-19T14:46:49Z",
          "updatedAt": "2023-10-19T14:48:37Z",
          "comments": [
            {
              "originalPosition": 59,
              "body": "```suggestion\r\nThe last challenge on this list includes Basic authentication, as well as a\r\ngreasing challenge. Correct client implementations will ignore both challenges.\r\n```",
              "createdAt": "2023-10-19T14:46:49Z",
              "updatedAt": "2023-10-19T14:48:37Z"
            },
            {
              "originalPosition": 77,
              "body": "Why would a client ignore this challenge?",
              "createdAt": "2023-10-19T14:48:23Z",
              "updatedAt": "2023-10-19T14:48:37Z"
            },
            {
              "originalPosition": 93,
              "body": "How was this test vector generated?",
              "createdAt": "2023-10-19T14:48:34Z",
              "updatedAt": "2023-10-19T14:48:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85knh3-",
          "commit": {
            "abbreviatedOid": "59e0ef3"
          },
          "author": "thibmeu",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "Updated based on @chris-wood comments",
          "createdAt": "2023-10-19T15:43:15Z",
          "updatedAt": "2023-10-19T15:47:47Z",
          "comments": [
            {
              "originalPosition": 93,
              "body": "token-challenge-1 is the same as above.\r\ntoken-challenge-0 with the below script on my local machine\r\n```javascript\r\nconst hex_encode = (u) =>\r\n  Array.from(u).map((b) => b.toString(16).padStart(2, 0)).join('')\r\n\r\nconst u8ToB64 = (u) =>\r\n  btoa(String.fromCharCode(...u))\r\n\r\nconst b64ToB64URL = (s) =>\r\n  s.replace(/\\+/g, '-').replace(/\\//g, '_')\r\n\r\nconst u8ToB64URL = (u) =>\r\n  b64ToB64URL(u8ToB64(u))\r\n\r\nconst main = () => {\r\n  const challenge = new Uint8Array(64+2)\r\n  crypto.getRandomValues(challenge);\r\n  challenge[0] = 0;\r\n  challenge[1] = 0;\r\n  console.log('token-challenge:', hex_encode(challenge))\r\n\r\n  const key = new Uint8Array(128);\r\n  crypto.getRandomValues(key);\r\n  console.log('token-key:', hex_encode(key))\r\n\r\n  const header = `PrivateToken challenge=\"${u8ToB64URL(challenge)}\",token-key=\"${u8ToB64URL(key)}\"`\r\n\r\n  console.log('WWW-Authenticate:', header)\r\n}\r\n\r\nmain()\r\n```",
              "createdAt": "2023-10-19T15:43:15Z",
              "updatedAt": "2023-10-19T15:47:47Z"
            },
            {
              "originalPosition": 77,
              "body": "client would ignore Basic and 0x0000. They should not ignore 0x0001.",
              "createdAt": "2023-10-19T15:44:16Z",
              "updatedAt": "2023-10-19T15:47:47Z"
            },
            {
              "originalPosition": 59,
              "body": "I'm updating this paragraph to\r\n```\r\nThe last challenge on this list includes Basic authentication, a greasing challenge, and a valid VOPRF challenge. Correct client implementations will ignore both Basic and greasing challenges, while handling the last VOPRF challenge.\r\n```",
              "createdAt": "2023-10-19T15:45:32Z",
              "updatedAt": "2023-10-19T15:47:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85knnvf",
          "commit": {
            "abbreviatedOid": "59e0ef3"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-19T15:50:16Z",
          "updatedAt": "2023-10-19T15:50:16Z",
          "comments": [
            {
              "originalPosition": 77,
              "body": "Right, that's what I thought, but the text suggests that clients ought to ignore both.",
              "createdAt": "2023-10-19T15:50:16Z",
              "updatedAt": "2023-10-19T15:50:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85knons",
          "commit": {
            "abbreviatedOid": "59e0ef3"
          },
          "author": "thibmeu",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-19T15:52:06Z",
          "updatedAt": "2023-10-19T15:52:06Z",
          "comments": [
            {
              "originalPosition": 77,
              "body": "I seems github has not correctly assigned my comment https://github.com/ietf-wg-privacypass/base-drafts/pull/502#discussion_r1365766838. The text has been updated.",
              "createdAt": "2023-10-19T15:52:06Z",
              "updatedAt": "2023-10-19T15:52:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85knqp0",
          "commit": {
            "abbreviatedOid": "feea2ce"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-10-19T15:55:11Z",
          "updatedAt": "2023-10-19T20:06:57Z",
          "comments": [
            {
              "originalPosition": 61,
              "body": "```suggestion\r\ngreasing challenge, and a valid challenge for token type `0x0001`.\r\nCorrect client implementations will ignore the Basic and grease challenges.\r\n```",
              "createdAt": "2023-10-19T15:55:12Z",
              "updatedAt": "2023-10-19T20:06:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODeTEy85kspPP",
          "commit": {
            "abbreviatedOid": "feea2ce"
          },
          "author": "thibmeu",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-20T07:36:44Z",
          "updatedAt": "2023-10-20T07:36:44Z",
          "comments": [
            {
              "originalPosition": 61,
              "body": "the text has been updated accordingly.",
              "createdAt": "2023-10-20T07:36:44Z",
              "updatedAt": "2023-10-20T07:36:44Z"
            }
          ]
        }
      ]
    },
    {
      "number": 503,
      "id": "PR_kwDODeTEy85dNG6r",
      "title": "Clarify responding to multiple token challenges",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/503",
      "state": "MERGED",
      "author": "smhendrickson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #501",
      "createdAt": "2023-10-19T00:15:18Z",
      "updatedAt": "2023-10-19T03:06:54Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "53f43a01926911b0453e789c0bfd00036a97f21e",
      "headRepository": "smhendrickson/base-drafts",
      "headRefName": "patch-4",
      "headRefOid": "85edf83930e39de082e7a8f4f74efd7738fd341a",
      "closedAt": "2023-10-19T03:06:54Z",
      "mergedAt": "2023-10-19T03:06:54Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "82b858d8ca23faec197a29a6b008839cfc857326"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85khyVh",
          "commit": {
            "abbreviatedOid": "85edf83"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-10-19T03:06:49Z",
          "updatedAt": "2023-10-19T03:06:49Z",
          "comments": []
        }
      ]
    },
    {
      "number": 505,
      "id": "PR_kwDODeTEy85iY8Zv",
      "title": "Fix typos in protocol spec",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/505",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #504",
      "createdAt": "2023-12-19T16:37:44Z",
      "updatedAt": "2023-12-19T21:03:25Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "26e0aa4d9ec8e86889968bbaaaaaa1aaa394e6b4",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/fix-typos",
      "headRefOid": "bfd536b47a24cfa93f088c5df36aa2e0fac0595b",
      "closedAt": "2023-12-19T16:47:36Z",
      "mergedAt": "2023-12-19T16:47:36Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "ad684be430702e7010fff2d6103344461bf4640f"
      },
      "comments": [
        {
          "author": "paulwouters",
          "authorAssociation": "NONE",
          "body": "Note that I wouldn\u2019t call this change a \u201ctypo\u201d. It\u2019s a substantive change of the nonce parameter.Sent using a virtual keyboard on a phoneOn Dec 19, 2023, at 11:47, Tommy Pauly ***@***.***> wrote:\ufeff\r\nMerged #505 into main.\r\n\r\n\u2014Reply to this email directly, view it on GitHub, or unsubscribe.You are receiving this because you are subscribed to this thread.Message ID: ***@***.***>",
          "createdAt": "2023-12-19T21:03:24Z",
          "updatedAt": "2023-12-19T21:03:24Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDODeTEy85qpsNI",
          "commit": {
            "abbreviatedOid": "bfd536b"
          },
          "author": "tfpauly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-12-19T16:47:25Z",
          "updatedAt": "2023-12-19T16:47:25Z",
          "comments": []
        }
      ]
    },
    {
      "number": 506,
      "id": "PR_kwDODeTEy85mW4js",
      "title": "Update existing implementation token types support",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/506",
      "state": "OPEN",
      "author": "thibmeu",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "[raphaelrobert/privacypass](https://github.com/raphaelrobert/privacypass) supports Batched tokens (type 63770).\r\n[cloudflare/privacypass-ts](https://github.com/cloudflare/privacypass-ts) supports VOPRF tokens (type 1).",
      "createdAt": "2024-02-08T10:33:33Z",
      "updatedAt": "2024-02-08T10:33:33Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "2f66ebde518485e190014dcd3b44070a462233bb",
      "headRepository": "thibmeu/base-drafts",
      "headRefName": "update-token-support",
      "headRefOid": "ed02d453ccfb3462fef77150efb9f7e191792076",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": []
    },
    {
      "number": 507,
      "id": "PR_kwDODeTEy85nbsXJ",
      "title": "Fix TLS presentation language types",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/507",
      "state": "OPEN",
      "author": "aykutbulut",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "TLS presentation language types are in form of `uint8` not `uint8_t`. \r\nSee [rfc8446.html#section-3.3](https://www.rfc-editor.org/rfc/rfc8446.html#section-3.3).",
      "createdAt": "2024-02-20T19:00:11Z",
      "updatedAt": "2024-02-20T19:00:11Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "2f66ebde518485e190014dcd3b44070a462233bb",
      "headRepository": "aykutbulut/privacypass-base-drafts",
      "headRefName": "fix_tls_types",
      "headRefOid": "1c178f98d5e03edf55463bbd82e29d475120b3e4",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": []
    },
    {
      "number": 508,
      "id": "PR_kwDODeTEy85sQQG4",
      "title": "Extend the token type registry for batched issuance",
      "url": "https://github.com/ietf-wg-privacypass/base-drafts/pull/508",
      "state": "OPEN",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Based on mailing list discussion, it seems like we ought to allow issuance protocols to use batched versions of token type algorithms if they're present. It seems like indicating whether or not a token type admits batching is the cleanest way to accommodate that. This will accompany a proposed change to the batched issuance spec which (1) specifies the `BatchTokenRequest/Response` media types for issuance, and (2) allocates the ristretto255-based VOPRF token type.\r\n\r\ncc @raphaelrobert ",
      "createdAt": "2024-04-10T14:27:45Z",
      "updatedAt": "2024-04-10T14:27:45Z",
      "baseRepository": "ietf-wg-privacypass/base-drafts",
      "baseRefName": "main",
      "baseRefOid": "2f66ebde518485e190014dcd3b44070a462233bb",
      "headRepository": "ietf-wg-privacypass/base-drafts",
      "headRefName": "caw/add-batches",
      "headRefOid": "ff9018d83ecff7f87328688abce46793d7c33fa3",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": []
    }
  ]
}